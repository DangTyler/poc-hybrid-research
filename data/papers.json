[
  {
    "paperId": "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
    "title": "How Powerful are Graph Neural Networks?",
    "abstract": "Graph Neural Networks (GNNs) are an effective framework for representation learning of graphs. GNNs follow a neighborhood aggregation scheme, where the representation vector of a node is computed by recursively aggregating and transforming representation vectors of its neighboring nodes. Many GNN variants have been proposed and have achieved state-of-the-art results on both node and graph classification tasks. However, despite GNNs revolutionizing graph representation learning, there is limited understanding of their representational properties and limitations. Here, we present a theoretical framework for analyzing the expressive power of GNNs to capture different graph structures. Our results characterize the discriminative power of popular GNN variants, such as Graph Convolutional Networks and GraphSAGE, and show that they cannot learn to distinguish certain simple graph structures. We then develop a simple architecture that is provably the most expressive among the class of GNNs and is as powerful as the Weisfeiler-Lehman graph isomorphism test. We empirically validate our theoretical findings on a number of graph classification benchmarks, and demonstrate that our model achieves state-of-the-art performance.",
    "citationCount": 7747,
    "references": [
      "de9550945b2f631c541c299114a770c4f47f9616",
      "acc43abe319bca7652a91f7d4ca6187049fb82e4",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "e51e557cf4701510916bb1444074f62e6a04f889",
      "1a8ee9382e79b92986f9d780a929fc2d2be2f47b",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "ecf6c42d84351f34e1625a6a2e4cc6526da45c74",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "007112213ece771be72cbecfd59f048209facabd",
      "ee9c6aeb6e29cf3c9081df2cc100b8203ebf5cff",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "a456265138c088a894301c0433dae938705a9bec",
      "d997beefc0922d97202789d2ac307c55c2c52fba",
      "ae42c0cff384495683192b06bd985cdd7a54632a",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "7c6de5a9e02a779e24504619050c6118f4eac181",
      "561c3fa53d36405186da9cab02bd68635c3738aa",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "18b47b83a373f33d6b902a3615f42c10f7600d72",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "00d736c540f80582279093cfc5ffe454a3226da9",
      "995c5f5e62614fcb4d2796ad2faab969da51713e",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "273dfbcb68080251f5e9ff38b4413d7bd84b10a1",
      "7e1874986cf6433fabf96fff93ef42b60bdc49f8",
      "9b44a53069dcf4dc10c34e456bf3a5ff160d3ede",
      "342fe6a6338e73fd4d34c4f37f41e3bbad274dd2",
      "ef8772242235273359511b139691f2f88eb5e87a",
      "09d2aa3b77e23eb322118786af66c29b204a5caa",
      "262d9a9cd7b99a6008e59d440c8fadf1f375b51e",
      "d35f1e533b72370683d8fa2dabff5f0fc16490cc",
      "11cf4bea8ffde8225eaea72e71b4c8497f240d72",
      "f22f6972e66bdd2e769fa64b0df0a13063c0c101",
      "c53062136a610a9a2e8e9d8b3d7fd1f7ad701e03",
      null,
      "ed2098bfd3553887f388717cd41e285531944b2e",
      null,
      "34f25a8704614163c4095b3ee2fc969b60de4698",
      "104c4017c200f434dc7ecfbef143b5f135497abc",
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      null,
      null
    ]
  },
  {
    "paperId": "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
    "title": "A Comprehensive Survey on Graph Neural Networks",
    "abstract": "Deep learning has revolutionized many machine learning tasks in recent years, ranging from image classification and video processing to speech recognition and natural language understanding. The data in these tasks are typically represented in the Euclidean space. However, there is an increasing number of applications, where data are generated from non-Euclidean domains and are represented as graphs with complex relationships and interdependency between objects. The complexity of graph data has imposed significant challenges on the existing machine learning algorithms. Recently, many studies on extending deep learning approaches for graph data have emerged. In this article, we provide a comprehensive overview of graph neural networks (GNNs) in data mining and machine learning fields. We propose a new taxonomy to divide the state-of-the-art GNNs into four categories, namely, recurrent GNNs, convolutional GNNs, graph autoencoders, and spatial\u2013temporal GNNs. We further discuss the applications of GNNs across various domains and summarize the open-source codes, benchmark data sets, and model evaluation of GNNs. Finally, we propose potential research directions in this rapidly growing field.",
    "citationCount": 8651,
    "references": [
      "3db5fcb595492dcd64663c00d56f004dfafa689c",
      "fd075bcdf2d7e13d23f7c249a8eded343d5bbe3b",
      "36cf500079b82e3adf4a3afe3356c1c03426bdcd",
      "40f8ec2b554c501d5044b3e83bd40bdb7e5a2d8a",
      "fae129338c0899576524506008427f64477d3967",
      "05c4eb154ad9512a69569c18d68bc4428ee8bb83",
      "57e5f168536b536d3f2e84a8b5b7f9c112c90b43",
      "ee8b1603c79a4f9c3bdc0d6633b595aa93ff3a0f",
      "88b1f417c9581d9ddb8083e591c2310fb4e24796",
      "00b7efbf14a54cced4b9f19e663b70ffbd01324b",
      "4a751d520534771593d359069f99d7c4621a861a",
      "30b38ca8151bbd5a5ff45bce94297d1248ff58b5",
      "80d65eda89a4e5472f95e5a304604c80866d8748",
      "c2d40522eaa5523d67a0de5e4098e7031fdccb3d",
      "e7f5929d261af9f525461c879a3a2827a838befd",
      "afbf13acbc28549ff57cdf0b89506785f494c346",
      "ad08da5951437c117551a63c2f8b943bee2029ce",
      "36011ae319059d9da156aa42f3f03391992bdda8",
      "d77c0e84972c256a8922b952b04330e369f65f09",
      "dfa2fe00291a69d5fe982a6d980f35a8e58b0de6",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "967a21a111757d6af7f7a25ca7ea2bdf6d505098",
      "6541afa4b4061a7d5c8387514bedea9dc249fd80",
      "a7b5b9eaf519d9374428a0aeb4b659615884718a",
      "68030c396dc2c02ffe1232f4cb177b9da93662d1",
      "abfa95058fa50c55a0b923a6c35830f470c125ad",
      "4ce19e59b6c99b960df645d753fd29d2ccd9b7b4",
      "c8865b6184877fce2873a448d32c1bfd5ba685f2",
      "9801763d1acb87fd7e421adaa7ff7a00527c8d6c",
      "a79ee3eeb567a1758a081b6965013bca0de5acfc",
      "1fad7fe0a7a90a8470a0688ad26bab6ceb8a85b7",
      "cc23c580b7d8063415fb6eb512053d1079b849de",
      "dbf125bfe07856a63d4aab612c0063fc8c7b6484",
      "59d502851cd20f28af03eef1d15dc83d3a7bb300",
      "d5aefe86b1ba8c773a6bd0e84812ace161b8c0db",
      "e9e0f9477f0bafb5016d7af525515724e71509a0",
      "9fa3e53b5937a0ec92499ed415e339ede6c92010",
      "0132b27e3681ce910ae74643e33a53b74bd5f5c7",
      "4d26762fe26da6e06919a3b66e0f29429867d9f0",
      "a5697fc927d15640954485ba2e7bb747a637405a",
      "acfe5b5c99be70fa3120d410e7be55b9fe299f40",
      "f11198dc277af1c5547ab3ae8d562fc8c16a7c70",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "04ecc68f27f8adcd986cf86b89861d0766c3feb1",
      "d9f836a2062864e4808e12224e2286a353498202",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "def1049b5aae96c8e1eab0ca58d77ac9c2f0e3e9",
      "a0a79f30fcd29a6e3094f03cdde4eac8c995ff80",
      "f421bc84f36028d2c1e31ae03ef9e6dc53841734",
      "1a8ee9382e79b92986f9d780a929fc2d2be2f47b",
      "6c44f8e62d824bcda4f291c679a5518bbd4225f6",
      "b4812702a7c1c47e2af34d8752b2103505089fc2",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "af0cf9da53bf3e1e6d349faed14cb68ad71aa2a4",
      "6411da05a0e6f3e38bcac0ce57c28038ff08081c",
      "d0b66e82f9386c16c489fb5e4bb5fa01a2da754b",
      "46b5d408d950287637dd21ce04772d9b2bacfd14",
      "57c36f13b188816051a27478e2f56bb284f4fb13",
      "c097be22f1e87a846385047346b73610d91fea4e",
      "dcd5b17b26c028b574cfcadd0d4e47b8d169ce5c",
      "e4715a13f6364b1c81e64f247651c3d9e80b6808",
      "2afa9966c37b7747d954a4dcd61e986247783683",
      "839c4dd710ae7a234424aeda2f1423e0ce61bd5e",
      "83b44a37ddf121e660c873e207c2909b79f23469",
      "f32f16ca3c27ff945198c6551a5d35fae3b1a660",
      "7dd434b3799a6c8c346a1d7ee77d37980a4ef5b9",
      "d16fc73b803f8ba8d95ba2212a8fc77ea028e358",
      "8913c23081e46a41cc7ced3c2ff379d9cd7afcde",
      "127af6effc74f073ac2442f6d82c944f562e2c0f",
      "e156edf6d11dc19580c2e70940645fb107893817",
      "2503dff90685857ce7295e37d0045e2eef41c8b8",
      "e1799aaf23c12af6932dc0ef3dfb1638f01413d1",
      "efeaa6e3114d6d6ae5c3041b66ac9a9ae9bf52bf",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "51a2bc2e8fb8ed47a085df33dd965e57335080a0",
      "62a90fbb0dc2f4c2cb777aa43dce2ae872fede2c",
      "7a2e527b6d51071a54aac7a8bdb56ca735a1f78b",
      "a73531abe4cafbccd5b3e949e84410a50016bd33",
      "ce840188f3395815201b7da49f9bb40d24fc046a",
      "f7b1453416d3d95af19ff465104e78968920354d",
      "c751ab01aedc2888a7fe6e8b4f77ab1afa94072f",
      "572a1f77306e160c3893299c18f3ed862fb5f6d9",
      "e6ea85add58fb25448042edb9af16f0d955c17da",
      "5f1d429ba574581ac14effe3ebab654a57dc0e39",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "a60c69c2fae27ebbb73c87f7f2a4765556bd7f9f",
      "49a5b5e65078eff512083d9de413d49a8aadc064",
      "4ebf5a9c35f40d3343a2376d0b75d8d7a3126d8d",
      "006906b6bbe5c1f378cde9fd86de1ce9e6b131da",
      "ecf6c42d84351f34e1625a6a2e4cc6526da45c74",
      "72edcb3788f9c141a3ed28e6d36f75ca4977d27e",
      "b7c4570d7d97f327e7f82fe28100172ec5e94cac",
      "9ba0186ed40656329c421f55ada7313293e13f17",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "fdc708aaa0d18c791f878ff2214201410fa52439",
      "15d739e2c184a6844bdbd9a2550d007de6ddb085",
      "b5007972c6f5a2294f83357c73e12664dd7c85b3",
      "374b4409f6a1d2d853af31e329f025da239d375f",
      "2784000e1a3554374662f4d18cb5ad52f59c8de6",
      "1a39bb2caa151d15efd6718f3a80d9f4bff95af2",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "ace1059fd85bbb8b41874a47a029bba7899124a5",
      "edf73ab12595c6709f646f542a0d2b33eb20a3f4",
      "cd8a9914d50b0ac63315872530274d158d6aff09",
      "c3a3c163f25b9181f1fb7e71a32482a7393d2088",
      "222928303a72d1389b0add8032a31abccbba41b3",
      "835be507fd8a9203f1e16ce8427f91d4a2a5e9a1",
      "c29bd654bb198305934e3e2a721edecafbc003e9",
      "ec6d5e9f959aa2c10dff89faf97f1240610464b6",
      "2f85b7376769473d2bed56f855f115e23d727094",
      "34b73c1aa158b892bbe41705b4ae5bf01ecaea86",
      "6b1793ece5993523855ce67c646de408318d1b12",
      "ade1b1bfe2abefbcfe324499aa284db2b8fc50a6",
      "f09f7888aa5aeaf88a2a44aea768d9a8747e97d2",
      "0e779fd59353a7f1f5b559b9d65fa4bfe367890c",
      "0cb9e3d02a4236ab003d07c81f65b1db8c865fb6",
      "54906484f42e871f7c47bbfe784a358b1448231f",
      "edbc873a248768a626ef2bc57b3d1eff30de0e11",
      "88427d2143d4cff357c3b393ae7580a7b6e19940",
      "28f7cc049f3f4a4db81f0d0a608a4f57636cc35b",
      "c6850869aa5e78a107c378d2e8bfa39633158c0c",
      "97f7ef7a5332218e0e9ce75ad5cf77048466ca83",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "d0b7c8828f0fca4dd901674e8fb5bd464a187664",
      "8ba7631515d5e7e0c451af1c4772507f41540a5e",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "ba8d37f2e98d70f917d0d3a49c387cef6867e65e",
      "7c6de5a9e02a779e24504619050c6118f4eac181",
      "24b37f0e0187ee8492dc33cc8945e2793277ecde",
      "561c3fa53d36405186da9cab02bd68635c3738aa",
      "fcf6783fb749f9579f69fa56d0283e633fa5ffd8",
      "1a37f07606d60df365d74752857e8ce909f700b3",
      "2c03df8b48bf3fa39054345bafabfeff15bfd11d",
      "d01379ebb53c66a4ccf5f4959d904dcf9e161e41",
      "44e1ee7a63a01a76371d7070c132361a5ddd54a0",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "18b47b83a373f33d6b902a3615f42c10f7600d72",
      "59849193ab596ee981f362e618a6f24b4d4289c3",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "df943b8b6d6f19edd5f3d096a1cecfdf04394c54",
      "93499a7c7f699b6630a86fad964536f9423bb6d0",
      "e49ff72d420c8d72e62a9353e3abc053445e59bd",
      "f8e79ac0ea341056ef20f2616628b3e964764cfd",
      "424561d8585ff8ebce7d5d07de8dbf7aae5e7270",
      "0834e74304b547c9354b6d7da6fa78ef47a48fa8",
      "fd6432fa2b032dd5f246d26460bf3353c43c257a",
      "a743115795375666593919cbd48590213c229ae9",
      "cea967b59209c6be22829699f05b8b1ac4dc092d",
      "89655dc3c3a794cb25e055aed79424c66301d70f",
      "8e641ea510c06485f33a61ea65555cf791efad2d",
      "0b544dfe355a5070b60986319a3f51fb45d1348e",
      "fff114cbba4f3ba900f33da574283e3de7f26c83",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "39e223e6b5a6f8727e9f60b8b7c7720dc40a5dbc",
      "4dc1c7699b98cea7af2c457bb5647c497e7d0c03",
      "7e1874986cf6433fabf96fff93ef42b60bdc49f8",
      "9b44a53069dcf4dc10c34e456bf3a5ff160d3ede",
      "3a758adba701dc81020e4d2858b1298044db71b5",
      "ddf0f2226cc837750eb1eb57c43d8192ef0fc2b3",
      "e2b7f37cd97a7907b1b8a41138721ed06a0b76cd",
      "a505e4c2bf30cd88afe483f7541409e2ba5ab3d4",
      "ec2b2569b3a0d70a5b45d48b041dec9060d85eb7",
      "43d2ed5c3c55c1100450cd74dc1031afa24d37b2",
      "f020b61789112fe7241b871907268f0bdc5c84fa",
      "843959ffdccf31c6694d135fad07425924f785b1",
      "d6fe05d447c3a379b81c4760f10838a370054c8e",
      "34795caa356317f2c662bd4553cd7608e0aeb657",
      "0b7e7da8149733462998992aad3254abadd3c97c",
      "e12c07178f0dc2fcccee21c96ed26f142dc1e08f",
      "23f0423ff5a986a695d629fa2ffc6e094d122416",
      "443077eb859540108d3adb5f2fa42b394ddf2a06",
      "fe1363ba2097a2285ffe8592ac12666a0ad2d273",
      "c2815f76c690ec2ca6523b1faacf9b6a401bdff1",
      "508fbfbfb09768c92d35e5fae10ce8fa7e8753d2",
      "a2b71865c63bde756a3a8a76f34c391236189942",
      "563e821bb5ea825efb56b77484f5287f08cf3753",
      "2e9d221c206e9503ceb452302d68d10e293f2a10",
      "094fc15bc058b0d62a661a1460885a9490bdb1bd",
      "3e33eca03933caaec671e20692e79d1acc9527e1",
      "ef77a8b0db638c675d032bd05dc3a012a2899da4",
      "8be3f21ab796bd9811382b560507c1c679fae37f",
      "f22f6972e66bdd2e769fa64b0df0a13063c0c101",
      "6602985bd326d9996c68627b56ed389e2c90fd08",
      "014b026254474f47a4987294272d65d5186a8482",
      null,
      "c68796f833a7151f0a63d1d1608dc902b4fdc9b6",
      null,
      "583a2e12576ff99f3f4d3f2248420618b0f64489",
      "34fa051905349f584238a54c2cc10154c9256742",
      "31868290adf1c000c611dfc966b514d5a34e8d23",
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      "104c4017c200f434dc7ecfbef143b5f135497abc",
      "b6b26564df790262abbe48fa18079d9610189b29",
      "ba640c0682b242cb480bb4eb5b934ee6db949269",
      "ba39c4237646e49e3aa0b6549a61e7b0d94b83c4",
      "162d958ff885f1462aeda91cd72582323fd6a1f4",
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ]
  },
  {
    "paperId": "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
    "title": "Graph Neural Networks: A Review of Methods and Applications",
    "abstract": null,
    "citationCount": 5605,
    "references": [
      "0a69c8815536a657668e089e3281ff2e963d947a",
      "a7dbaa06dc6948847b44fde69cc1f53b00bea328",
      "f0bfcda65e04d481767dba40eade6c7001ee908d",
      "7d4dcee4628745f79f5e352859172817fece3e83",
      "3da4626411d83c19c9919bb41dba94fff88da90e",
      "670941ccda31b4473943078e74011b5d54adaaf1",
      "04faf433934486c41d082e8d75ccfe5dc2f69fef",
      "91fb815361fdbf80ff15ce4d783a41846bd99232",
      "26e7c671b37a65f6680815ad4c1e093a2e5a253c",
      "1f3c381eedfe8914b81e93070bfdb00cf86ac943",
      "34b9e5c498bb1212c777c9ad183c439a6d71fde7",
      "83e89d56d0d0e1dfd8b52213e6cc2e191aaaf34b",
      "91b770234ed2ccc3cd25e2bf78c0948c0f2f98d6",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "993377a3fc8334558463b82053904e3d684f29c0",
      "e58f17860450b51b3d74ef4e24545c2d9b81cda5",
      "3cf68c49d5745cdcbdefe6f637be0c407cbad019",
      "2decfdfa62ef86013219ee281c75f38158e8cf73",
      "0ca7d8c3250d43d14fdde46bf6fc299654d861ef",
      "c397fdc468eb878db233dc80bf65a35a5b87a80e",
      "3a5af4545ee3ac3f413841c10c7605a1cefeb9e5",
      "c7fd29fdd2e0b50a571db4f607eab138e9ecb644",
      "036d743c7ca1e513adf0a91594fc8111e03dc30c",
      "78542c2be9bb853a4e04642f2d315cfb0c6d94b3",
      "3db5fcb595492dcd64663c00d56f004dfafa689c",
      "9dccd22276aaad5b6ec24e68bb7d29d954226a54",
      "fc41d75288a81dd7e30087480f51821fc6572d95",
      "d474bf3cac3f3824778dbc494bd2e89f6f8e57dc",
      "aa63ac11aa9dcaa9edd4c88db18bec87e0834328",
      "74871ba4d804cc61a69d02555592569321640978",
      "9eda533cf0badf8dbed5c8240bb828b622328183",
      "28a49bea48fdd9e95d921ec2c25c7b17e196e2a5",
      "834fb308ca1a0177d303691d6003e3b0fded021e",
      "94194703e83b5447f519fd8bcbb903916e05aaf9",
      "fd075bcdf2d7e13d23f7c249a8eded343d5bbe3b",
      "4640af8e4b167fff1bf5c861df8268538570e792",
      "c2c27c1001b7cb320bf80ef3c71c4cf87b852334",
      "a4dee3178e89f8ad5cdbc0e41c2c5e35a7ae3220",
      "5f95f0834932d7046d061b854a3114cd3255200f",
      "2fb59ebe271d6b007bb0429c1701fd1004782d1b",
      "c22ecb56b1b3d54acb8793df1ae6a526cf621449",
      "64e87487a87532778352a358209935fef48300d7",
      "e3d662bbd0e5539fe22a85f3518f960595b9914e",
      "f5252075bb34666863cd01cc82c2d941d4ffe6c6",
      "c3715947bbbf648dcf29a1aa4b35cfb68044f919",
      "36cf500079b82e3adf4a3afe3356c1c03426bdcd",
      "15748c0437c3be2e464dfb6aa42d2ff5dbd5d7f7",
      "fc3e99ebc07b3014f6736a6a7b077edf2f1634c0",
      "7f42da4abfadf9d5a464affe22d0bd4bf21c0edb",
      "03097420a1c4b2500cec6f29740f9d3c2164168f",
      "012e01b18192c2b825aa62daf93a9a2340db710a",
      "789a7069d1a2d02d784e4821685b216cc63e6ec8",
      "54e6a214c9dca4ba6bb8c5d52e5b219c5ea50e12",
      "4ce9c20642dce5eb7930966053a1e3da4ef617f2",
      "44842bba66366522de782f537d9bc61d8868bf08",
      "6d54a70d06fcd2cc34f3d99163c5fc7194106027",
      "05c4eb154ad9512a69569c18d68bc4428ee8bb83",
      "df2ce576eca0b3db177c83bc6cf0f9fe2c7714f0",
      "5728919676a85553b3c3063626c220fe7a5634e4",
      "d52961a91f03061c6732a69e292bd1e403e7f8b8",
      "f1964cc1b343f907462cd7fbfaf88c2679d61f59",
      "eb70684b4878c2669e43609a01e66fd731948d4e",
      "c7fdb033ff15771e9bcea4336135eec171a595f3",
      "3b7d05fc6e1e0a622f9a8772f4557a166f811698",
      "8fb202cdcfec3b0e7ba0e3f88949d6d923b48b2d",
      "01cf1d83b7a4983001a50ec274043f53783ee94e",
      "a48bf0c4239c7db0d36bed98cd4f062f521fe01f",
      "ca2e484103e2a9a2dae2fd7dd0519a9324ae876d",
      "8ccbd4898fd7cecac6823e7caa15c74fca670fbe",
      "b85c74900ff716119f51852146de7a3d7d43230e",
      "ee8b1603c79a4f9c3bdc0d6633b595aa93ff3a0f",
      "9f91568d8ec72c417d9146a551b61e69ccf1f848",
      "4e7dd1e79f0f13650b2612325e6ba8d206dc04fb",
      "03ed44b85886a7a95d1533fb1d1a142e60ae292c",
      "00b7efbf14a54cced4b9f19e663b70ffbd01324b",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "798fb46c42578b1fce470161f86e07a7d1d389d7",
      "362e416c5f55b056a6c5930d55d8e3588efce9b9",
      "70f7cd54b5918aed60c3d8c3a8e4aa7e8d634c41",
      "7e71eedb078181873a56f2adcfef9dddaeb95602",
      "398d6f4432e6aa7acf21c0bbaaebac48998faad3",
      "b7a6b7adafd01e939c9266083dfba9edea88846c",
      "53bc1dd1dbfa61bcb5bba6fcaee3f2c2323a0f49",
      "8532da1509610d5770c01f5180ba8788d21f4745",
      "30b38ca8151bbd5a5ff45bce94297d1248ff58b5",
      "80d65eda89a4e5472f95e5a304604c80866d8748",
      "c2d40522eaa5523d67a0de5e4098e7031fdccb3d",
      "bf830a601432a6cbfd53b473a5ce80cebc9a5a42",
      "ad08da5951437c117551a63c2f8b943bee2029ce",
      "36011ae319059d9da156aa42f3f03391992bdda8",
      "d77c0e84972c256a8922b952b04330e369f65f09",
      "7751291fa0760de5548b58689e69e20b5005ebbd",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "6541afa4b4061a7d5c8387514bedea9dc249fd80",
      "ac225094aab9e7b629bc5b3343e026dea0200c70",
      "967a21a111757d6af7f7a25ca7ea2bdf6d505098",
      "4930de1aff4b1948157a15ac9cdb02364bee97bb",
      "510d98681e5e85fb1265513728f16e2543ae1b4b",
      "6f0637f44ac481905d732be7a2e15d8f699aeeb3",
      "340e8aaf9b83a29072b9485e7f99d4a9e80a574b",
      "6017e81c5ede6c38b306a3df9738aeb04baa7619",
      "49916b6b10a81eb4316161f9b18005080311da10",
      "68030c396dc2c02ffe1232f4cb177b9da93662d1",
      "50900bc8faf0e57b65c85dd3e9e95fe3f53623a3",
      "abfa95058fa50c55a0b923a6c35830f470c125ad",
      "730132a18b01ac56b17e4afc452cd00612b22799",
      "749c00144b6a005f0fbe3ee8cc07e0090a45f7b8",
      "4ce19e59b6c99b960df645d753fd29d2ccd9b7b4",
      "9801763d1acb87fd7e421adaa7ff7a00527c8d6c",
      "c8865b6184877fce2873a448d32c1bfd5ba685f2",
      "a79ee3eeb567a1758a081b6965013bca0de5acfc",
      "fe4f2e1d5fa6b634b039066307b756295dda580f",
      "cc23c580b7d8063415fb6eb512053d1079b849de",
      "d5aefe86b1ba8c773a6bd0e84812ace161b8c0db",
      "dbf125bfe07856a63d4aab612c0063fc8c7b6484",
      "e9e0f9477f0bafb5016d7af525515724e71509a0",
      "0132b27e3681ce910ae74643e33a53b74bd5f5c7",
      "c30862bbfcf7f37a7c2c8054a31d5044e2ba898a",
      "0ab4435cb34988c9a31aadf4546d1d475ba3c42e",
      "f11198dc277af1c5547ab3ae8d562fc8c16a7c70",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "d9f836a2062864e4808e12224e2286a353498202",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "7f77058976e2fe75e98280371962c43d98c98321",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "4a18affba68096f53a8a884e4a9ebd34e65d305f",
      "43879cf527f4918955fd55128baa6745174d8555",
      "fd77bd8601a743a4705863010129345f1b15379f",
      "6ac33d3dcecbed17580509a34bccdff2425f7ed8",
      "def1049b5aae96c8e1eab0ca58d77ac9c2f0e3e9",
      "8f61c28cd63372e03e303714f3cb726ad79a6d62",
      "6c44f8e62d824bcda4f291c679a5518bbd4225f6",
      "b4812702a7c1c47e2af34d8752b2103505089fc2",
      "3e79a574d776c46bbe6d34f41b1e83b5d0f698f2",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "af0cf9da53bf3e1e6d349faed14cb68ad71aa2a4",
      "6411da05a0e6f3e38bcac0ce57c28038ff08081c",
      "4fbb6d1090bfdcf1535b4a4ba1f883f1e121704d",
      "a1a197449aeca81a39cb2213b41cef4831d6983e",
      "b075c4d8f0f5c89f4d48c42cd74dcff6c7fe6c50",
      "d0b66e82f9386c16c489fb5e4bb5fa01a2da754b",
      "57c36f13b188816051a27478e2f56bb284f4fb13",
      "eaf5b3a28606da5014d5c3d106b2fc4306933808",
      "ce4f001c1d8ddb9a95cf54e14240ef02c44bd329",
      "0a69a34408555a6fcdb0491e9bf82af8675876ae",
      "ff65e3bf34e892ef75d91c5e3d7294e0b64d867d",
      "c097be22f1e87a846385047346b73610d91fea4e",
      "2fed2886d6de407ce4883294058726fa591d3153",
      "dcd5b17b26c028b574cfcadd0d4e47b8d169ce5c",
      "e1cef464322243feb12ac3f81873c912e071a1a6",
      "83b44a37ddf121e660c873e207c2909b79f23469",
      "f32f16ca3c27ff945198c6551a5d35fae3b1a660",
      "249408527106d7595d45dd761dd53c83e5a02613",
      "89b1766a77f7a34aadd67861123d5cf3cd3ece52",
      "fe257027193ea4a74fdab99d7509ce4002ad7de6",
      "046c4276b72e21731150c0655519ec717d8f5bad",
      "e156edf6d11dc19580c2e70940645fb107893817",
      "2503dff90685857ce7295e37d0045e2eef41c8b8",
      "e1799aaf23c12af6932dc0ef3dfb1638f01413d1",
      "efeaa6e3114d6d6ae5c3041b66ac9a9ae9bf52bf",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "51a2bc2e8fb8ed47a085df33dd965e57335080a0",
      "62a90fbb0dc2f4c2cb777aa43dce2ae872fede2c",
      "6a0aaefce8a27a8727d896fa444ba27558b2d381",
      "7a2e527b6d51071a54aac7a8bdb56ca735a1f78b",
      "ce840188f3395815201b7da49f9bb40d24fc046a",
      "8899094797e82c5c185a0893896320ef77f60e64",
      "34273979fd2a62fd7b49ee6d14a925864ff94e74",
      "17a8dd804ff254662cea2450c25dfa0bb7adceb2",
      "9eb4fde851c69a35c2010ecae9d529ae4c495626",
      "c751ab01aedc2888a7fe6e8b4f77ab1afa94072f",
      "572a1f77306e160c3893299c18f3ed862fb5f6d9",
      "e6ea85add58fb25448042edb9af16f0d955c17da",
      "5f1d429ba574581ac14effe3ebab654a57dc0e39",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "a60c69c2fae27ebbb73c87f7f2a4765556bd7f9f",
      "4ebf5a9c35f40d3343a2376d0b75d8d7a3126d8d",
      "006906b6bbe5c1f378cde9fd86de1ce9e6b131da",
      "ecf6c42d84351f34e1625a6a2e4cc6526da45c74",
      "72edcb3788f9c141a3ed28e6d36f75ca4977d27e",
      "b7c4570d7d97f327e7f82fe28100172ec5e94cac",
      "9ba0186ed40656329c421f55ada7313293e13f17",
      "9697d32ed0a16da167f2bdba05ef96d0da066eb5",
      "5808f5285bc60a73bc240621ad0fce606867ebc1",
      "a625dee1fb23d1c842a961bc354c0aef3a20c132",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "fdc708aaa0d18c791f878ff2214201410fa52439",
      "414ab203d8fc3ecfbf40d004960d3a4774830b48",
      "007112213ece771be72cbecfd59f048209facabd",
      "44220ec088d4fa1e368c7f50ebf2074b2e48efef",
      "374b4409f6a1d2d853af31e329f025da239d375f",
      "8e137af544ad94feabf7bc3cc43c9980c6ed3d92",
      "2784000e1a3554374662f4d18cb5ad52f59c8de6",
      "1a39bb2caa151d15efd6718f3a80d9f4bff95af2",
      "0a5c8afbd905e286bf7a3abb09b71cb765660d25",
      "54b8aadb7c2576665ce26caf59464b6449ac9ccf",
      "1e819f533ef2bf5ca50a6b2008d96eaea2a2706e",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "cd8a9914d50b0ac63315872530274d158d6aff09",
      "c3a3c163f25b9181f1fb7e71a32482a7393d2088",
      "a456265138c088a894301c0433dae938705a9bec",
      "8919982c5f0b03249b16df09e376b5075da30007",
      "40f2560357d19e3b862a685c05cd5b48f3cb3961",
      "15f91ae7590b88c4a533daeefa4b6fa7c0c277e5",
      "79baf8cf6be6510f69be8c515516136138678cf5",
      "d997beefc0922d97202789d2ac307c55c2c52fba",
      "ae42c0cff384495683192b06bd985cdd7a54632a",
      "d7878c2044fb699e0ce0cad83e411824b1499dc8",
      "f09f7888aa5aeaf88a2a44aea768d9a8747e97d2",
      "0e779fd59353a7f1f5b559b9d65fa4bfe367890c",
      "54906484f42e871f7c47bbfe784a358b1448231f",
      "f958d4921951e394057a1c4ec33bad9a34e5dad1",
      "a1786540a4e15f0757e1b84a02f98ed436a969e0",
      "28f7cc049f3f4a4db81f0d0a608a4f57636cc35b",
      "c7d007ba376faddf0046930ea7375ed59600cee9",
      "97f7ef7a5332218e0e9ce75ad5cf77048466ca83",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "5694e46284460a648fe29117cbc55f6c9be3fa3c",
      "d0b7c8828f0fca4dd901674e8fb5bd464a187664",
      "7dba53e72c182e25e98e8f73a99d75ff69dda0c2",
      "36ee2c8bd605afd48035d15fdc6b8c8842363376",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "50295c19e177480ba3599300de1ab837cc62b08c",
      "ba8d37f2e98d70f917d0d3a49c387cef6867e65e",
      "7c6de5a9e02a779e24504619050c6118f4eac181",
      "3d846cb01f6a975554035d2210b578ca61344b22",
      "3cea26512e9fd8bcb4081af44286d395004a5433",
      "322cf9bcde458a45eaeca989a1eec92f7c6db984",
      "77f0a39b8e02686fd85b01971f8feb7f60971f80",
      "561c3fa53d36405186da9cab02bd68635c3738aa",
      "1a37f07606d60df365d74752857e8ce909f700b3",
      "13fe71da009484f240c46f14d9330e932f8de210",
      "3899f87a2031f3434f89beb68c11a1ca6428328a",
      "2c03df8b48bf3fa39054345bafabfeff15bfd11d",
      "d01379ebb53c66a4ccf5f4959d904dcf9e161e41",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "44e1ee7a63a01a76371d7070c132361a5ddd54a0",
      "18b47b83a373f33d6b902a3615f42c10f7600d72",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "fce14c6aa64e888456256ac6796744683165a0ff",
      "e49ff72d420c8d72e62a9353e3abc053445e59bd",
      "9653d5c2c7844347343d073bbedd96e05d52f69b",
      "0834e74304b547c9354b6d7da6fa78ef47a48fa8",
      "32de44f01a96d4473d21099d15e25bc2b9f08e2f",
      "a743115795375666593919cbd48590213c229ae9",
      "fa72afa9b2cbc8f0d7b05d52548906610ffbb9c5",
      "e74f9b7f8eec6ba4704c206b93bc8079af3da4bd",
      "0b544dfe355a5070b60986319a3f51fb45d1348e",
      "fff114cbba4f3ba900f33da574283e3de7f26c83",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "50d53cc562225549457cbc782546bfbe1ac6f0cf",
      "2582ab7c70c9e7fcb84545944eba8f3a7f253248",
      "f6b51c8753a871dc94ff32152c00c01e94f90f09",
      "abd1c342495432171beb7ca8fd9551ef13cbd0ff",
      "39e223e6b5a6f8727e9f60b8b7c7720dc40a5dbc",
      "e7af1047d643ca833a7561dea750ead7a336ff27",
      "3a758adba701dc81020e4d2858b1298044db71b5",
      "8e8152d46c8ff1070805096c214df7f389c57b80",
      "ec2b2569b3a0d70a5b45d48b041dec9060d85eb7",
      "bc6dff14a130c57a91d5a21339c23471faf1d46f",
      "f020b61789112fe7241b871907268f0bdc5c84fa",
      "34795caa356317f2c662bd4553cd7608e0aeb657",
      "0b7e7da8149733462998992aad3254abadd3c97c",
      "e12c07178f0dc2fcccee21c96ed26f142dc1e08f",
      "9c842b2926fd60b9e6ff80fee28c65e7c1ae5f1d",
      "443077eb859540108d3adb5f2fa42b394ddf2a06",
      "69da44a0c76e99aa1fbfe8fb501f5e68774d772a",
      "c2815f76c690ec2ca6523b1faacf9b6a401bdff1",
      "508fbfbfb09768c92d35e5fae10ce8fa7e8753d2",
      "46cb7584ba5838c67368fbb98748a662bd3b427e",
      "a5eb96540ef53b49eac2246d6b13635fe6e54451",
      "bfeaf424a2ea6ca4702d545c6e959e2caeb68e9b",
      "2e9d221c206e9503ceb452302d68d10e293f2a10",
      "3e33eca03933caaec671e20692e79d1acc9527e1",
      "75d82765de0900fed1a7a073415d8f7c625f79e8",
      "ef77a8b0db638c675d032bd05dc3a012a2899da4",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      "df2b0e26d0599ce3e70df8a9da02e51594e0e992",
      "6a7c6e9feab24ccf51ee9e53cbc0b42b9b421a7d",
      "233540909745db307bb1c0053788829976fb8d20",
      "89c650ccb646bdcce886e96e837db3767855c6d2",
      null,
      "c6339be44267b8b864b9fb8b35314ba6a1fc167c",
      "4f8d648c52edf74e41b0996128aa536e13cc7e82",
      "7e928ef936c2815d7522c5176163d6ab7309a8b7",
      "104c4017c200f434dc7ecfbef143b5f135497abc",
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      null,
      "ba640c0682b242cb480bb4eb5b934ee6db949269",
      "97efafdb4a3942ab3efba53ded7413199f79c054",
      "8430c0b9afa478ae660398704b11dca1221ccf22",
      "ba39c4237646e49e3aa0b6549a61e7b0d94b83c4",
      "162d958ff885f1462aeda91cd72582323fd6a1f4",
      "c53acdacb1e4131a996b0deee882b345e835e23c",
      null,
      null,
      null,
      null,
      "73f36ff3a6d340606e09d2d0091da27a13af7a6f"
    ]
  },
  {
    "paperId": "d08a0eb7024dff5c4fabd58144a38031633d4e1a",
    "title": "Benchmarking Graph Neural Networks",
    "abstract": "Graph neural networks (GNNs) have become the standard toolkit for analyzing and learning from data on graphs. As the field grows, it becomes critical to identify key architectures and validate new ideas that generalize to larger, more complex datasets. Unfortunately, it has been increasingly difficult to gauge the effectiveness of new models in the absence of a standardized benchmark with consistent experimental settings. In this paper, we introduce a reproducible GNN benchmarking framework, with the facility for researchers to add new models conveniently for arbitrary datasets. We demonstrate the usefulness of our framework by presenting a principled investigation into the recent Weisfeiler-Lehman GNNs (WL-GNNs) compared to message passing-based graph convolutional networks (GCNs) for a variety of graph tasks, i.e. graph regression/classification and node/link prediction, with medium-scale datasets.",
    "citationCount": 958,
    "references": [
      "745d5b507583f7c7e101bc1cf14d957148285565",
      "facf11419e149a03bd4a9bffdda2ebb433a59d85",
      "cd991591640fd5cf1cfb58027a9872184450b685",
      "eb984b142db9965b10a3b5ae5813eeb3e0f6e676",
      "454304628bf10f02aba1c2cfc95891e94d09208e",
      "6667a57c8ffa3f3c0d724b1e8e986758995df2b8",
      "5822490cf59df7f7ccb92b8901f244850b867a66",
      "a6337d9ebb0b7de84588806110157806f9c0383b",
      "47ae807cd511b35e78a2cd4e198283dea6dafd41",
      "5863d7b35ea317c19f707376978ef1cc53e3534c",
      "6d0096bc12d61c6f7bca4999bc0c4ce83f44bc72",
      "0acab210914a3c90901071eb2c6c22d514b53a02",
      "9389af659f14239319186dff1cef49e8ece742c8",
      "c8c0cfad6d64ac8970ba1433a3fd95aa79dc067d",
      "6f0cd7266298f359197971b4ed537ac4bda25153",
      "849b88ddc8f8cabc6d4246479b275a1ee65d0647",
      "e0b34b9dd924768fce9b52bc59ffb3975deb0d63",
      "92d229609b33717ec6e0e97591def3c086913858",
      "5acdfade1d39717667ae0fb6d75bc699206143a9",
      "fadfffdbb3588bb8ddcc480613336f1d71694d55",
      "9c0e855382de7e708c8eea7b4d5cf792bcd4a326",
      "8dd90b0648da4cb0e1f18ba1f00b158a157d3631",
      "e9ef895b56e5dee045af31e737d46c255194f4f2",
      "6360aaece0d6bf153183b9ecd075f42f7b127cc9",
      "7d45afc1f12cba92a66da4e83a96380ac0a15997",
      "6942bdc5aa70ed1288c49621719de2f699bf83dc",
      "83e89d56d0d0e1dfd8b52213e6cc2e191aaaf34b",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "2670f82ba385ac3dab469d5f44ddc5c4fe75dbea",
      "993377a3fc8334558463b82053904e3d684f29c0",
      "929bf1a2ff229d34f7907886989c621444c2b8fd",
      "19c0d004bd0e42a6449d8b7717cbda4431a67e65",
      "70acb0ee229593fffe73885f3004f24df38f74ec",
      "c529f5b08675f787cdcc094ee495239592339f82",
      "ea9a516d5cb0b298f0df50e82b3e0400b72fcdff",
      "2e3a86c4b8f6883b371f718eb0a35857a6bf9b95",
      "3db5fcb595492dcd64663c00d56f004dfafa689c",
      "e4f2c471d27ced746f26cc6e8337ea5cb7c8faf3",
      "3c8a456509e6c0805354bd40a35e3f2dbf8069b1",
      "dbc4b7508068f77b1ad9c24d963b446def8eed2c",
      "f7c2d384a40660e5ef549a4fd83743832560c48c",
      "6be30bc4d47392f0e8d9664b0580848f7a3805cb",
      "a6aad9ccdcb7674a3b7ab710f0a80d205834f847",
      "fd075bcdf2d7e13d23f7c249a8eded343d5bbe3b",
      "50ab59539ec6c5f666b46a5e4e146934254613b8",
      "7f42da4abfadf9d5a464affe22d0bd4bf21c0edb",
      "f80be25edf309ab595fc76fddd8cefe8eb2e5a54",
      "c62e0516e3ef089cd7dd6454a93df8ec3e81759a",
      "91524a552c4cbcbeb6f8a947c0d436dc55160e7a",
      "f598a8afec169c435e48ad19356c3b768f8ce7a7",
      "54e6a214c9dca4ba6bb8c5d52e5b219c5ea50e12",
      "057b594c9e6ed45fc445a4dc45384117bdd15a3e",
      "6b010e07618eb36abe6def23d94488b2c81ecbf7",
      "44842bba66366522de782f537d9bc61d8868bf08",
      "05c4eb154ad9512a69569c18d68bc4428ee8bb83",
      "5c744b2ffea3def76ed016b7cff442b7e0bd1589",
      "c71d1867b8671bf1a7f2616783661cba7e41d829",
      "d9f6ada77448664b71128bb19df15765336974a6",
      "01cf1d83b7a4983001a50ec274043f53783ee94e",
      "ee8b1603c79a4f9c3bdc0d6633b595aa93ff3a0f",
      "7f5ea861a57e14796f033fd0f5580dbc34ff88f2",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "70f7cd54b5918aed60c3d8c3a8e4aa7e8d634c41",
      "318d7da35307221267b6ce6ead995cc812245abb",
      "b7a6b7adafd01e939c9266083dfba9edea88846c",
      "e27fc90d2da9fcbac2cb4beb9ea5ef77a53544d7",
      "3f13a5148f7caa51ea946193d261d4f8ed32d81a",
      "c2d40522eaa5523d67a0de5e4098e7031fdccb3d",
      "d77c0e84972c256a8922b952b04330e369f65f09",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "ac91892a8a6b6c3e97aa92b6fa8d54b42cade0ee",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "6541afa4b4061a7d5c8387514bedea9dc249fd80",
      "67de0bc5d1dfb458efc9aa192c879bf00ee667b3",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "d9f836a2062864e4808e12224e2286a353498202",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "43879cf527f4918955fd55128baa6745174d8555",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "ce4f001c1d8ddb9a95cf54e14240ef02c44bd329",
      "fd17bd9a5dc24a081ad9743570f50dd6750f54b2",
      "a5fe578a6b9f51ce19263676e6395421fedc6d2d",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "44599c75a0f2033ce91d6429de7a0b294d619161",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "3510409c2a59bf7e120ee144dced6f289c7a8a91",
      "1e819f533ef2bf5ca50a6b2008d96eaea2a2706e",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "ace1059fd85bbb8b41874a47a029bba7899124a5",
      "98c5afa2c7a3130ed0788aa1d5be1d62a9b10eca",
      "cd8a9914d50b0ac63315872530274d158d6aff09",
      "c3a3c163f25b9181f1fb7e71a32482a7393d2088",
      "ae42c0cff384495683192b06bd985cdd7a54632a",
      "f09f7888aa5aeaf88a2a44aea768d9a8747e97d2",
      "0e779fd59353a7f1f5b559b9d65fa4bfe367890c",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "97fb4e3d45bb098e27e0071448b6152217bd35a5",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "50295c19e177480ba3599300de1ab837cc62b08c",
      "2c03df8b48bf3fa39054345bafabfeff15bfd11d",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "9653d5c2c7844347343d073bbedd96e05d52f69b",
      "995c5f5e62614fcb4d2796ad2faab969da51713e",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "6fc6803df5f9ae505cae5b2f178ade4062c768d0",
      "f37e1b62a767a307c046404ca96bc140b3e68cb5",
      "fa72afa9b2cbc8f0d7b05d52548906610ffbb9c5",
      "e74f9b7f8eec6ba4704c206b93bc8079af3da4bd",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "1a2a770d23b4a171fa81de62a78a3deb0588f238",
      "2f4df08d9072fc2ac181b7fced6a245315ce05c8",
      "abd1c342495432171beb7ca8fd9551ef13cbd0ff",
      "b3c785b99ec147049caa47f707f337b717705970",
      "2c846c5ac7e8bd020b89f6c4767a01731114ee4d",
      "d2c733e34d48784a37d717fe43d9e93277a8c53e",
      "eda90bd43f4256986688e525b45b833a3addab97",
      "88816ae492956f3004daa41357166f1181c0c1bf",
      "f78765c7189536209193ccbe4ae55b83b6640147",
      "04f4085c0126ba29453a582cd1e62e05c8e15c82",
      "563e821bb5ea825efb56b77484f5287f08cf3753",
      "d36efb9ad91e00faa334b549ce989bfae7e2907a",
      null,
      null,
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      "639174f32a71ecfe9041ad05ff30eb39bd4977bf",
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      "5d90f06bb70a0a3dced62413346235c02b1aa086",
      null,
      "13c82489c1568b67265d17a15720001a5737171e",
      "f42b865e20e61a954239f421b42007236e671f19",
      "162d958ff885f1462aeda91cd72582323fd6a1f4",
      null,
      "19215f07c59f1076a3872a73f48e6ee09c739b93",
      null,
      null
    ]
  },
  {
    "paperId": "8ea9cb53779a8c1bb0e53764f88669bd7edf38f0",
    "title": "E(n) Equivariant Graph Neural Networks",
    "abstract": "This paper introduces a new model to learn graph neural networks equivariant to rotations, translations, reflections and permutations called E(n)-Equivariant Graph Neural Networks (EGNNs). In contrast with existing methods, our work does not require computationally expensive higher-order representations in intermediate layers while it still achieves competitive or better performance. In addition, whereas existing methods are limited to equivariance on 3 dimensional spaces, our model is easily scaled to higher-dimensional spaces. We demonstrate the effectiveness of our method on dynamical systems modelling, representation learning in graph autoencoders and predicting molecular properties.",
    "citationCount": 1040,
    "references": [
      "6195b623a13e861741ac1e80a7a8b774d5332236",
      "7a5d1a7646ce1884ad76a0e177f956ae4d77c722",
      "99f319ab72ae43f0ac94fe7ff1891be524611483",
      "6075091294a0fe0fe5c6c7b7a0df9029b6a965cb",
      "296e32a86e1711269289004b140f6d3e0f250348",
      "49c0ebbd20630a5811513217f9be1d210c742ae8",
      "6bc4004347cdf76d84597210796f38fcf7a01a80",
      "563ca4cda06665f4b90f8fce9bcb28c02e6872b9",
      "750fbba3e7545ee8eb73c549a6f4d92ea0521386",
      "48d5588afd24c7a12ae54d6ef13008ee3b7a0e8c",
      "0dd7ecc3937c631da0f032bc853b18df9823e88d",
      "cc9b137697046c29363b971e06b41cd5412b1831",
      "f06abcbd4e7e714e5736d813920db92cef4ab0e1",
      "b2b0c31d036941cb557be4afb7101dc1b72f17cb",
      "b3af16485c5028ebae8819e387a6cbdff352d9c7",
      "ca2e484103e2a9a2dae2fd7dd0519a9324ae876d",
      "56136aa0b2c347cbcf3d50821f310c4253155026",
      "eaf5b3a28606da5014d5c3d106b2fc4306933808",
      "e1cef464322243feb12ac3f81873c912e071a1a6",
      "6f3370fcf266fc10842b6d3e77c6cadd842a3580",
      "89b1766a77f7a34aadd67861123d5cf3cd3ece52",
      "8913c23081e46a41cc7ced3c2ff379d9cd7afcde",
      "afd76be183d34af3bf944debd73db1c77987a8c6",
      "cce22bf6405042a965a86557684c46a441f2a736",
      "5bf31dc4bd54b623008c13f8bc8954dc7c9a2d80",
      "414ab203d8fc3ecfbf40d004960d3a4774830b48",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "db1207440d20104854464d51da4cf5f79c5de240",
      "54906484f42e871f7c47bbfe784a358b1448231f",
      "28f7cc049f3f4a4db81f0d0a608a4f57636cc35b",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "fafcaf5ca3fab8dc4fad15c2391c0fdb4a7dc005",
      "89655dc3c3a794cb25e055aed79424c66301d70f",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "040c161f21e0fa57ac192ac826310f55d60277b0",
      "6e3c56010e987b1f7b0ebc64d93d0442948cf389",
      "9e0020d2cc7d8255661063ea5fb87f2000df1b21",
      null,
      "c6339be44267b8b864b9fb8b35314ba6a1fc167c",
      "c8c4ab59ac29973a00df4e5c8df3773a3c59995a"
    ]
  },
  {
    "paperId": "7456dea3a3646f2df6392773a196a5abd0d53b11",
    "title": "E(3)-equivariant graph neural networks for data-efficient and accurate interatomic potentials",
    "abstract": "This work presents Neural Equivariant Interatomic Potentials (NequIP), an E(3)-equivariant neural network approach for learning interatomic potentials from ab-initio calculations for molecular dynamics simulations. While most contemporary symmetry-aware models use invariant convolutions and only act on scalars, NequIP employs E(3)-equivariant convolutions for interactions of geometric tensors, resulting in a more information-rich and faithful representation of atomic environments. The method achieves state-of-the-art accuracy on a challenging and diverse set of molecules and materials while exhibiting remarkable data efficiency. NequIP outperforms existing models with up to three orders of magnitude fewer training data, challenging the widely held belief that deep neural networks require massive training sets. The high data efficiency of the method allows for the construction of accurate potentials using high-order quantum chemical level of theory as reference and enables high-fidelity molecular dynamics simulations over long time scales. An E(3)-equivariant deep learning interatomic potential is introduced for accelerating molecular dynamics simulations. The method obtains state-of-the-art accuracy, can faithfully describe dynamics of complex systems with remarkable sample efficiency.",
    "citationCount": 1340,
    "references": [
      "310442928e1904b9c7a7a8f11a4fada183588529",
      "58cb3f4aecf68cf90c4c3401fe5c3832830d0456",
      "5542d0ff99767f75f8c8a329fc3d88d73ff470c3",
      "d40a41faea989c5cdeeda0326b203877a8f59146",
      "13000da677d64afb1cf4639ab8b4e338ba73823a",
      "3dc12dadcf6a2015fb3c732e35dfa56ba604ed88",
      "00f39c314542902cd1b03842069e5d3ed441a5c3",
      "718006f0338adf915d27f4edbaf5c6df8326f7cf",
      "bc81b43b30a92256ec8b6aed82533955f748e2cf",
      "8bee16dca1282a6dd43bbf2be3db01154c5a652c",
      "6bc4004347cdf76d84597210796f38fcf7a01a80",
      "320992235484603d1e7ab3259c70581a147eed1e",
      "2ac2632a08792cb961aaf96f485f0846309d7ab4",
      "3c8a456509e6c0805354bd40a35e3f2dbf8069b1",
      "907a993066b9c922aa3a1d71edd77223dc06c762",
      "b3af16485c5028ebae8819e387a6cbdff352d9c7",
      "8876133a58c4d42820e89bd342b5a95a2846a988",
      "06bb1f72d17115c83a983df644a795c95ad67a2b",
      "e8567db9b677f59dd9ad36a62c7616f6590bd827",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "118ba5c0173871b04131a56fe2438d2e3adb9f54",
      "462d01edc820ac0d4f4460ed133b0f59a292ff9e",
      "f8e5cc6adf1996f7b0c5928bb9bda73c34562313",
      "a20d7a830dd276997d54ee650f84678df74fc03a",
      "1ca5a5c9903bb5326b32683009606948c843c726",
      "7a90d95ffc3d2d397fee3133165c0af9501f55c0",
      "397b0c1dcead6217dc0e1d2d1a13b37c7d712dc2",
      "2a7e9736b5632cb5332ff21c1fbf9bcfeafd50db",
      "15f615583ce4069cd4d91deb98d7bbaa47151060",
      "374313c2fc407655ae05eed61005a29cfaa7460b",
      "6f3370fcf266fc10842b6d3e77c6cadd842a3580",
      "3339aeb044a97d67468507b979a09d86f49dc81c",
      "a1c922be467d1c0c64b963e65dae41778b81b2a0",
      "d07284a6811f1b2745d91bdb06b040b57f226882",
      "383f8912e698dbefd379f1b9ce50040d7f97189a",
      "433d14e40f0d5362df4016270ba97e13371bc42a",
      "5bf31dc4bd54b623008c13f8bc8954dc7c9a2d80",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "33d9d4593d44792e17a045e5f3407f0fe7a40dd1",
      "eac3e315d1137e3999e4fc355e32b9f2e373cbba",
      "28f7cc049f3f4a4db81f0d0a608a4f57636cc35b",
      "de5e7320729f5d3cbb6709eb6329ec41ace8c95d",
      "80ecfa6c78ec24cebb7d9b79a237eb400b6b3c39",
      "9762e64ba47270a97d5bd19d88cb1e3723bd52fd",
      "2c03df8b48bf3fa39054345bafabfeff15bfd11d",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "32228376c03f3e8feabc8b3349b2fd1e45527e15",
      "ff02a329581ad032fe461720c10580e942c42045",
      "8d69402910a9d34c2bf4be44e2dffbfb29a7c285",
      "b587740a3051a4503b3edbb568d2333ab786e056",
      "25a081126295898458fc36caf656f9b770fc5968",
      "1deb2727dc3e585a80dfe5ddbc701e0ed8d6aea7",
      "7b7ed4669c5f451fe8b33d14f953c2934232e369",
      "30d873a951db829d29db857137d90d858539b6de",
      "20499e3e56d2cfd5b532c5c47038816fe331e051",
      "6316c3eac036defb65a172bd9a7b150a56b69895",
      "ed73eb5b0fcb517d1e13feaa1e09be163e7f7cde",
      "34dd8d32b43d99b4e88e0bb3e0164ac0faf02b9b",
      "bad1be638b556812f6a08b277c0fa2d2e92d5e96",
      "34c2ad6f2d61a684d92e92428fb287c9489ebff0",
      "f7b0c53bf789779418086491cfe6cb78c656e292",
      "a647578e190c85f04e4b4751ff7434458f23add9",
      "7b3834b7f6f173ae13b922d19cf49a69026b3ff6",
      null,
      null,
      null
    ]
  },
  {
    "paperId": "75e924bd79d27a23f3f93d9b1ab62a779505c8d2",
    "title": "Connecting the Dots: Multivariate Time Series Forecasting with Graph Neural Networks",
    "abstract": "Modeling multivariate time series has long been a subject that has attracted researchers from a diverse range of fields including economics, finance, and traffic. A basic assumption behind multivariate time series forecasting is that its variables depend on one another but, upon looking closely, it is fair to say that existing methods fail to fully exploit latent spatial dependencies between pairs of variables. In recent years, meanwhile, graph neural networks (GNNs) have shown high capability in handling relational dependencies. GNNs require well-defined graph structures for information propagation which means they cannot be applied directly for multivariate time series where the dependencies are not known in advance. In this paper, we propose a general graph neural network framework designed specifically for multivariate time series data. Our approach automatically extracts the uni-directed relations among variables through a graph learning module, into which external knowledge like variable attributes can be easily integrated. A novel mix-hop propagation layer and a dilated inception layer are further proposed to capture the spatial and temporal dependencies within the time series. The graph learning, graph convolution, and temporal convolution modules are jointly learned in an end-to-end framework. Experimental results show that our proposed model outperforms the state-of-the-art baseline methods on 3 of 4 benchmark datasets and achieves on-par performance with other approaches on two traffic datasets which provide extra structural information.",
    "citationCount": 1424,
    "references": [
      "6ca944ae76b4c71c5940c4172ef8222897d6cd51",
      "fc41d75288a81dd7e30087480f51821fc6572d95",
      "06b8e82542d1873928d007548a23d3b77daa11f8",
      "36cf500079b82e3adf4a3afe3356c1c03426bdcd",
      "fae129338c0899576524506008427f64477d3967",
      "05c4eb154ad9512a69569c18d68bc4428ee8bb83",
      "4efb9a950f252138a30eeb942ed02663a3ea29d1",
      "a99bc3f0d52bf01fd4daa8d0c72e346ac293be63",
      "ac225094aab9e7b629bc5b3343e026dea0200c70",
      "5d1d53c671b20db116ba8c91c6446bb4757614da",
      "e48f36aacb72adb74cef077c87d2351121124137",
      "efeaa6e3114d6d6ae5c3041b66ac9a9ae9bf52bf",
      "72edcb3788f9c141a3ed28e6d36f75ca4977d27e",
      "9ba0186ed40656329c421f55ada7313293e13f17",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "5f6c1b0a780cbaae92f6169312b7441decc9d6ef",
      "6b1793ece5993523855ce67c646de408318d1b12",
      "df0402517a7338ae28bc54acaac400de6b456a46",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "7f5fc84819c0cf94b771fe15141f65b123f7b8ec",
      "1716faa095163dc13e6333b442f9525efbd98eaa",
      "e15cf50aa89fee8535703b9f9512fca5bfc43327",
      "64e615720384525dfa317605e154ee259ba1013d",
      "8dcaf96f66340c453e775ab217a1b1bd9ba63449",
      null,
      "dfdcf7770885e3ee5f31182e91e602aabe5abdbd"
    ]
  },
  {
    "paperId": "347e837b1aa03c9d17c69a522929000f0a0f0a51",
    "title": "SuperGlue: Learning Feature Matching With Graph Neural Networks",
    "abstract": "This paper introduces SuperGlue, a neural network that matches two sets of local features by jointly finding correspondences and rejecting non-matchable points. Assignments are estimated by solving a differentiable optimal transport problem, whose costs are predicted by a graph neural network. We introduce a flexible context aggregation mechanism based on attention, enabling SuperGlue to reason about the underlying 3D scene and feature assignments jointly. Compared to traditional, hand-designed heuristics, our technique learns priors over geometric transformations and regularities of the 3D world through end-to-end training from image pairs. SuperGlue outperforms other learned approaches and achieves state-of-the-art results on the task of pose estimation in challenging real-world indoor and outdoor environments. The proposed method performs matching in real-time on a modern GPU and can be readily integrated into modern SfM or SLAM systems. The code and trained weights are publicly available at github.com/magicleap/SuperGluePretrainedNetwork.",
    "citationCount": 1962,
    "references": [
      "4a900d0ccaca8fd90e6874905d9aec202258a828",
      "570e411c174e74e0df4ae15a3b66d7911b6b6a82",
      "48d05ef0522dc582a1fe0ff41a4c6186c8a865e8",
      "d46da5ef2fbe6602bcc890e6207a8c8da7933e58",
      "911aa843612a8a47579e4d3da141fdee564965ba",
      "4bb87508f6d0f1661ca355e25485016a05cbb2bc",
      "d4c1cfc0cce2140fb8cf5c175c0a34b467298ee9",
      "b85c74900ff716119f51852146de7a3d7d43230e",
      "0d9845512c5460ab6a964e7027884f6200ed8452",
      "97ef575d7049ba0f1aeba4453a6dcd5475567630",
      "a944085eaf8146a81c6242feac4cc921d6206058",
      "abcf2e58d54b71455c5d6a807fee54c489164c77",
      "512b8ef0002e0bfd0ecb5ab17d533c1762eb9786",
      "571c522b36f31ced82a24afbd5e849e665141f7a",
      "13b6ea4a5245cdf1060e2c409b37fa1e06093879",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "5b9b5b7e20afff4e2caa08e0d22cefe87007bf63",
      "70073a4d2ebbb7ce5f432075e60850855ef9d7f6",
      "3395de3126d9b6b9d75f0d85d8c4ebab8ff84686",
      "73a3576e54e4ad0a00280e8c2daab9ba119352b1",
      "8e51d68250db5637cd6bc1de98a99396441399b2",
      "04258f92294d5dea89adb3e8607ae22eadb5332d",
      "e1799aaf23c12af6932dc0ef3dfb1638f01413d1",
      "a62bdda9ae6f86fc06d7edf5d3b429eda3a6640e",
      "8899094797e82c5c185a0893896320ef77f60e64",
      "901e8381aae4b1fbb0d4dcef714d39fbf02f9681",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "b36a5bb1707bb9c70025294b3a310138aae8327a",
      "0af769f3f0e02487eecd744c7ac71ee6d6021af9",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "8674494bd7a076286b905912d26d47f7501c4046",
      "43428880d75b3a14257c3ee9bda054e61eb869c0",
      "96112084b619243c4b49d990ab60021ab25286b2",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "a456265138c088a894301c0433dae938705a9bec",
      "e52e37cd91366f07df1f98e88f87010f494dd16e",
      "d997beefc0922d97202789d2ac307c55c2c52fba",
      "d277218265a177a8f2cdce7f88b4152fc1eda66c",
      "63de0ad39d807f0c256f851428f211e8d5fcd3bb",
      "e7d0c37f4f3589a3b787f39e8307704da5ed8d6c",
      "368132f8dfcbd6e857dfc1b7dce2ab91bd9648ad",
      "e353bd01a250983d4ed10ed990561246eab8d932",
      "34fe40d959ca476d711e0997fc093b2abdd56171",
      "47cbebf6c7139b79db2ecb80d69b8effdc4cc276",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "723e52c0d0140df7a6e264f1042af89ce9277e6e",
      "0080118b0eb02af581ff32b85a1bb6aed7081f45",
      "f778bd3422fd7d7792d095c765768fadc9f9ce70",
      "faae9ed25339426c7b03acf640a106ee84e50703",
      "976e29fe6c9baeb39732bca0e35f66f84d5bdd90",
      "de90778bf9548820f32d5951ea936004ff17baff",
      "57c11e60f68f466516f96d5a3c4cef1bff94b7be",
      "38616f16232112a8f23a224aa8259589bb383397",
      "7f05b312f2de7e59c7869558507fa4a9fa0d0971",
      "72b8d4907191f0b86eb525a84eb5b1c6ce39d14b",
      "695465a300d7d6387ad5c59054873bf40d5841f4",
      "d833ccbcac5cc35fe1030edeb45a7d4ad20080ad",
      "5feb23e3c01c12c797b271fa5cd2a1f2f096130f",
      "d3849a0a34b2e4f8c56e357de029315acb9e6bfd",
      "12c7fc38debaf3589e712973642246bd54fe63b3",
      "8c04f169203f9e55056a6f7f956695babe622a38",
      "4f37468a95ccc62debb9e5a4cb0d73489ca61190",
      "70e0d2487440b519b392503f4fa6b94891238c90",
      null,
      null,
      null,
      "d7917db3303a702908edc94f4da4e5e01c016cfe",
      "06bd055235eb29b1fffa983997b335bb3c832f43",
      "d274dfd00aaac4c4f50030c489c31ea1b6169376",
      "9ad20e6f6f89631caf6960516bb9939b9430bba0",
      "848c717ba51e48afef714dfef4bd6ab1cc050dab",
      "e39ae03191c773c4bc5a53bd62c4165c333de960",
      "a12bbd32a475d1549b386b96b59638582129b30c",
      "d7b064e6cb859db734fa0eb18da0c7df17cce416"
    ]
  },
  {
    "paperId": "00358a3f17821476d93461192b9229fe7d92bb3f",
    "title": "GNNExplainer: Generating Explanations for Graph Neural Networks",
    "abstract": "Graph Neural Networks (GNNs) are a powerful tool for machine learning on graphs. GNNs combine node feature information with the graph structure by recursively passing neural messages along edges of the input graph. However, incorporating both graph structure and feature information leads to complex models and explaining predictions made by GNNs remains unsolved. Here we propose GnnExplainer, the first general, model-agnostic approach for providing interpretable explanations for predictions of any GNN-based model on any graph-based machine learning task. Given an instance, GnnExplainer identifies a compact subgraph structure and a small subset of node features that have a crucial role in GNN's prediction. Further, GnnExplainer can generate consistent and concise explanations for an entire class of instances. We formulate GnnExplainer as an optimization task that maximizes the mutual information between a GNN's prediction and distribution of possible subgraph structures. Experiments on synthetic and real-world graphs show that our approach can identify important graph structures as well as node features, and outperforms alternative baseline approaches by up to 43.0% in explanation accuracy. GnnExplainer provides a variety of benefits, from the ability to visualize semantically relevant structures to interpretability, to giving insights into errors of faulty GNNs.",
    "citationCount": 1341,
    "references": [
      "6b010e07618eb36abe6def23d94488b2c81ecbf7",
      "3e0522cfd8f950e31d593d894b32d5998e960ce0",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "a66be4860435e001b06afbc9e8c981983a6fea0a",
      "a34954d9e36ea6c57743f55124a6ae444b951c2c",
      "8dc8f3e0127adc6985d4695e9b69d04717b2fde8",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "21dff47a4142445f83016da0819ffe6dd2947f66",
      "abfa95058fa50c55a0b923a6c35830f470c125ad",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "d9f836a2062864e4808e12224e2286a353498202",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "9935c8f8a37360196d92221ec092ae1880d272b8",
      "e4715a13f6364b1c81e64f247651c3d9e80b6808",
      "7ccc073c58f9be247eaa56bae37bea652c17ce29",
      "89b1766a77f7a34aadd67861123d5cf3cd3ece52",
      "f7325d232c7ac7d2daaf6605377058db5b5b83cc",
      "046c4276b72e21731150c0655519ec717d8f5bad",
      "2503dff90685857ce7295e37d0045e2eef41c8b8",
      "e6201bb0fe74c63669030c41bc6272fa2fa1aa97",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "a60c69c2fae27ebbb73c87f7f2a4765556bd7f9f",
      "d133cb102ad0f81e3fd17a7db090b28afc124c4a",
      "ecf6c42d84351f34e1625a6a2e4cc6526da45c74",
      "a0c95626d29b96dc133c24788a6fda1632de71a7",
      "aaf046c4da99ee6184f3fd31961a9967272152f9",
      "41578296efae9cdb1a54c7ef642465a3f91d8724",
      "e89dfa306723e8ef031765e9c44e5f6f94fd8fda",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "11222e4f5262c774bf9c006420eb647b951624b2",
      "442e10a3c6640ded9408622005e3c2a8906ce4c2",
      "1a2118bed729579528deb51e745d58dd3629baf6",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "cd8a9914d50b0ac63315872530274d158d6aff09",
      "08ad8fad21f6ec4cda4d56be1ca5e146b7c913a1",
      "f302e136c41db5de1d624412f68c9174cf7ae8be",
      "5c39e37022661f81f79e481240ed9b175dec6513",
      "29069976eb7f828de91ed243cd12fd99fef56d94",
      "da30b11e192db0e29ad73b7c3755c22c248576d3",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "322cf9bcde458a45eaeca989a1eec92f7c6db984",
      "c0883f5930a232a9c1ad601c978caede29155979",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "00d736c540f80582279093cfc5ffe454a3226da9",
      "5f5dc5b9a2ba710937e2c413b37b053cd673df02",
      "1a2a770d23b4a171fa81de62a78a3deb0588f238",
      "47774a3257e1b3a092d0c4a52e28ff6901713495",
      "3e454b7111e68ccfeb103a0b4220d35e16bff867",
      "29efbdf3f95cee97405accafdebd3bd374f1f003",
      "0673c89531494371d90f0cff4a9a895f75fea785",
      "ef77a8b0db638c675d032bd05dc3a012a2899da4",
      "7cd316505f52aa337ef8a2aff10bc6bf1df561d0",
      null,
      "4f8549f0859330fd6e46f7579efc19652e5e09ae",
      "b8368b5dde1af984dd4769d0bbdff11d4d065b5e",
      "3d2218b17e7898a222e5fc2079a3f1531990708f",
      "65d994fb778a8d9e0f632659fb33a082949a50d3",
      "3efd851140aa28e95221b55fcc5659eea97b172d"
    ]
  },
  {
    "paperId": "789a7069d1a2d02d784e4821685b216cc63e6ec8",
    "title": "Strategies for Pre-training Graph Neural Networks",
    "abstract": "Many applications of machine learning require a model to make accurate pre-dictions on test examples that are distributionally different from training ones, while task-specific labels are scarce during training. An effective approach to this challenge is to pre-train a model on related tasks where data is abundant, and then fine-tune it on a downstream task of interest. While pre-training has been effective in many language and vision domains, it remains an open question how to effectively use pre-training on graph datasets. In this paper, we develop a new strategy and self-supervised methods for pre-training Graph Neural Networks (GNNs). The key to the success of our strategy is to pre-train an expressive GNN at the level of individual nodes as well as entire graphs so that the GNN can learn useful local and global representations simultaneously. We systematically study pre-training on multiple graph classification datasets. We find that naive strategies, which pre-train GNNs at the level of either entire graphs or individual nodes, give limited improvement and can even lead to negative transfer on many downstream tasks. In contrast, our strategy avoids negative transfer and improves generalization significantly across downstream tasks, leading up to 9.4% absolute improvements in ROC-AUC over non-pre-trained models and achieving state-of-the-art performance for molecular property prediction and protein function prediction.",
    "citationCount": 1424,
    "references": [
      "44ee7dbae6ad53cb13e49e7e641b54089ca5788d",
      "39b68545a1f36a8316eb131121310901e2e2206a",
      "7f40eba81644fdb356102a1d97a75fae4e7d3856",
      "55ad004bac6bb364a50f05a994524661083c4762",
      "6b010e07618eb36abe6def23d94488b2c81ecbf7",
      "0f8ba94096247e6ffec960acafbc18b08ed1ff17",
      "307c5103c9ecbfc7f11f120d8ab9f33b24c6c650",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "cb2722b202b2b0b1b9b87eb4a984dee9040f34c3",
      "aa5741c74b7fac10680c1cfbdd49d9ffb5751a68",
      "023d48fd121531196321a6c184050a45bc73f0db",
      "5bcd55a56a06832ae172f8e60463e80fd0451abf",
      "b3dff86fa90bb02b39f07298bf72bb4f2c2a1167",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "967a21a111757d6af7f7a25ca7ea2bdf6d505098",
      "4d98f8d5a46c804cc5e30321f2abad37234ec9d9",
      "5578de6d4bbb190e7abe62a2a6c0d97dece0ee12",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "d9f836a2062864e4808e12224e2286a353498202",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "9128664d4bfe7c7ebd39dbd09e6b34c39fb30504",
      "20c8ef1bd47a27cf3d44452d1a0d1a9dbaf67f8f",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "9328398a2a0b1f6f55d226e2498605769182398d",
      "3febb2bed8865945e7fddc99efd791887bb7e14f",
      "046c4276b72e21731150c0655519ec717d8f5bad",
      "88a99980f1f7eeac5f36be2e4601898988bdf937",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "b36a5bb1707bb9c70025294b3a310138aae8327a",
      "438857d4c9aa86ee78fe54641a0d96e1afe809e9",
      "ecf6c42d84351f34e1625a6a2e4cc6526da45c74",
      "d2a8e1857dbfaef6713e33a1946ea7548f8209a3",
      "ffb949d3493c3b2f3c9acf9c75cb03938933ddf0",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "dc0c84b7c5e6521216da789f8171544709120cf0",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "d0ab11de3077490c80a08abd0fb8827bac84c454",
      "a3294cabbeab185f75885af73f1b2485cf80ee6b",
      "54906484f42e871f7c47bbfe784a358b1448231f",
      "c990dcda41076956426872b7d72ec4121f354102",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "36ea4c0f420fcc1f48e6f44d1ed4aa3ce5c48b47",
      "36ee2c8bd605afd48035d15fdc6b8c8842363376",
      "e02f59cf876cb40233573ff78a1609f969d301cc",
      "8209b22eccfb077f294c8ec4042d2d08ce25460f",
      "7c6de5a9e02a779e24504619050c6118f4eac181",
      "2c03df8b48bf3fa39054345bafabfeff15bfd11d",
      "c1e62b537f3d30018e7979a89b0e0f15e2b6eecc",
      "5972c3d8507359a6cff6ef17c4af206ec76b32bb",
      "0834e74304b547c9354b6d7da6fa78ef47a48fa8",
      "995c5f5e62614fcb4d2796ad2faab969da51713e",
      "72de1bfa528c9450a57394c900361acf1e85b8d0",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "bf516f79a2be377bf3bd02f498bd44a3a10cddb1",
      "fff114cbba4f3ba900f33da574283e3de7f26c83",
      "1a2a770d23b4a171fa81de62a78a3deb0588f238",
      "2f4df08d9072fc2ac181b7fced6a245315ce05c8",
      "4dcf837e57511b669e9f62c87887e8763a9ddb70",
      "87f40e6f3022adbc1f1905e3e506abad05a9964f",
      "b8de958fead0d8a9619b55c7299df3257c624a96",
      "b7c9fe74525db5a573196033e23b09ce1f316a6f",
      "abd1c342495432171beb7ca8fd9551ef13cbd0ff",
      "e6749a56e8f9927f6968ac99ec3163a016168d5c",
      "0fd7e50137eb1940dc7028ac5c9b56454c485764",
      "a8db50edfe26a6ae33a6787e2049de5bacd18666",
      "1eceba2c2bf1d1481ab6b0f8e0162520b54f7b94",
      "9b44a53069dcf4dc10c34e456bf3a5ff160d3ede",
      "a25fbcbbae1e8f79c4360d26aa11a3abf1a11972",
      "6420a334687d290d77c6b5ec99ca17f9d069df4a",
      "0d2336389dff3031910bd21dd1c44d1b4cd51725",
      "a411f6a0e6473137ac1a538f7cee65722fa3584f",
      "48ddd9101a90fe65e3061de69626741b843ff5e4",
      "c85d9b8b684367b44b924529fb6dd2913350d3c4",
      "7ef3ac14cdb484aaa2b039850093febd5cf73a21",
      "df2b0e26d0599ce3e70df8a9da02e51594e0e992",
      null,
      null,
      null,
      null,
      "34f25a8704614163c4095b3ee2fc969b60de4698",
      null,
      null,
      null,
      null,
      "db8dbe07af7eebc1eed662be268592f00f4882e0",
      null,
      null,
      null,
      null,
      null
    ]
  },
  {
    "paperId": "0c7e1338a9c7914a3b9a5bdc42b457b3f272160e",
    "title": "Session-based Recommendation with Graph Neural Networks",
    "abstract": "The problem of session-based recommendation aims to predict user actions based on anonymous sessions. Previous methods model a session as a sequence and estimate user representations besides item representations to make recommendations. Though achieved promising results, they are insufficient to obtain accurate user vectors in sessions and neglect complex transitions of items. To obtain accurate item embedding and take complex transitions of items into account, we propose a novel method, i.e. Session-based Recommendation with Graph Neural Networks, SR-GNN for brevity. In the proposed method, session sequences are modeled as graphstructured data. Based on the session graph, GNN can capture complex transitions of items, which are difficult to be revealed by previous conventional sequential methods. Each session is then represented as the composition of the global preference and the current interest of that session using an attention network. Extensive experiments conducted on two real datasets show that SR-GNN evidently outperforms the state-of-the-art session-based recommendation methods consistently.",
    "citationCount": 1574,
    "references": [
      "fd3f489fc0438e500c0473af40dfebe4705df6d2",
      "2754380bf487a455112d9c5594914688f9205ac0",
      "97de32d8ca162944e5f7e83071c596d13d168109",
      "68f0901176ab82b29eb79276b74cb4bf601e196e",
      "4ab5a2b7eab033c2c2059b6e1e3e6f3e89ebd95f",
      "bb6bf94bffc37ef2970410e74a6b6dc44a7f4feb",
      "ed7efa6b8e5ba412b3f3f4e5f775b6c6a39e6936",
      "79baf8cf6be6510f69be8c515516136138678cf5",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "8c5442756d8e7110b3cfec0f366f502d82bfe835",
      "36ee2c8bd605afd48035d15fdc6b8c8842363376",
      "908e33baf3eacc2e50c7dede52af96cf9cf5ac59",
      "e5db1997267109e1ab0f788dc294bf176c28eb1d",
      "e0021d61c2ab1334bc725852edd44597f4c65dff",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "17f5c7411eeeeedf25b0db99a9130aa353aee4ba",
      "0834e74304b547c9354b6d7da6fa78ef47a48fa8",
      "54b2b6f35f1b5704dddfaa3a137a2f4ad3dfe745",
      "0b544dfe355a5070b60986319a3f51fb45d1348e",
      "239bf6d2204c54718aaa3748e73c8e3109ea75ac",
      "fff114cbba4f3ba900f33da574283e3de7f26c83",
      "87f40e6f3022adbc1f1905e3e506abad05a9964f",
      "50d85cb114f7c5e779a6772f2931e77dddd54a5e",
      "d4bbcc842f22547eaf5884251eaa68251895dccb",
      "db16e908246f32b60a6e0a8e27093aa145fbb1ed",
      "e19971e7d100386b9b4cf4ea1a0782b62fe036e5",
      "e12c07178f0dc2fcccee21c96ed26f142dc1e08f",
      "2d1cfc9e81fb159967c2be8446a8e3e7b50fe36b",
      "f82c52452c7de8cd6472202c1be2cce9fbcb8dda",
      null,
      "480ca76957e066eb6b24cd28df998d30310b4ced",
      "9819b600a828a57e1cde047bbe710d3446b30da5",
      "3efd851140aa28e95221b55fcc5659eea97b172d"
    ]
  },
  {
    "paperId": "21e33bd0ad95ee1f79d8b778e693fd316cbb72d4",
    "title": "Beyond Homophily in Graph Neural Networks: Current Limitations and Effective Designs",
    "abstract": null,
    "citationCount": 1018,
    "references": []
  },
  {
    "paperId": "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
    "title": "Weisfeiler and Leman Go Neural: Higher-order Graph Neural Networks",
    "abstract": "In recent years, graph neural networks (GNNs) have emerged as a powerful neural architecture to learn vector representations of nodes and graphs in a supervised, end-to-end fashion. Up to now, GNNs have only been evaluated empirically\u2014showing promising results. The following work investigates GNNs from a theoretical point of view and relates them to the 1-dimensional Weisfeiler-Leman graph isomorphism heuristic (1-WL). We show that GNNs have the same expressiveness as the 1-WL in terms of distinguishing non-isomorphic (sub-)graphs. Hence, both algorithms also have the same shortcomings. Based on this, we propose a generalization of GNNs, so-called k-dimensional GNNs (k-GNNs), which can take higher-order graph structures at multiple scales into account. These higher-order structures play an essential role in the characterization of social networks and molecule graphs. Our experimental evaluation confirms our theoretical findings as well as confirms that higher-order information is useful in the task of graph classification and regression.",
    "citationCount": 1654,
    "references": [
      "90678e09651954ace70fe645c5cc8d8f0d8acdb7",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "e1799aaf23c12af6932dc0ef3dfb1638f01413d1",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "a73531abe4cafbccd5b3e949e84410a50016bd33",
      "c751ab01aedc2888a7fe6e8b4f77ab1afa94072f",
      "733f49039d1ce077a116d03633e3338125f33196",
      "b131ac160af2c3ef91aff47f6578067183ca4c4b",
      "ecf6c42d84351f34e1625a6a2e4cc6526da45c74",
      "5bf31dc4bd54b623008c13f8bc8954dc7c9a2d80",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "ee9c6aeb6e29cf3c9081df2cc100b8203ebf5cff",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "d0ab11de3077490c80a08abd0fb8827bac84c454",
      "0f3d2a17809f999cd4ab9d97fd5eb71086580685",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "83b8b21842bf4257f55f75d86aadfb964ec41096",
      "da2e04453b6f0d89ee75e6f68d619d936cd9c0b5",
      "7c6de5a9e02a779e24504619050c6118f4eac181",
      "d71c0365685300539109e0fd07e34c9dd9beff75",
      "3ce05152dbedab572167e031b90d677c13b49767",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "03a3345e63713b97b3779e6572c73daa3dafdc26",
      "e8f16ec1024a6cffbb4e0d57529e9432207d4a5c",
      "00d736c540f80582279093cfc5ffe454a3226da9",
      "4035d7709cb8e604add77451001cbae63f992b5c",
      "89655dc3c3a794cb25e055aed79424c66301d70f",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "4453295600cc89c33f643c8729972fa64aab0233",
      "b36661caeaa83155d1b665e5dab50b22ba9f8acd",
      "273dfbcb68080251f5e9ff38b4413d7bd84b10a1",
      "7e1874986cf6433fabf96fff93ef42b60bdc49f8",
      "a7fc751cd95bd1a409a26daaef69fc3aa8a35e0e",
      "d6fe05d447c3a379b81c4760f10838a370054c8e",
      "70ff05e93f4eaeef4b8b51ba4e11d1c4cdf856ca",
      "20036cd7fac884130f642d3df30b1fd7fb24c6d2",
      "2dfd92c808487049ab4c9b45db77e9055b9da5a2",
      "e6c4925fb114d13a8568f88957c167c928f0c9f1",
      "894b7897dc2143c5e8db666766cf59637a7c7b82",
      "262d9a9cd7b99a6008e59d440c8fadf1f375b51e",
      "11cf4bea8ffde8225eaea72e71b4c8497f240d72",
      "c53062136a610a9a2e8e9d8b3d7fd1f7ad701e03",
      null,
      null,
      null,
      "104c4017c200f434dc7ecfbef143b5f135497abc",
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      null,
      "647fdaacfcea319677175464b7db39e3b22c7808",
      "551cc8f8570c91746baa07c627b548d6c3f34000",
      null
    ]
  },
  {
    "paperId": "1fad14bcfc2b75797c686a5a05779076437a683e",
    "title": "A review of graph neural networks: concepts, architectures, techniques, challenges, datasets, applications, and future directions",
    "abstract": "Deep learning has seen significant growth recently and is now applied to a wide range of conventional use cases, including graphs. Graph data provides relational information between elements and is a standard data format for various machine learning and deep learning tasks. Models that can learn from such inputs are essential for working with graph data effectively. This paper identifies nodes and edges within specific applications, such as text, entities, and relations, to create graph structures. Different applications may require various graph neural network (GNN) models. GNNs facilitate the exchange of information between nodes in a graph, enabling them to understand dependencies within the nodes and edges. The paper delves into specific GNN models like graph convolution networks (GCNs), GraphSAGE, and graph attention networks (GATs), which are widely used in various applications today. It also discusses the message-passing mechanism employed by GNN models and examines the strengths and limitations of these models in different domains. Furthermore, the paper explores the diverse applications of GNNs, the datasets commonly used with them, and the Python libraries that support GNN models. It offers an extensive overview of the landscape of GNN research and its practical implementations.",
    "citationCount": 166,
    "references": [
      "b7893a2b222e36bcf61c4d7aedc4fcc063e72421",
      "3b3b3eaba78a8a51008da1c879c07b82ff816b48",
      "7b924a46d28aa68095ab08f00804f95221a551e0",
      "9df2754fb6c57ba8236b77579d0a737b39bb2584",
      "ab7e85dc7f2b454bffda612705d77e9b8f29e429",
      "98543d976f347e34ab7b2464f19dfe4ae96963a3",
      "19d6eb8e60055418a8faefdb2d49ac879570ea40",
      "6e55aa4226e7458db339a805d06952f904fc1f51",
      "73bbb3c5f8917f0ad30539245669bb95002e0b8b",
      "bfb545002fe2f3013a6e781c0cde9eb1e14a321c",
      "57000c063181bfdbeacdfabef2910cdf8695d416",
      "7a206132bf2754d5d0ae5779e38c86cac6d2a998",
      "b2ea3564e8d763a00d733a3dc44f85550a995fd0",
      "503fc448d038db46ad1f0c2073a75399478e9939",
      "27a58a716d11b3ccef1eb23b0993014e1f337189",
      "ca84775e42df638198ddd7a3d960b782b8b70122",
      "bfb2811eb9f1710785073df5ad098aae398e8580",
      "61a4fb1b9a20550f389c48ec4099f2b266b72fdf",
      "ab27a370d87617255455a05cb2d98c268b5fa06b",
      "4fa31616b834c377c4995c346a2b17464f25692a",
      "094a01c23397968117a96d75a41710c44a52272f",
      "e6d468de025af0beac8a8f6a0a13d863c1689fcd",
      "5f28a5912fe0761ca6fc169a311d0c037add078a",
      "722a41f71df0b7bc3d02bcfbffe09bc24432e702",
      "118ee1b94935e8edb9e50e50da66c0e1510345e0",
      "5e4350122beff68ef4a8ccb53b49df278e330bd6",
      "73dcfa1e34747b87854e6924a91560a263d5341c",
      "d6dd35559b75774a4f97695249abe0bac8d4c86c",
      "43f1aa1f862f17a58f22930d53d8333d116816d2",
      "5542d0ff99767f75f8c8a329fc3d88d73ff470c3",
      "0ddd6dcf82032e0c5e10427502941b467167a518",
      "892b76a61946769f4132ae4b0cbe5c5590dbc90e",
      "ab30672c8c5e4787f6a5985f26a8f281f0db2fb8",
      "645054d31fa26b29bbfb0cf73b75f8906c359415",
      "3443efc855cebd17d1512d1a703b6e9ee2e4da8b",
      "154ecd2323856271a57c23489401c64f1d471606",
      "c30c0092bf4eb8a44faec3fc60cdd5006276bcdc",
      "62634f2e696fca1ef11660c6807e538e3768b836",
      "9517f4d78929978050fd5c2a3c10e9178c3db7a8",
      "d1add177e82c0c1931ab49a78e7f2055f2a2db16",
      "5755e608f9d45520d994e94bae47cea1dd72f41a",
      "6942bdc5aa70ed1288c49621719de2f699bf83dc",
      "dc0e30b0ed3edbf4a42c668efd45c383ec8b8e5d",
      "40c71c9ab559c3a39f1d20f221c8c02e6f394c4b",
      "22cc76c6d9b25facb2874bbcbbbfe781a4d85bcd",
      "f5e267335a4ff157b9738201ce198ab4f31d9019",
      "b36bade58c8c2a3be72e2c3fcccff2a1b15a2d8d",
      "903d62dccc969f5e6642d89fc746b94de7e8c1af",
      "fa49b3093418b7fa28fd40692a58e3d1ffe6a3ef",
      "8f5bac59311dc32ed75d76587ff60df00e1be502",
      "dd64405e42f09b55088d48f5f074880c71725fc3",
      "0a6a9e6d4e3efd7c69357769305b70097281655f",
      "e3d662bbd0e5539fe22a85f3518f960595b9914e",
      "b696862bbb0f73c6f39fce6a46f9f02842295040",
      "f39b5b60981bc3c37f0557963737f67e9241b8eb",
      "6b010e07618eb36abe6def23d94488b2c81ecbf7",
      "1dd85020555ca9fcba8db9be04cdf1daf03b9b92",
      "398d6f4432e6aa7acf21c0bbaaebac48998faad3",
      "68b3dfb69cbaf72a3455614ba41f49d0f6c7a4e5",
      "5fa5497dcfddd80cc5887714b743a152807caa86",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "be8c67d8f4b2f55f279bee195d0ccc7ee7c47413",
      "6017e81c5ede6c38b306a3df9738aeb04baa7619",
      "ccb5e0ee82fb748b0c513c89f24442734588ebc7",
      "730132a18b01ac56b17e4afc452cd00612b22799",
      "1fad7fe0a7a90a8470a0688ad26bab6ceb8a85b7",
      "d5aefe86b1ba8c773a6bd0e84812ace161b8c0db",
      "e4715a13f6364b1c81e64f247651c3d9e80b6808",
      "83b44a37ddf121e660c873e207c2909b79f23469",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "a625dee1fb23d1c842a961bc354c0aef3a20c132",
      "fdc708aaa0d18c791f878ff2214201410fa52439",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "f09f7888aa5aeaf88a2a44aea768d9a8747e97d2",
      "c7d007ba376faddf0046930ea7375ed59600cee9",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "bcc6c7cdeb38a7a12c0b4036943c240c779ea2d7",
      "63d9a6ba5ed3d382d9678564d90f0a890d49eccf",
      "175c60bf8e41d33c4ae15bcc956f61432c646ad8",
      "7b51df707c7085f7be5db4fdc1434ceacdf68d58",
      "769bfd4a4b45979cf83bb56c054ebcaaaf8b35d7",
      "bda499c853d6351b168cb7999286f3c7d81ac184",
      "da923d1ccfd4927fae7c2a835c7979e3a4dec159",
      "7c6210a7b2dcc2f65a43d29422acc51380083f71",
      "32531ef88cd9df37f6a90a127d7266a49e7bb9bc",
      "36e8e962be2b55bb45892b4e484f53a0935ced10",
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      "5b80163196546484f8ad2b139c2fd1a55e1b508d",
      null,
      null,
      null,
      null,
      null,
      null,
      "ec9b3a3f562cfdb6e95d72eb5dc4d4d77f3d5f08",
      null,
      null,
      null,
      null
    ]
  },
  {
    "paperId": "398d6f4432e6aa7acf21c0bbaaebac48998faad3",
    "title": "Graph Neural Networks for Social Recommendation",
    "abstract": "In recent years, Graph Neural Networks (GNNs), which can naturally integrate node information and topological structure, have been demonstrated to be powerful in learning on graph data. These advantages of GNNs provide great potential to advance social recommendation since data in social recommender systems can be represented as user-user social graph and user-item graph; and learning latent factors of users and items is the key. However, building social recommender systems based on GNNs faces challenges. For example, the user-item graph encodes both interactions and their associated opinions; social relations have heterogeneous strengths; users involve in two graphs (e.g., the user-user social graph and the user-item graph). To address the three aforementioned challenges simultaneously, in this paper, we present a novel graph neural network framework (GraphRec) for social recommendations. In particular, we provide a principled approach to jointly capture interactions and opinions in the user-item graph and propose the framework GraphRec, which coherently models two graphs and heterogeneous strengths. Extensive experiments on two real-world datasets demonstrate the effectiveness of the proposed framework GraphRec.",
    "citationCount": 1918,
    "references": [
      "648752f6ee31230b663bc767adc0557025ab637e",
      "93830f5dcc50fd88feba545582bc4ff8cd6992c2",
      "9801763d1acb87fd7e421adaa7ff7a00527c8d6c",
      "c8865b6184877fce2873a448d32c1bfd5ba685f2",
      "a79ee3eeb567a1758a081b6965013bca0de5acfc",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "91342d2d127057195f9de487c4a92cf38e91d6b9",
      "5875df2aa9f69e97e4c1be4a91dde539091ba052",
      "e2af314b238088588eebb94210535e31d5f647e1",
      "ef08ad10d257fcf5043d27d7225d6ec14a677a84",
      "aa33f96e37f5222ef61403ac13dab54247120bdb",
      "a6401e102c03a441992b3e45f7b63eec09d4b89d",
      "d2941a495900c7b8cc46fcb357c0d2c5d7d086e1",
      "fdc708aaa0d18c791f878ff2214201410fa52439",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "1ab4f6fc570b21756793cb286e8cdeb37736f858",
      "ad42c33c299ef1c53dfd4697e3f7f98ed0ca31dd",
      "ace1059fd85bbb8b41874a47a029bba7899124a5",
      "0e779fd59353a7f1f5b559b9d65fa4bfe367890c",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "ca5b65ab5444384c9e0f7937d0f850dc3576a831",
      "36ee2c8bd605afd48035d15fdc6b8c8842363376",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "455afd748e8834ef521e4b67c7c056d3c33429e2",
      "7560e17660af48921da9c36305f9ec4d45642177",
      "37b1ea5fb0ff024b6b49c43843efd77603390836",
      "92dc7585a618655928993c997e9c91dd3cc427bf",
      "3eaf79589dbb9bce5a502e867a8f03917e52de26",
      "eeff60867041d2ea92d1b38a20c2031d240d8872",
      "39e223e6b5a6f8727e9f60b8b7c7720dc40a5dbc",
      "8090ca9679d5c2ab40a090385e545944713031b0",
      "c73287153c0a50102a40800c1ada626a410c63cc",
      "3bddba3214fe9e7248a934455a2624aa5b781778",
      "c6d4da0770c9e930526c103ffea5d2a2294dc44d",
      "cf6f83fcce274606bf0264c59d1c78a30c9c9d18",
      "e19971e7d100386b9b4cf4ea1a0782b62fe036e5",
      "228bafce55e6f1cbe2c1df75b1949a1fb9c93eb3",
      "6678fd2d27ef1263a97823193ea1add21a82844c",
      "85fa09523724489648d900c67c7ba1d9e24375c3",
      "34f25a8704614163c4095b3ee2fc969b60de4698",
      null,
      "9ea6354c67fdc96219b1458641d4ced8e9c42526",
      "38e024c97f0e55097919066b7233a5caa622a62f",
      "4cc352fa9dc7fc87389ce95e6779a2603f4ee87f",
      null
    ]
  },
  {
    "paperId": "ac225094aab9e7b629bc5b3343e026dea0200c70",
    "title": "Predict then Propagate: Graph Neural Networks meet Personalized PageRank",
    "abstract": "Neural message passing algorithms for semi-supervised classification on graphs have recently achieved great success. However, for classifying a node these methods only consider nodes that are a few propagation steps away and the size of this utilized neighborhood is hard to extend. In this paper, we use the relationship between graph convolutional networks (GCN) and PageRank to derive an improved propagation scheme based on personalized PageRank. We utilize this propagation procedure to construct a simple model, personalized propagation of neural predictions (PPNP), and its fast approximation, APPNP. Our model's training time is on par or faster and its number of parameters on par or lower than previous models. It leverages a large, adjustable neighborhood for classification and can be easily combined with any neural network. We show that this model outperforms several recently proposed methods for semi-supervised classification in the most thorough study done so far for GCN-like models. Our implementation is available online.",
    "citationCount": 1704,
    "references": [
      "c2d40522eaa5523d67a0de5e4098e7031fdccb3d",
      "36011ae319059d9da156aa42f3f03391992bdda8",
      "0132b27e3681ce910ae74643e33a53b74bd5f5c7",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "7e57e57d3171c83879d8a325075ba15e914a872b",
      "7dd9dc6efe8af57978c4711540619fc47f565033",
      "dcd5b17b26c028b574cfcadd0d4e47b8d169ce5c",
      "2d402e67460a59f4560524d67dcaac9b93a4439b",
      "2503dff90685857ce7295e37d0045e2eef41c8b8",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "49a5b5e65078eff512083d9de413d49a8aadc064",
      "908272f8e6340971600148d4e73f50e1e8843aaf",
      "2b76b6e766547b3c6dbc2785a084ec3b72cb760d",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "11222e4f5262c774bf9c006420eb647b951624b2",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "cd8a9914d50b0ac63315872530274d158d6aff09",
      "f09f7888aa5aeaf88a2a44aea768d9a8747e97d2",
      "97f7ef7a5332218e0e9ce75ad5cf77048466ca83",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "d495a2203b9cb84366f0b387d6ed4b09ac2d04ea",
      "36ee2c8bd605afd48035d15fdc6b8c8842363376",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "7c6de5a9e02a779e24504619050c6118f4eac181",
      "3d846cb01f6a975554035d2210b578ca61344b22",
      "561c3fa53d36405186da9cab02bd68635c3738aa",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "0834e74304b547c9354b6d7da6fa78ef47a48fa8",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "3105c03f6ee3135ac6b649ed6313ae0e6c0eb8fc",
      "fff114cbba4f3ba900f33da574283e3de7f26c83",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "0ecdf0d9e33ae993d5f789c6e1bb410ba2fca0b8",
      "79adfb2c5d64f4847c82d7ce2a9b0e647236f83d",
      "ea9d2a2b4ce11aaf85136840c65f3bc9c03ab649",
      "43d2ed5c3c55c1100450cd74dc1031afa24d37b2",
      "788b6f36a2b7cab86a5a29000e8b7cde25b85e73",
      "e1ca9b6a4171642c69262fe88695a5c7a1672b99",
      "04f4085c0126ba29453a582cd1e62e05c8e15c82",
      "eb82d3035849cd23578096462ba419b53198a556",
      null,
      "efac04450c531b3769451a886ed9a42fce4754d9",
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      "b6b26564df790262abbe48fa18079d9610189b29"
    ]
  },
  {
    "paperId": "fc580c211689663a64f42e2ba92c864cb134ba9b",
    "title": "Graph Neural Networks for Learning Equivariant Representations of Neural Networks",
    "abstract": "Neural networks that process the parameters of other neural networks find applications in domains as diverse as classifying implicit neural representations, generating neural network weights, and predicting generalization errors. However, existing approaches either overlook the inherent permutation symmetry in the neural network or rely on intricate weight-sharing patterns to achieve equivariance, while ignoring the impact of the network architecture itself. In this work, we propose to represent neural networks as computational graphs of parameters, which allows us to harness powerful graph neural networks and transformers that preserve permutation symmetry. Consequently, our approach enables a single model to encode neural computational graphs with diverse architectures. We showcase the effectiveness of our method on a wide range of tasks, including classification and editing of implicit neural representations, predicting generalization performance, and learning to optimize, while consistently outperforming state-of-the-art methods. The source code is open-sourced at https://github.com/mkofinas/neural-graphs.",
    "citationCount": 37,
    "references": [
      "7e55ed49e654172951a484bf3e01f83a94dc5e2c",
      "41e0e73cbacc7cf96f051dfbd0ce64ae1ad02b81",
      "59854c05cb5c5ed2f2a1633dd08269aa843d3314",
      "7d03af1ccf5404e23bee02903b41850e88cc8590",
      "894cd84bcc7acfb8cf5571c65cec124349f304d5",
      "0fe32760abee110108e4a0d566c3c407d8445402",
      "c088b46519c036149a9f6da4ec36383b800a0d2a",
      "a84b33c93222d525abcee154698aa937e110fb77",
      "6e66badc07112ffda5f40748ac392244c0fa4312",
      "113168f91c412790f8b92995860411f02187a820",
      "cd6496bc404e18a24f634e3dded2ed1cdca03e0f",
      "2d59b386a6037a895edf72c4420b76f64d921ee4",
      "ef2dec2c570cbba3d49dd29ceee4990a83cf455f",
      "80ee4eb1b750d23261ae6d840ce5d24f69b33c83",
      "4d41c2fa74dd018e39ddb3cbbfead1b42615612c",
      "14014c024674991149f3ecf9314c93f7e029ef1a",
      "f401a919db41eca28aa1cff062d98cc03b7ab66b",
      "3b5bd23386ded50640d285bc95d748272b23ca5c",
      "8a858fb857abc06817d245bcb774a3901676f144",
      "43b1e34451f783fed053c1d539d7560dc4ec16a9",
      "19c0d004bd0e42a6449d8b7717cbda4431a67e65",
      "8362dffc9849a76f5ea73fc03d4c8b9fd10351d2",
      "664cc25b6b6efe6c1972d82c6cd87dab52b07466",
      "f80be25edf309ab595fc76fddd8cefe8eb2e5a54",
      "271b31b41782d11c5176a260f0ecdf2611b21e77",
      "cb4147fbd0704398c692667078efff935a36bb6d",
      "7cfa5c97164129ce3630511f639040d28db1d4b7",
      "f9c602cc436a9ea2f9e7db48c77d924e09ce3c32",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "2ddc07ca7af4578fde868f102d178dc3ba6a0751",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "b8ff7e02ffa1577d125acd3e998e8ce76a9059dc",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "97fb4e3d45bb098e27e0071448b6152217bd35a5",
      "71683e224ab91617950956b5005ed0439a733a71",
      "2c03df8b48bf3fa39054345bafabfeff15bfd11d",
      "995c5f5e62614fcb4d2796ad2faab969da51713e",
      "eb42cf88027de515750f230b23b1a057dc782108",
      "8198ec90c9e97f583f921451e7112d943da75cb4",
      "a6246fe0de701ffa463c5c81c6297e8112d56f58",
      null,
      "5d90f06bb70a0a3dced62413346235c02b1aa086",
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      "5dbe244846bfedfd687be0cdaba19befcd96c8f6",
      "162d958ff885f1462aeda91cd72582323fd6a1f4",
      "76623c3a14a67dd454a55e4790f60bd670ec2f0c",
      null
    ]
  },
  {
    "paperId": "011a1bbb4059b703d9b366468ef9effdb49f4df9",
    "title": "Graph Structure Learning for Robust Graph Neural Networks",
    "abstract": "Graph Neural Networks (GNNs) are powerful tools in representation learning for graphs. However, recent studies show that GNNs are vulnerable to carefully-crafted perturbations, called adversarial attacks. Adversarial attacks can easily fool GNNs in making predictions for downstream tasks. The vulnerability to adversarial attacks has raised increasing concerns for applying GNNs in safety-critical applications. Therefore, developing robust algorithms to defend adversarial attacks is of great significance. A natural idea to defend adversarial attacks is to clean the perturbed graph. It is evident that real-world graphs share some intrinsic properties. For example, many real-world graphs are low-rank and sparse, and the features of two adjacent nodes tend to be similar. In fact, we find that adversarial attacks are likely to violate these graph properties. Therefore, in this paper, we explore these properties to defend adversarial attacks on graphs. In particular, we propose a general framework Pro-GNN, which can jointly learn a structural graph and a robust graph neural network model from the perturbed graph guided by these properties. Extensive experiments on real-world graphs demonstrate that the proposed framework achieves significantly better performance compared with the state-of-the-art defense methods, even when the graph is heavily perturbed. We release the implementation of Pro-GNN to our DeepRobust repository for adversarial attacks and defenses. The specific experimental settings to reproduce our results can be found in https://github.com/ChandlerBang/Pro-GNN.",
    "citationCount": 712,
    "references": [
      "0bc468fdbad864699b4cf48ded94709e6d0c0ce0",
      "346c5e5d28c45ad3460277699bf8e244cd33c2cf",
      "3aab8bea2ba6bd7f076e6f92a504a1e322ca64b8",
      "76ec6e650b520f14a83a65a91e3f8a20d65794ff",
      "6ad5f1d88534715051c6aba7436d60bdf65337e8",
      "d8ad2ca5cbf4882e41bfc336c5c75de8c634869d",
      "099702ed537b73b5d443031b646fafcbde27e33e",
      "f5252075bb34666863cd01cc82c2d941d4ffe6c6",
      "1bfad6fd818bd64db381791efd9252e0313dc100",
      "e77b06d7383da10d77bb6e1a0d0b34efd2826f24",
      "960a6293d068e479435b693df04b839b24ffb7d9",
      "26a0e0d17910c6676fcfa1cebe0cb7f5cd17080c",
      "6f5b1076ebacd30849d86e5f5787e3d43b65911f",
      "7e71eedb078181873a56f2adcfef9dddaeb95602",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "48405a8e7a669a74aebe577a8b9334776bb9adbb",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "7f77058976e2fe75e98280371962c43d98c98321",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "6c44f8e62d824bcda4f291c679a5518bbd4225f6",
      "2503dff90685857ce7295e37d0045e2eef41c8b8",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "54906484f42e871f7c47bbfe784a358b1448231f",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "18b47b83a373f33d6b902a3615f42c10f7600d72",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "453aaee9132af9e97c3d25ae3a53f3271dc176c4",
      "16ad6f04de6a3e9d9ade77f48480ac1acb79b1b3",
      "f2f9084c33b46cdccb3516fcb2c5419f8373ec1f",
      "3fe293838ee90fc0bd1d11121717616b1fe477ed",
      "8e9f5c99f8c006e78eb9e515ec9c618cc34f2794",
      "9be428c9383d47b86570b1b9fc20faf006346c5d",
      "040c161f21e0fa57ac192ac826310f55d60277b0",
      "b013e93ddf278da9525f56dd45d84ea4514de985",
      "d58e04d7288bf30e566fa2f77438ca7c111f1222",
      "228bafce55e6f1cbe2c1df75b1949a1fb9c93eb3",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      null,
      "3c718363c22221fd16771672da3bfd5f67d2c34c"
    ]
  },
  {
    "paperId": "e4715a13f6364b1c81e64f247651c3d9e80b6808",
    "title": "Link Prediction Based on Graph Neural Networks",
    "abstract": "Link prediction is a key problem for network-structured data. Link prediction heuristics use some score functions, such as common neighbors and Katz index, to measure the likelihood of links. They have obtained wide practical uses due to their simplicity, interpretability, and for some of them, scalability. However, every heuristic has a strong assumption on when two nodes are likely to link, which limits their effectiveness on networks where these assumptions fail. In this regard, a more reasonable way should be learning a suitable heuristic from a given network instead of using predefined ones. By extracting a local subgraph around each target link, we aim to learn a function mapping the subgraph patterns to link existence, thus automatically learning a `heuristic' that suits the current network. In this paper, we study this heuristic learning paradigm for link prediction. First, we develop a novel $\\gamma$-decaying heuristic theory. The theory unifies a wide range of heuristics in a single framework, and proves that all these heuristics can be well approximated from local subgraphs. Our results show that local subgraphs reserve rich information related to link existence. Second, based on the $\\gamma$-decaying theory, we propose a new algorithm to learn heuristics from local subgraphs using a graph neural network (GNN). Its experimental results show unprecedented performance, working consistently well on a wide range of problems.",
    "citationCount": 1956,
    "references": [
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "84a48f57603bfec8acab8894991524062d1f63b4",
      "0ded7a6f60e160f6d6baed1dddc39371797f8fef",
      "908272f8e6340971600148d4e73f50e1e8843aaf",
      "b00cea45c85e68002d34b608aecb4fddd18210aa",
      "16a0ff94b980d0ad9cd5ae3b9a3769c6f358842a",
      "445f0e684e284a86b85f6ba6954cd3bbe452c395",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "ee9c6aeb6e29cf3c9081df2cc100b8203ebf5cff",
      "0f7f5679615effcc4c9b98cf2deb17c30744a6d7",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "ace1059fd85bbb8b41874a47a029bba7899124a5",
      "54906484f42e871f7c47bbfe784a358b1448231f",
      "ff5bc82034f7b7f72765e4ac2d42ea30aef07ec9",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "36ee2c8bd605afd48035d15fdc6b8c8842363376",
      "7c6de5a9e02a779e24504619050c6118f4eac181",
      "322cf9bcde458a45eaeca989a1eec92f7c6db984",
      "79ba8bcfbf9496834fdc22a1f7c96d26d776cd6c",
      "a15528670f0096515a350648e6316582a5f19c1c",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "0834e74304b547c9354b6d7da6fa78ef47a48fa8",
      "033f25ad905ef2ed32a8331cf38b83953ff15922",
      "927610c4031ed6d011380dadbb02d7688fe0cc15",
      "6f7dc83d5a8494d44dc5568c34646a110ed5a2ba",
      "404ae4a2b31d5c2184861cf702f953e47db40cab",
      "6abb292510ec6dfdb7a845d316c2d61539670de8",
      "fff114cbba4f3ba900f33da574283e3de7f26c83",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "87f40e6f3022adbc1f1905e3e506abad05a9964f",
      "a6232b39b562b64b943c1995c9812e099c1cc967",
      "20460b11db27bb41b3504044c334cb5b1e42c9b5",
      "e50f4d3316d13841c287dcdf5479d7820d593571",
      "7e1874986cf6433fabf96fff93ef42b60bdc49f8",
      "df93596d4ed71d2863532c063c4c693711216abf",
      "cf90c4c67b68aa310872031c5842a280afa940b6",
      "8cd9aa720a3a2f9dcb52ad9eb1bf258a80ce0648",
      "054ba27fe5cc6085d20ea2707de886db6865dbed",
      "7a10f6a406b664d1159e7c4fefbdd6ac275aee53",
      "eaf691159545f7ca06e687a55fdd5055f04fd930",
      "d4bbcc842f22547eaf5884251eaa68251895dccb",
      "76c361552181f3798a3fae7485a22a333af85047",
      "44fe68eb2cea44d7936ecf4e7ad2cd3568d984b0",
      "cf6f83fcce274606bf0264c59d1c78a30c9c9d18",
      "d6fe05d447c3a379b81c4760f10838a370054c8e",
      "268a4f8da15a42f3e0e71691f760ff5edbf9cec8",
      "d9b9fb207013bf8afb064f23f3dffc7edd005f73",
      "0250b5c0f7a414dec8c7a0aa7be20c9637eeb6ec",
      "f44ff0677dd1fc960f5cdf9d2ef4f8a5a56ba77d",
      "70ff05e93f4eaeef4b8b51ba4e11d1c4cdf856ca",
      "52152dac5c7320a4818b48140bfcd396e4e965b7",
      "43c073eda59fecee5605c1a172bd6fcfeb155af5",
      "007f3290e1b5e3061a8b7089037ee775efc47b83",
      "8dc9d11e3fc229a1b70bb00de72dc15d55848174",
      "9e379ccc1ebcde7eedfb959e1d2dd8691227a9ac",
      "4d1ebc191df29fa577b8c8bc2f85c15202e9df20",
      "809e37b8f5a60038a04ab6bc88ff1a81a6ef3f09",
      "8c48222c90bbeff0bcddad3cea75e4581167a190",
      "d61031326150ba23f90e6587c13d99188209250e",
      "f1d40a639d7f83d373f07b2bf4a96f0313b584d8",
      "c4d97d04e7836c1d7cf6a5152229c3e336e3256a",
      "04145ceee35ba722e3255148dbe2deb75617b9a8",
      null,
      "1e12363b248f76433bfe2928a47a5efd616d8170",
      null,
      "413240adfbcb801b5eb186b8a9e67fe77588733c",
      "1164ec0b8d2bd8e95b9fc07e9669ff9d4d379c64",
      "a828fd17399d0ec9f59801e21230e7f6391757f4",
      "eac8fb1c9883da002a8a9fb1d514bde116219dc1",
      null,
      null,
      null
    ]
  },
  {
    "paperId": "3bfa808ce20b2736708c3fc0b9443635e3f133a7",
    "title": "On the Bottleneck of Graph Neural Networks and its Practical Implications",
    "abstract": "Graph neural networks (GNNs) were shown to effectively learn from highly structured data containing elements (nodes) with relationships (edges) between them. GNN variants differ in how each node in the graph absorbs the information flowing from its neighbor nodes. In this paper, we highlight an inherent problem in GNNs: the mechanism of propagating information between neighbors creates a bottleneck when every node aggregates messages from its neighbors. This bottleneck causes the over-squashing of exponentially-growing information into fixed-size vectors. As a result, the graph fails to propagate messages flowing from distant nodes and performs poorly when the prediction task depends on long-range information. We demonstrate that the bottleneck hinders popular GNNs from fitting the training data. We show that GNNs that absorb incoming edges equally, like GCN and GIN, are more susceptible to over-squashing than other GNN types. We further show that existing, extensively-tuned, GNN-based models suffer from over-squashing and that breaking the bottleneck improves state-of-the-art results without any hyperparameter tuning or additional weights.",
    "citationCount": 697,
    "references": [
      "089733bd8fde54fad4b5e77b1de470bec9e79f54",
      "3a5af4545ee3ac3f413841c10c7605a1cefeb9e5",
      "3db5fcb595492dcd64663c00d56f004dfafa689c",
      "38293873cce681b857b3c1d73f5590f641f3dc42",
      "94194703e83b5447f519fd8bcbb903916e05aaf9",
      "0a6a9e6d4e3efd7c69357769305b70097281655f",
      "edbad7d5a000a12a7829b6a9b2c5566910be3f08",
      "f80be25edf309ab595fc76fddd8cefe8eb2e5a54",
      "4ce9c20642dce5eb7930966053a1e3da4ef617f2",
      "057b594c9e6ed45fc445a4dc45384117bdd15a3e",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "c2d40522eaa5523d67a0de5e4098e7031fdccb3d",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "5d49c36b7123829768d49c259c1be6b31a49926b",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "5f1d429ba574581ac14effe3ebab654a57dc0e39",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "a60c69c2fae27ebbb73c87f7f2a4765556bd7f9f",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "cd8a9914d50b0ac63315872530274d158d6aff09",
      "d0ab11de3077490c80a08abd0fb8827bac84c454",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "00d736c540f80582279093cfc5ffe454a3226da9",
      "cea967b59209c6be22829699f05b8b1ac4dc092d",
      "1eb09fecd75eb27825dce4f964b97f4f5cc399d7",
      "89655dc3c3a794cb25e055aed79424c66301d70f",
      "0b544dfe355a5070b60986319a3f51fb45d1348e",
      "89147b52cfdf7d8f778763d04d845f7e1bb275ab",
      "ec2b2569b3a0d70a5b45d48b041dec9060d85eb7",
      "43d2ed5c3c55c1100450cd74dc1031afa24d37b2",
      "0b7e7da8149733462998992aad3254abadd3c97c",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      "6a7c6e9feab24ccf51ee9e53cbc0b42b9b421a7d",
      "e720bbf5e2d36740dc44534fdc99134f860051de",
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      "b6b26564df790262abbe48fa18079d9610189b29",
      "ba640c0682b242cb480bb4eb5b934ee6db949269"
    ]
  },
  {
    "paperId": "bd15a322c20f891f38e247bd5ed6e9d2f0b637eb",
    "title": "Discovering Invariant Rationales for Graph Neural Networks",
    "abstract": "Intrinsic interpretability of graph neural networks (GNNs) is to find a small subset of the input graph's features -- rationale -- which guides the model prediction. Unfortunately, the leading rationalization models often rely on data biases, especially shortcut features, to compose rationales and make predictions without probing the critical and causal patterns. Moreover, such data biases easily change outside the training distribution. As a result, these models suffer from a huge drop in interpretability and predictive performance on out-of-distribution data. In this work, we propose a new strategy of discovering invariant rationale (DIR) to construct intrinsically interpretable GNNs. It conducts interventions on the training distribution to create multiple interventional distributions. Then it approaches the causal rationales that are invariant across different distributions while filtering out the spurious patterns that are unstable. Experiments on both synthetic and real-world datasets validate the superiority of our DIR in terms of interpretability and generalization ability on graph classification over the leading baselines. Code and datasets are available at https://github.com/Wuyxin/DIR-GNN.",
    "citationCount": 236,
    "references": [
      "1da867c102a407171e64e2b28cb2f9ce63325ee6",
      "83cbefd67569886c05aca1e350531869f8f399fa",
      "dcd487eb3e6aa77679fe030fdcb3a166075b7396",
      "9389af659f14239319186dff1cef49e8ece742c8",
      "a72c85ccb30db1c76feafb3799481fa7599c8b98",
      "123139463809b5acf98b95d4c8e958be334a32b5",
      "1fc4470c1766aea4c435015f5ef873b066f50121",
      "6ae2967bb0a5e57cc545176120a4845576e068a3",
      "d9f5ec342df97e060b527a8bc18ae4e97401f246",
      "fbf50ed8e09b3268770029af30b01d31973f77d0",
      "00325cb5408da77827951abd3fa93ec3bd019608",
      "1e76e2fbf27198986271a672f462dc38d790d00f",
      "b8b3380efb26854bae6f51ad1d2b5a045129c5a1",
      "6360aaece0d6bf153183b9ecd075f42f7b127cc9",
      "af4ec9e525671319fab3feb19b6f9306d94e5dd9",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "60d7279168e1e1c9e151b68a3a9fc94ad5137ce5",
      "3621fff4a1c791901ea4a1359c10575193ec712d",
      "43f2ad297941db230c089ba353efc3f281ab678c",
      "3a083d843f891b3574494c385699c21766ce8b7a",
      "193092aef465bec868d1089ccfcac0279b914bda",
      "442db0ef2d0ff9d45aeed77010315396c34960aa",
      "753b7a701adc1b6072378bd048cfa8567885d9c7",
      "ab9cc2c6a8d35d7a145cf608ff9dd7af87213253",
      "54e6a214c9dca4ba6bb8c5d52e5b219c5ea50e12",
      "057b594c9e6ed45fc445a4dc45384117bdd15a3e",
      "f1964cc1b343f907462cd7fbfaf88c2679d61f59",
      "01cf1d83b7a4983001a50ec274043f53783ee94e",
      "ee8b1603c79a4f9c3bdc0d6633b595aa93ff3a0f",
      "00358a3f17821476d93461192b9229fe7d92bb3f",
      "f55781f7ce6fd31e946f0efe76d5bf89858391d1",
      "f23072d8dfd357a039b31d130076e74ce4446f30",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "6b5cb359a6a6c2a3d79ade3a825eb3e9a65f3a89",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "d0ab11de3077490c80a08abd0fb8827bac84c454",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "ee84e0a410b084864bd1919e228b9323de7fd913",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "687bac2d3320083eb4530bf18bb8f8f721477600",
      "2caf81b3c200f3c5a4a42c57495f3a0c1265e3b2",
      "184ac0766262312ba76bbdece4e7ffad0aa8180b",
      "f141bb8405b73cf98026dc015289329218983eeb",
      "d08a0eb7024dff5c4fabd58144a38031633d4e1a",
      "8a8f853c9604bbe068c686e7d38b2c7560c36a1b",
      "df2b0e26d0599ce3e70df8a9da02e51594e0e992",
      "5c4dbf5b17e2729c570174f9099f35c247d1a889",
      "f88d8e39dfed5db2bf129467aafd1473f0a424b8",
      null,
      null,
      "404d1df16b673659f52a8017bde4ba00f901e8bd",
      null
    ]
  },
  {
    "paperId": "6ae2967bb0a5e57cc545176120a4845576e068a3",
    "title": "Explainability in Graph Neural Networks: A Taxonomic Survey",
    "abstract": "Deep learning methods are achieving ever-increasing performance on many artificial intelligence tasks. A major limitation of deep models is that they are not amenable to interpretability. This limitation can be circumvented by developing post hoc techniques to explain predictions, giving rise to the area of explainability. Recently, explainability of deep models on images and texts has achieved significant progress. In the area of graph data, graph neural networks (GNNs) and their explainability are experiencing rapid developments. However, there is neither a unified treatment of GNN explainability methods, nor a standard benchmark and testbed for evaluations. In this survey, we provide a unified and taxonomic view of current GNN explainability methods. Our unified and taxonomic treatments of this subject shed lights on the commonalities and differences of existing methods and set the stage for further methodological developments. To facilitate evaluations, we provide a testbed for GNN explainability, including datasets, common algorithms and evaluation metrics. Furthermore, we conduct comprehensive experiments to compare and analyze the performance of many techniques. Altogether, this work provides a unified methodological treatment of GNN explainability and a standardized testbed for evaluations.",
    "citationCount": 623,
    "references": [
      "e76317b5191b88d83758be322c026af77492de44",
      "a993ca6ed37788652ee71f68a6ac69eae6e321e7",
      "323ca85c5c1ebd0ec9bf74897d8c8e8fbf203ae6",
      "123139463809b5acf98b95d4c8e958be334a32b5",
      "23d276ee38644fc5a6d39561e6a5b016b147e01a",
      "c66014aaaf0d38f8186edd3566fdd594b046030c",
      "b9dac216cf4a17e16e6ae06548bac803e90bcdd6",
      "d9f5ec342df97e060b527a8bc18ae4e97401f246",
      "5c3c9caa93e143da0c84bc6e611ead77993345b4",
      "ad720ec891fd143090de390a2e800eb8e9e6eb4d",
      "2320f5a57762b57549ec4dc184460b827702c39a",
      "a8ae2d8232db04d88cf622e5fabd11da3163aa8f",
      "e3201c450fd98e2d81e867ef274ec794ed5e5b6d",
      "c30c0092bf4eb8a44faec3fc60cdd5006276bcdc",
      "45f4585f12ed7310c2dbc487a2aa1ba23c568071",
      "639206a9a32d91386924f1c94e9760dfb43df72e",
      "9e707dd89bba25a3dd22c96f43bd72b9b3ab94bb",
      "75c8466a0c1c3b9fe595efc83671984ef95bd679",
      "12ebe7a1a30bed87b196f1f8e4b1be18e850bdc0",
      "7fd293b1984cac5900434ea796bbe74e05e6623a",
      "0dc14473859b1cb56c82d9e388a575c3e7813603",
      "59cb730ff56333cbf2bc27ec92d43b8c2f473d68",
      "6c252187647a437b32b163a295d62b65cda6e0fe",
      "579476d19566efc842929ea6bdd18ab760c8cfa2",
      "ddc50b4d191b428a9c6942e9633a9aa41c6d453b",
      "8819adc0f064d5293bd2b783a63e23f68109738a",
      "2cc3338709ea9c14ff422025ae4a8ad09f9598ba",
      "3c8a456509e6c0805354bd40a35e3f2dbf8069b1",
      "b0c34618ffd1154f35863e2ce7250ac6b6f2c424",
      "a36dad07b501ac36ba1066c84af7e500442bfa85",
      "ce177672b00ddf46e4906157a7e997ca9338b8b9",
      "6b3586e43a2b6ac42cfbb23c74863bfbf504732a",
      "cb2d9b2f171da67f7b47ac3e0eb935a0de223354",
      "c02602b2df00d450fc4dbb99124e2304d8738b45",
      "f1964cc1b343f907462cd7fbfaf88c2679d61f59",
      "8fb202cdcfec3b0e7ba0e3f88949d6d923b48b2d",
      "26f8d83c5dd370e5f291798e896a9b82e6cf83ce",
      "00358a3f17821476d93461192b9229fe7d92bb3f",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "bc00ff34ec7772080c7039b17f7069a2f7df0889",
      "647f249669738714e08f17bf905fc3e66e65ae2b",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "3df952d4a724655f7520ff95d4b2cef90fff0cae",
      "d5aefe86b1ba8c773a6bd0e84812ace161b8c0db",
      "5f614777d25efd14b7426e99cb2544f2d6be133e",
      "d2d79513f32c4d09b6255b18514d7ad07ebf43fe",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "bab954548db21034436ee4def167664a1790ba86",
      "93b4cc549a1bc4bc112189da36c318193d05d806",
      "b9b21cfa7de32677151571ab44d27d2d246b7a03",
      "21af4ed208ea3ecdb20b75aa27cddd0bfe683eec",
      "e4715a13f6364b1c81e64f247651c3d9e80b6808",
      "7ccc073c58f9be247eaa56bae37bea652c17ce29",
      "1692506a12ade107daf66bea32db9261d1392ed9",
      "2ec7156913117949ab933f27f492d0149bc0031f",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "c27db32efa8137cbf654902f8f728f338e55cd1c",
      "f538dca4def5167a32fbc12107b69a05f0c9d832",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "7e29b68fcc39b7ae94e4d8b1edea93d058804a92",
      "1a2118bed729579528deb51e745d58dd3629baf6",
      "d0ab11de3077490c80a08abd0fb8827bac84c454",
      "8a7525add5a413e27563c2d4e137fdedaffbd354",
      "29e944711a354c396fad71936f536e83025b6ce0",
      "5582bebed97947a41e3ddd9bd1f284b73f1648c2",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c0883f5930a232a9c1ad601c978caede29155979",
      "31f9eb39d840821979e5df9f34a6e92dd9c879f2",
      "17a273bbd4448083b01b5a9389b3c37f5425aac0",
      "e49ff72d420c8d72e62a9353e3abc053445e59bd",
      "eb42cf88027de515750f230b23b1a057dc782108",
      "06e122f475a21d92dba137609c40f35690217475",
      "dc6ac3437f0a6e64e4404b1b9d188394f8a3bf71",
      "687bac2d3320083eb4530bf18bb8f8f721477600",
      "e6749a56e8f9927f6968ac99ec3163a016168d5c",
      "9a7c9a900d0e9d5f7a042ed07e54226f6690a995",
      "3ca5ef46265d58fbb65ad4bf514cf5eb72b149a1",
      "894b7897dc2143c5e8db666766cf59637a7c7b82",
      "dce8146987557735a19771aefa1f027211a2c275",
      "a20f0ce0616def7cc9a87446c228906cd5da093b",
      "f548bc6fc594e17e2b9b936f0c9daf24fa92af83",
      "fca0e8bb93a8242c153ef966cefade5e19e5ed21",
      "ef77a8b0db638c675d032bd05dc3a012a2899da4",
      "768063d0fe3b1304b9a96fc4870a0e68c2966e34",
      "65e271c37b3adf085f1bf7f36321794ef4501239",
      "7b799eeb9ee5f8b22c7e0e90ff75ac28f2801748",
      "861cf64943e90074cd25eada6e4c3912aef17eb0",
      "df2b0e26d0599ce3e70df8a9da02e51594e0e992",
      "394526aa2b9a63c3794f440a0151e219b09368bf",
      "3d538490d2882ef8f492529762b0e3a7ea31774c",
      "52dfa20f6fdfcda8c11034e3d819f4bd47e6207d",
      null,
      null,
      null,
      null
    ]
  },
  {
    "paperId": "24cff2aafcd66e1b7be4f647e478e8e73cf410a5",
    "title": "Spatial-Temporal Fusion Graph Neural Networks for Traffic Flow Forecasting",
    "abstract": "Spatial-temporal data forecasting of traffic flow is a challenging task because of complicated spatial dependencies and dynamical trends of temporal pattern between different roads. Existing frameworks usually utilize given spatial adjacency graph and sophisticated mechanisms for modeling spatial and temporal correlations. However, limited representations of given spatial graph structure with incomplete adjacent connections may restrict effective spatial-temporal dependencies learning of those models. Furthermore, existing methods were out at elbows when solving complicated spatial-temporal data: they usually utilize separate modules for spatial and temporal correlations, or they only use independent components capturing localized or global heterogeneous dependencies. To overcome those limitations, our paper proposes a novel Spatial-Temporal Fusion Graph Neural Networks (STFGNN) for traffic flow forecasting. First, a data-driven method of generating \u201ctemporal graph\u201d is proposed to compensate several genuine correlations that spatial graph may not reflect. STFGNN could effectively learn hidden spatial-temporal dependencies by a novel fusion operation of various spatial and temporal graphs, treated for different time periods in parallel. Meanwhile, by integrating this fusion graph module and a novel gated convolution module into a unified layer parallelly, STFGNN could handle long sequences by learning more spatial-temporal dependencies with layers stacked. Experimental results on several public traffic datasets demonstrate that our method achieves state-of-the-art performance consistently than other baselines.",
    "citationCount": 782,
    "references": [
      "4a4f84992b4ee8331f1e3189f6f9b0437214035c",
      "f420663fe8c69ed5ea5236201a1f4c734cd145a7",
      "24b50f529a69aca17f2729dc3a9f8c7ada1a7d02",
      "459bf3d1e2e602f9bf193a90990ccea4572bab4b",
      "36cf500079b82e3adf4a3afe3356c1c03426bdcd",
      "fae129338c0899576524506008427f64477d3967",
      "05c4eb154ad9512a69569c18d68bc4428ee8bb83",
      "c097be22f1e87a846385047346b73610d91fea4e",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "72edcb3788f9c141a3ed28e6d36f75ca4977d27e",
      "9ba0186ed40656329c421f55ada7313293e13f17",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "2c03df8b48bf3fa39054345bafabfeff15bfd11d",
      "cea967b59209c6be22829699f05b8b1ac4dc092d",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "a538b05ebb01a40323997629e171c91aa28b8e2f",
      "7a1421bb52692d632216aa0b66e85d37a313d400",
      "1ac57524ba2d2a69c1bb6defed7352a06fd7050d",
      "7cd4e19b3eeecf086574969a2cc9d5a4b987275b"
    ]
  },
  {
    "paperId": "00549af4bc3270e0f688acbf694f912d7ee39cad",
    "title": "Devign: Effective Vulnerability Identification by Learning Comprehensive Program Semantics via Graph Neural Networks",
    "abstract": "Vulnerability identification is crucial to protect the software systems from attacks for cyber security. It is especially important to localize the vulnerable functions among the source code to facilitate the fix. However, it is a challenging and tedious process, and also requires specialized security expertise. Inspired by the work on manually-defined patterns of vulnerabilities from various code representation graphs and the recent advance on graph neural networks, we propose Devign, a general graph neural network based model for graph-level classification through learning on a rich set of code semantic representations. It includes a novel Conv module to efficiently extract useful features in the learned rich node representations for graph-level classification. The model is trained over manually labeled datasets built on 4 diversified large-scale open-source C projects that incorporate high complexity and variety of real source code instead of synthesis code used in previous works. The results of the extensive evaluation on the datasets demonstrate that Devign outperforms the state of the arts significantly with an average of 10.51% higher accuracy and 8.68% F1 score, increases averagely 4.66% accuracy and 6.37% F1 by the Conv module.",
    "citationCount": 794,
    "references": [
      "842f0e0022a16cb194cfb86d153bfe37ff39bb46",
      "4ae5f7ef9d5062e8d9f28bafffbadb7495764937",
      "b9c86aebba3b0542dafe51db7398ae5a9bfa1c5b",
      "a91625e7a8828c8ed33e16e732d9e6d969b9bfcd",
      "65313425b7cd5658f7c488cabf51c9197ebac99e",
      "1a2fb75103ea9dc9ff31711ba5aa357088c026bc",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "5f1d429ba574581ac14effe3ebab654a57dc0e39",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "f54f5b68d4fc7c47d04c240d3f189696e8dddc6f",
      "89c6a8c77284e2453efbd3f4c5f494f7b693cb6a",
      "d9b98ccc75ec1a464e84121916fb39838dc61862",
      "2532f593d4cabc92d8adb86beba87f8431c126e9",
      "fef524c90ba47e5b3a062727fd6342240063fda7",
      "18ec9aa174db18f94c4bab972d8631b3fee26881",
      "cd8a9914d50b0ac63315872530274d158d6aff09",
      "8b0acc7ebcd30607010ea62a1a1f253d3ff47bcc",
      "455afd748e8834ef521e4b67c7c056d3c33429e2",
      "322cf9bcde458a45eaeca989a1eec92f7c6db984",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "49512270b39636375880d611d7b2192d324f4ba6",
      "07c4549be429a52274bc0ec083bf5598a3e5c365",
      "2e2089ae76fe914706e6fa90081a79c8fe01611e",
      "f2b119aa69f97cade98ac623fb64bee65b0ad8a2",
      "c3b7a0f57c6b52206310d20b9cd16334fa8709d9",
      "c345afb7e360ba33d735cefca73fb56561381954",
      "de83185c7a2b7924a110d841fcf3694a9a416e74",
      null,
      null,
      null
    ]
  },
  {
    "paperId": "94194703e83b5447f519fd8bcbb903916e05aaf9",
    "title": "Measuring and Relieving the Over-smoothing Problem for Graph Neural Networks from the Topological View",
    "abstract": "Graph Neural Networks (GNNs) have achieved promising performance on a wide range of graph-based tasks. Despite their success, one severe limitation of GNNs is the over-smoothing issue (indistinguishable representations of nodes in different classes). In this work, we present a systematic and quantitative study on the over-smoothing issue of GNNs. First, we introduce two quantitative metrics, MAD and MADGap, to measure the smoothness and over-smoothness of the graph nodes representations, respectively. Then, we verify that smoothing is the nature of GNNs and the critical factor leading to over-smoothness is the low information-to-noise ratio of the message received by the nodes, which is partially determined by the graph topology. Finally, we propose two methods to alleviate the over-smoothing issue from the topological view: (1) MADReg which adds a MADGap-based regularizer to the training objective; (2) AdaEdge which optimizes the graph topology based on the model predictions. Extensive experiments on 7 widely-used graph datasets with 10 typical GNN models show that the two proposed methods are effective for relieving the over-smoothing issue, thus improving the performance of various GNN models.",
    "citationCount": 1119,
    "references": [
      "1170bab0a3d4de34dabe6e086e29d80af0ff70bb",
      "2147e17daec04fd9dd33a8716dd4fb4ea39988a4",
      "724c386aba4577b43730a9d7a59ae2f29298232c",
      "0a6a9e6d4e3efd7c69357769305b70097281655f",
      "76b279bb52e54faa922f2edf0560de08063dda64",
      "b2125d912941244c243a33e31b01e34467cea457",
      "44842bba66366522de782f537d9bc61d8868bf08",
      "2e64d0aa1a5e211e8884b73fa01f4606d2088b7a",
      "4e7dd1e79f0f13650b2612325e6ba8d206dc04fb",
      "85f98bb9e1cd1f5590c1f8412bead538c693b21e",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "362e416c5f55b056a6c5930d55d8e3588efce9b9",
      "6ed647b67c93901f302fa016a5355db8eebc7888",
      "f55781f7ce6fd31e946f0efe76d5bf89858391d1",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "c2d40522eaa5523d67a0de5e4098e7031fdccb3d",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "b7c4570d7d97f327e7f82fe28100172ec5e94cac",
      "ba2a33107afba54adc2d92aa7ad9f747d5258e95",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "3d846cb01f6a975554035d2210b578ca61344b22",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "fab4d19ed77dad7c437d885eceb8aa65fae5a783",
      "43d2ed5c3c55c1100450cd74dc1031afa24d37b2",
      null,
      "5c4dbf5b17e2729c570174f9099f35c247d1a889",
      null
    ]
  },
  {
    "paperId": "3443efc855cebd17d1512d1a703b6e9ee2e4da8b",
    "title": "Graph Neural Networks in Recommender Systems: A Survey",
    "abstract": "With the explosive growth of online information, recommender systems play a key role to alleviate such information overload. Due to the important application value of recommender systems, there have always been emerging works in this field. In recommender systems, the main challenge is to learn the effective user/item representations from their interactions and side information (if any). Recently, graph neural network (GNN) techniques have been widely utilized in recommender systems since most of the information in recommender systems essentially has graph structure and GNN has superiority in graph representation learning. This article aims to provide a comprehensive review of recent research efforts on GNN-based recommender systems. Specifically, we provide a taxonomy of GNN-based recommendation models according to the types of information used and recommendation tasks. Moreover, we systematically analyze the challenges of applying GNN on different types of data and discuss how existing works in this field address these challenges. Furthermore, we state new perspectives pertaining to the development of this field. We collect the representative papers along with their open-source implementations in https://github.com/wusw14/GNN-in-RS.",
    "citationCount": 1256,
    "references": [
      "e71cb855fb45a9c1cf8eb5776867cbd033df02b7",
      "071e053890765ecc2ff8ef9054e9c75ec135e167",
      "3dc2abdc8cad9841a570e9edefb717ed11510b0f",
      "3418602757a13aa3abcb850d6ffba9ff930b3784",
      "f72fadf02a8f8478454bffa12ead46272a213b27",
      "cd551790992d16148fe2e5ff2cc76861195e2191",
      "510b5b370211d2d85d43475d28bfd40fd48a6a22",
      "dc3874003319001f276ec752dd427ac338619bf4",
      "cb96623aac4219e129acde120cbf69d5fecc560f",
      "a7650f272c423de958fcd35fcb4ece0184457287",
      "2364b621fa7e263bbf327d819c48799536246a87",
      "fbb87e32fd63ae980c0ff6cf6878fd5e4d7bda1d",
      "3661e6bca8ebff0a63f8e5060df60320fbcde842",
      "cfa6054db63a4e4fe8b5fb72603007834f7f3151",
      "48e2adf2d8d6b24060174c5a262542c885d12149",
      "c68ccdc85c8616f0bc78b0fb9df1d581429fe691",
      "90b1ffb667528ca1aa62bb2f843f95290ab04f35",
      "bfd2650e6db708cf45223bbeac3c14935252a898",
      "286d2e0f3d882a37f486623c716d8a54a4a58fdc",
      "22c4ed10b03c495161addc677774eba50f82ff4e",
      "919c45fefbba662df1c83c2968fd51b395b98507",
      "67dd6d764bc2a0e34f130d3061745b45b51b1e20",
      "69b6af56160eb25482714fc3a9a93999073dd0a8",
      "86ee0d21948d32242c65764aa70a86a76542a1eb",
      "123139463809b5acf98b95d4c8e958be334a32b5",
      "5bf57b615bfce122792295fd7a4e89d230787ccc",
      "68c9d777b66c24967a7c808210093684d89eba10",
      "6521d263e8faab3657ebb7b28e14eedcfae7f0f4",
      "6ae2967bb0a5e57cc545176120a4845576e068a3",
      "c3ef11a7a8a46f1f193250dd68838cb72b7de0bc",
      "ffb6900c90028ab9cb43d8cd9b290bceb8037803",
      "2933e73f376168ce015897cd018b47996ae23481",
      "7494deed1331617189a1e6cbca0aeb26960266cf",
      "58e70b4a3a1144fe6c3444764b6988abbc57ffd4",
      "74d14abc4c9abd78415d6ae75d3313a5636ac8bc",
      "75739ed2ddebd7982042f516f407553f8d3110f8",
      "63f9bc0d97bdfc80b0227415d170941c211acf43",
      "a6da5335dc3be1aac689ce5393c8e187fcef083d",
      "b0d6319c4b3ed2ba459262d4542a91627c048d05",
      "405a5fbdb450c55fb45c5ccfcd27fcdbfd87527f",
      "a87e4124f7305a97a8efaa574c1b270dccf4a563",
      "e7e6082e19d6acdd4167ba93cbc01ac39fe1985d",
      "9779f919685adee936835eff46914d3d69d9ccb9",
      "2166df61fa87c8a5f3dc2326da83bb00e86fee8c",
      "9f824f066c70a8fdf962f58acd36b48c826836d2",
      "742e9ccd9910f06bc45e77150148dca9ff541f4f",
      "0b33c9c2eec5e7a71e1c051ec76e601e76152146",
      "c4cca20a45472e012e0babd5908ddbb74dc3d76d",
      "afcf9682f820678a3c7acc1cd82e50184e030e5d",
      "39dbb388062b63e82e984d46e2c20b5ca9885b42",
      "fca632402e5fe6c30fe6f7392ebd7e553ca94ea7",
      "bd8628db9d0bcfaf08df6fb476006802e181f858",
      "1ea55d83f3f1b0774fd62ffbd500b2834625387f",
      "95fae17a5845085204197c1579828207d09e82c7",
      "90eb67777feabecf23d0407f73d52c9de890bf0a",
      "b05a5424d0fce45896b6b8a847cf540a38f556bc",
      "310ccafddec24c804aafdea6f0dfa7b1bed58575",
      "b440396ba1a92513bb32f67c7ede2fa5556b3246",
      "8a42a381be3d8bd00f8c861068f4ad90e7faa34c",
      "06ef0a657f2492915d269c57b0066a88aff95239",
      "06dc63f28f32042b478a1a3978257d43b8272b45",
      "9c35d24ba7a25bf1addc515756ffddfa23a77483",
      "b9631936ab9e41511f0eb85adb0fc7b8efb7983e",
      "0ea563c8447e19af11f20a8eb13528fb6fe0e576",
      "3b28e30d648b9634d2e72fdee87a880f38f1908f",
      "0126283bca7a20e234dcf89ee68f3f5400d49622",
      "7715075a99308219bcf40d21d86666363318d9a7",
      "639206a9a32d91386924f1c94e9760dfb43df72e",
      "9d4901609a00d42cba00ffcb3c337bd3830140f6",
      "8e1a8c4f5a683ecaa16ba850c43d574b5a63e32d",
      "d5ddd6b0a661ba22a9c6e8eb8137616a5a2866d8",
      "9e707dd89bba25a3dd22c96f43bd72b9b3ab94bb",
      "75c8466a0c1c3b9fe595efc83671984ef95bd679",
      "f67e4ae0552906aa0fed30d59521269f0ad58a78",
      "6089f063ebd5995c69a92b66f15779563a622809",
      "764ca02cb07c887e41fa4a7642915d1cd93073df",
      "1ab96fd35363936e1f537f164ed40333c30370f6",
      "443c6f2a3bd2f74f1f59bea2b94d455a9c7a5c23",
      "9ee8f774306c0a349b19cdffcaf21d9a1819eedd",
      "e4b1d7553020258d7e537e2cfa53865359389eac",
      "993377a3fc8334558463b82053904e3d684f29c0",
      "6bd2735175b9c3b18c44c6271987eecf7cdb128b",
      "646c36c1f92bb6a8d4d06a36036351de8fe95a85",
      "c99e2877d4b1f171746a3aa73d5fd5fd680c982d",
      "100e8c206db47d8309ff68b8298ef8007ba9eeb3",
      "9cb244aacedd28878b68e311f9504d6f02e44ffb",
      "be781c7623a9dc089d665b775563119b8370534f",
      "b4cc53835ecee68bc37db1fbb1631573a3900906",
      "8b716b3723b78f5ceaedcd656041e9f679dfc5b6",
      "3024f58826a5bce3378af94f677e8fb90cbb49e0",
      "9a455f29aceae3b373411f6bb0757a537e3c16ae",
      "c9e432023a240b22f385cf1cc76ab75fbe084ee7",
      "df716e5f5451af2f37b99466c9429eb2916d4c46",
      "41cd65d760e7de6f10419d36b3d798a7e0455724",
      "c3d07a8a4cece470693e37076e4f464384eef665",
      "beb65071d3a34800564c404e36aba9e964837268",
      "b0d941cfa0a3c43703e5222221addb1ad0f9e68d",
      "2186b695f127b1c2a5b56cb95a78a4a8d538515a",
      "095facb425199fdad2bcc9b0b7959aac76e50695",
      "9fd89d05deb53edc926f3524a8434b685309b928",
      "2a6d160b529272964ce1a6707adf52f3d6ba4861",
      "0fb7cc20774b8d38f40abdcd0a6a29e48f1dcb31",
      "cfb9b31386d6958d85ba34f01249aa66c6a42058",
      "90450fe686c0fa645a1954950adffc5b2401e4b7",
      "31df60fca09bae5c83f8ec5b6c9e4798c765ed7f",
      "75d6b55e8b9146e3d9dce9091cfb03211a664b3a",
      "e61ddb8d56d41b48d255075c8dbd5596fad33ea4",
      "3718a4b0443c294c78fd2140b258985175822aa9",
      "65b8145199089d484a4d9e0baeb2e1ce9145d6fd",
      "6379b61299f6e69ecfd9bf64a706dce9c756016a",
      "16b4a74c4110e3eb50a72e7a0a5e6b893a170d02",
      "c09c5bfd39496f8539b929034376d0cd7cb04b3a",
      "38b06821977b5024dd51145bbcfdd0eac42d439c",
      "c21ae76c873352daf90e0a4f4fc0e7d0fb555875",
      "d8ed25a4abb3c2f926f66598608200ee36796f33",
      "bd268492162a3bef915a0e0329b43efc30e3e29a",
      "f5252075bb34666863cd01cc82c2d941d4ffe6c6",
      "062b41f354e9304b66239edc0a0a13f18863e678",
      "43c1d94db1018b6c8381d1f0d233494fa96ca691",
      "8112e6c7a5284e012485dc534dedc4047e434f3a",
      "c5f5f179d80a3bf9b4f29750283a87eaca42e91b",
      "de02ec03f6a71246e505862a7195894601fbab99",
      "b1e8be30ec1ca48b48edb34fc8c8214269639a8d",
      "594dc362b4332ae661e3d71da17d097bb4a357dd",
      "a3c6926a1d90385b746a16cbb9f0ad6fe714dc1c",
      "8fb202cdcfec3b0e7ba0e3f88949d6d923b48b2d",
      "19605cad33f79d3070b7c4b24aa49653ab7c90da",
      "9ae75ab09a9c0db08c5ec6a02ae940128f41e016",
      "b56e5fb4f367a8d54614f1047bd4f9a2d58b9973",
      "690edf44e8739fd80bdfb76f40c9a4a222f3bba8",
      "03ed44b85886a7a95d1533fb1d1a142e60ae292c",
      "371c799bde8b162e7f8fa2b2a0a8cfb29765f89f",
      "630f12b88178f4a54611f29d71c6cc3e674ca0da",
      "e1489993a93b0f55debbe7858dd1bb24d7f39e03",
      "398d6f4432e6aa7acf21c0bbaaebac48998faad3",
      "7e71eedb078181873a56f2adcfef9dddaeb95602",
      "56107ce1a3f5d6c0fdd32fa7ab95329ec207ba9c",
      "901a6ad54f3bfc0ca6671f4e492703c671475288",
      "4e810d6b04de4e657a4cda2f58296b01e91eae53",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "bf830a601432a6cbfd53b473a5ce80cebc9a5a42",
      "0c7e1338a9c7914a3b9a5bdc42b457b3f272160e",
      "ac225094aab9e7b629bc5b3343e026dea0200c70",
      "a6a735f8e218f772e5b9dac411fa4abea87fdb9c",
      "510d98681e5e85fb1265513728f16e2543ae1b4b",
      "92a5e999d833508034fc5154f15adebf316d8b7d",
      "f778186c42aac4822385ce43ebaeb79ac2ea5c1f",
      "1f8e9355f35da4854080b3376be5374e7fc07721",
      "97faeefa771e8cc8e55159e2bd03e6f5eef249a8",
      "fd3f489fc0438e500c0473af40dfebe4705df6d2",
      "f4e5af510c63ecb84c4619b9fc12a2d26a3c8d40",
      "97cefa2f54d30bf40b2bf71a9297949ed5a327ee",
      "f11198dc277af1c5547ab3ae8d562fc8c16a7c70",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "43879cf527f4918955fd55128baa6745174d8555",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "4545f59bf5914695d2742562838ab4b063dc279d",
      "b4bd65c7bd51f4a1b70a74d952fe1bf98e465cc9",
      "7b1858b7dde70f15c4daad7162ff051ffb3a43c1",
      "76da7eab258081c257ebd87f7a559d44e31d8315",
      "6ad092c3dc7c08631a2220ba08b09c680750d504",
      "127af6effc74f073ac2442f6d82c944f562e2c0f",
      "68eb795891d5c814d2795a82ade1bb8bb211a821",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "378f0a62471ef232c7730d8a67717afa5104ab21",
      "b120a10310645df329c691b782dea9ceb7dfe786",
      "c751ab01aedc2888a7fe6e8b4f77ab1afa94072f",
      "97de32d8ca162944e5f7e83071c596d13d168109",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "cd7f63705b45ef2f66e9b41462a36901450c9d51",
      "ebd19d05d7ed8ad22a62957bc648c0afbb8e8f91",
      "e1b93001202afd674cc3542cdb5599bff0d10157",
      "0b6f172def2f4b37ea85969b4d99e789c647726b",
      "2b76b6e766547b3c6dbc2785a084ec3b72cb760d",
      "a625dee1fb23d1c842a961bc354c0aef3a20c132",
      "1dd7038128e3a1ba49f0224ac711166c8dc36d3d",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "fdc708aaa0d18c791f878ff2214201410fa52439",
      "c7933d0486196da5ab9ced55c48b50f92b998575",
      "1e819f533ef2bf5ca50a6b2008d96eaea2a2706e",
      "ad42c33c299ef1c53dfd4697e3f7f98ed0ca31dd",
      "ace1059fd85bbb8b41874a47a029bba7899124a5",
      "eb5793e1c5f9b2a0d45c47be2ba2c6a43d136a91",
      "ae42c0cff384495683192b06bd985cdd7a54632a",
      "fea7e2bcbe852bcb33ce70a4d57664e954f0e82a",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "5e383584ccbc8b920eaf3cfce3869da646ff5550",
      "7e5a550cdcb59464a73bfdc54f541fc5e5636ea3",
      "908e33baf3eacc2e50c7dede52af96cf9cf5ac59",
      "7656cddac460af91919558175063938acfdd813b",
      "36f652172792f8aab1cf3c4441a72a1bf79d17c8",
      "276ebc620a8976026bd2d03582b9ecfa3738d43c",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "02e2059c328bd9fad4e676266435199663bed804",
      "7f0e32170ebd1c338442049c0ef8606ab482af5e",
      "1b8dc814a7384285a52bc005bc54a3b5c87b219d",
      "233bc1bbdf5c4c08da204f545b1eaf15876ea786",
      "ac3ee98020251797c2b401e1389461df88e52e62",
      "3eaf79589dbb9bce5a502e867a8f03917e52de26",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "72f25a0b881a7337c7fb6d8009a5ac5450052077",
      "b977ddb18c1179ffcd5cf14a5128392f35296a45",
      "0c0ff60e9d39c203929457d1ac3f840f8c8e9619",
      "a2eaee00beb379714e0bc81e72f25d8685f3611c",
      "51630e313b0de5ea257587f79392bfe23e52633a",
      "3e454b7111e68ccfeb103a0b4220d35e16bff867",
      "8090ca9679d5c2ab40a090385e545944713031b0",
      "c73287153c0a50102a40800c1ada626a410c63cc",
      "50d85cb114f7c5e779a6772f2931e77dddd54a5e",
      "8e8152d46c8ff1070805096c214df7f389c57b80",
      "d4bbcc842f22547eaf5884251eaa68251895dccb",
      "ad3e4b41e0d35a7cf548a4a31ced7b5ff5253f4a",
      "c6d4da0770c9e930526c103ffea5d2a2294dc44d",
      "cf6f83fcce274606bf0264c59d1c78a30c9c9d18",
      "e19971e7d100386b9b4cf4ea1a0782b62fe036e5",
      "17296302ffb402ba3ec4b49a883224c7ceaa1ae7",
      "78a00de20967358b5d4dc53a0d6ab1cf59418a68",
      "a51b7816d47a3985328531fdac8ca8a902fc6fb5",
      "f82c52452c7de8cd6472202c1be2cce9fbcb8dda",
      "2e9d221c206e9503ceb452302d68d10e293f2a10",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      "b53a2927368d0f4420e8c36a48092a28bc8e9989",
      "2da8e3fc3b4937d4c78f054fa919970b4f31a768",
      "480ca76957e066eb6b24cd28df998d30310b4ced",
      "81627e281c9fc46b88e074ef2a09f8b63431accf",
      "31af4b8793e93fd35e89569ccd663ae8777f0072",
      "fdb98ca19262fa192db2494f4f64369351cb7d7c",
      "6fb07b90b7fd2785ffec0da1069e75c53f7313c2",
      "333b5c0f2b750f737b725496e2b75a6330f5cc54",
      "38e024c97f0e55097919066b7233a5caa622a62f"
    ]
  },
  {
    "paperId": "572a1f77306e160c3893299c18f3ed862fb5f6d9",
    "title": "Few-Shot Learning with Graph Neural Networks",
    "abstract": "We propose to study the problem of few-shot learning with the prism of inference on a partially observed graphical model, constructed from a collection of input images whose label can be either observed or not. By assimilating generic message-passing inference algorithms with their neural-network counterparts, we define a graph neural network architecture that generalizes several of the recently proposed few-shot learning models. Besides providing improved numerical performance, our framework is easily extended to variants of few-shot learning, such as semi-supervised or active learning, demonstrating the ability of graph-based models to operate well on 'relational' tasks.",
    "citationCount": 1244,
    "references": [
      "e085fa3fc3ee6c4dfa5a90a2b332a981c8cbc318",
      "00357a417ce470a78f7a84d18ae2604330455d2a",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "542d029ea8b6599dd4249deb7a73e7d1942f64b0",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "c7efa5f7008132b7d81f550aeaae8fb589506a9c",
      "c269858a7bb34e8350f2442ccf37797856ae9bca",
      "29092f0deaac3898e43b3f094bf15d82b6a99afd",
      "c889d6f98e6d79b89c3a6adf8a921f88fa6ba518",
      "470d11b8ca4586c930adbbfc3f60bff08f2a0161",
      "ae42c0cff384495683192b06bd985cdd7a54632a",
      "0e779fd59353a7f1f5b559b9d65fa4bfe367890c",
      "a1786540a4e15f0757e1b84a02f98ed436a969e0",
      "29c887794eed2ca9462638ff853e6fe1ab91d5d8",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "3904315e2eca50d0086e4b7273f7fd707c652230",
      "be1bb4e4aa1fcf70281b4bd24d8cd31c04864bb6",
      "405c31c85a324942811f3c9dc53ce3528f9284df",
      "50295c19e177480ba3599300de1ab837cc62b08c",
      "561c3fa53d36405186da9cab02bd68635c3738aa",
      "815c84ab906e43f3e6322f2ca3fd5e1360c64285",
      "d01379ebb53c66a4ccf5f4959d904dcf9e161e41",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "e49ff72d420c8d72e62a9353e3abc053445e59bd",
      "adf3b591281688b7e71b254ab931b2aa39b4b59f",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "abd1c342495432171beb7ca8fd9551ef13cbd0ff",
      "812355cec91fa30bb50e9e992a3549af39e4f6eb",
      "e12c07178f0dc2fcccee21c96ed26f142dc1e08f",
      "f216444d4f2959b4520c61d20003fa30a199670a",
      "be0dd2e91bb104494feeb5da2761cf930564f650",
      "3efd851140aa28e95221b55fcc5659eea97b172d"
    ]
  },
  {
    "paperId": "639206a9a32d91386924f1c94e9760dfb43df72e",
    "title": "Towards Deeper Graph Neural Networks",
    "abstract": "Graph neural networks have shown significant success in the field of graph representation learning. Graph convolutions perform neighborhood aggregation and represent one of the most important graph operations. Nevertheless, one layer of these neighborhood aggregation methods only consider immediate neighbors, and the performance decreases when going deeper to enable larger receptive fields. Several recent studies attribute this performance deterioration to the over-smoothing issue, which states that repeated propagation makes node representations of different classes indistinguishable. In this work, we study this observation systematically and develop new insights towards deeper graph neural networks. First, we provide a systematical analysis on this issue and argue that the key factor compromising the performance significantly is the entanglement of representation transformation and propagation in current graph convolution operations. After decoupling these two operations, deeper graph neural networks can be used to learn graph node representations from larger receptive fields. We further provide a theoretical analysis of the above observation when building very deep models, which can serve as a rigorous and gentle description of the over-smoothing issue. Based on our theoretical and empirical analysis, we propose Deep Adaptive Graph Neural Network (DAGNN) to adaptively incorporate information from large receptive fields. A set of experiments on citation, co-authorship, and co-purchase datasets have confirmed our analysis and insights and demonstrated the superiority of our proposed methods.",
    "citationCount": 612,
    "references": [
      "0dc14473859b1cb56c82d9e388a575c3e7813603",
      "6c252187647a437b32b163a295d62b65cda6e0fe",
      "ddc50b4d191b428a9c6942e9633a9aa41c6d453b",
      "04f3203f1214063436d81ce0c2ad7623204da488",
      "94194703e83b5447f519fd8bcbb903916e05aaf9",
      "f1964cc1b343f907462cd7fbfaf88c2679d61f59",
      "8ccbd4898fd7cecac6823e7caa15c74fca670fbe",
      "ee8b1603c79a4f9c3bdc0d6633b595aa93ff3a0f",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "ef32feb9acc8e2c4d53c1b9cdd658aa0bca15bd2",
      "7e71eedb078181873a56f2adcfef9dddaeb95602",
      "c2d40522eaa5523d67a0de5e4098e7031fdccb3d",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "ac225094aab9e7b629bc5b3343e026dea0200c70",
      "d5aefe86b1ba8c773a6bd0e84812ace161b8c0db",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "e4715a13f6364b1c81e64f247651c3d9e80b6808",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "b36a5bb1707bb9c70025294b3a310138aae8327a",
      "16a0ff94b980d0ad9cd5ae3b9a3769c6f358842a",
      "b8024b521d97ae446ffb1978081f39dba3139332",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "f09f7888aa5aeaf88a2a44aea768d9a8747e97d2",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "fab4d19ed77dad7c437d885eceb8aa65fae5a783",
      "a538b05ebb01a40323997629e171c91aa28b8e2f",
      "29258e7c8a2d43c77933900f4b66e8bdc002943e",
      "43d2ed5c3c55c1100450cd74dc1031afa24d37b2",
      "eb82d3035849cd23578096462ba419b53198a556",
      "aeda98d3d9fd5d3c451c15c0d349b50583a9a3ee",
      "f22f6972e66bdd2e769fa64b0df0a13063c0c101",
      "24c5941e64909877b8c6ea05f41aebb6698f290f",
      null,
      "258a5968e2df9f2009306319b54dd838321a7717",
      "1c46943103bd7b7a2c7be86859995a4144d1938b",
      "99ae64fdd0e1cf6ede9b4f4a18a4323fd05f29d1"
    ]
  },
  {
    "paperId": "123139463809b5acf98b95d4c8e958be334a32b5",
    "title": "On Explainability of Graph Neural Networks via Subgraph Explorations",
    "abstract": "We consider the problem of explaining the predictions of graph neural networks (GNNs), which otherwise are considered as black boxes. Existing methods invariably focus on explaining the importance of graph nodes or edges but ignore the substructures of graphs, which are more intuitive and human-intelligible. In this work, we propose a novel method, known as SubgraphX, to explain GNNs by identifying important subgraphs. Given a trained GNN model and an input graph, our SubgraphX explains its predictions by efficiently exploring different subgraphs with Monte Carlo tree search. To make the tree search more effective, we propose to use Shapley values as a measure of subgraph importance, which can also capture the interactions among different subgraphs. To expedite computations, we propose efficient approximation schemes to compute Shapley values for graph data. Our work represents the first attempt to explain GNNs via identifying subgraphs explicitly and directly. Experimental results show that our SubgraphX achieves significantly improved explanations, while keeping computations at a reasonable level.",
    "citationCount": 396,
    "references": [
      "323ca85c5c1ebd0ec9bf74897d8c8e8fbf203ae6",
      "7b3598d1d4d27241747182b13bcec3f6ec27876f",
      "6ae2967bb0a5e57cc545176120a4845576e068a3",
      "c66014aaaf0d38f8186edd3566fdd594b046030c",
      "d9f5ec342df97e060b527a8bc18ae4e97401f246",
      "a8ae2d8232db04d88cf622e5fabd11da3163aa8f",
      "e3201c450fd98e2d81e867ef274ec794ed5e5b6d",
      "c30c0092bf4eb8a44faec3fc60cdd5006276bcdc",
      "e4534c3164522d6314bcd163273cd33b3e2e601d",
      "75c8466a0c1c3b9fe595efc83671984ef95bd679",
      "6c252187647a437b32b163a295d62b65cda6e0fe",
      "43f2ad297941db230c089ba353efc3f281ab678c",
      "c02d7e04de29286f9ad161482408174353a22c32",
      "8819adc0f064d5293bd2b783a63e23f68109738a",
      "a36dad07b501ac36ba1066c84af7e500442bfa85",
      "6b3586e43a2b6ac42cfbb23c74863bfbf504732a",
      "cb2d9b2f171da67f7b47ac3e0eb935a0de223354",
      "c02602b2df00d450fc4dbb99124e2304d8738b45",
      "f1964cc1b343f907462cd7fbfaf88c2679d61f59",
      "8fb202cdcfec3b0e7ba0e3f88949d6d923b48b2d",
      "00b7efbf14a54cced4b9f19e663b70ffbd01324b",
      "00358a3f17821476d93461192b9229fe7d92bb3f",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "85634f8a458f13d7cb80e946eec23880295ba1a3",
      "d5aefe86b1ba8c773a6bd0e84812ace161b8c0db",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "93b4cc549a1bc4bc112189da36c318193d05d806",
      "b9b21cfa7de32677151571ab44d27d2d246b7a03",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "c27db32efa8137cbf654902f8f728f338e55cd1c",
      "f538dca4def5167a32fbc12107b69a05f0c9d832",
      "11222e4f5262c774bf9c006420eb647b951624b2",
      "442e10a3c6640ded9408622005e3c2a8906ce4c2",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "29e944711a354c396fad71936f536e83025b6ce0",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "31f9eb39d840821979e5df9f34a6e92dd9c879f2",
      "33af9298e5399269a12d4b9901492fe406af62b4",
      "8fd17bf36bc22477bb2237c2be6e3212b753969d",
      "dc6ac3437f0a6e64e4404b1b9d188394f8a3bf71",
      "1a2a770d23b4a171fa81de62a78a3deb0588f238",
      "3ca5ef46265d58fbb65ad4bf514cf5eb72b149a1",
      "894b7897dc2143c5e8db666766cf59637a7c7b82",
      "382691140046e089646b2bcaea1cecec1cf89c8a",
      "ef77a8b0db638c675d032bd05dc3a012a2899da4",
      "65e271c37b3adf085f1bf7f36321794ef4501239",
      null,
      "df2b0e26d0599ce3e70df8a9da02e51594e0e992",
      "5c4dbf5b17e2729c570174f9099f35c247d1a889",
      "95c4ebb6df40abc74c9cf36994c0f914be3b04bd",
      "3d538490d2882ef8f492529762b0e3a7ea31774c",
      "551cc8f8570c91746baa07c627b548d6c3f34000"
    ]
  },
  {
    "paperId": "cda969fd7362bdf21aa1f3398078982dcb350d76",
    "title": "Are we really making much progress?: Revisiting, benchmarking and refining heterogeneous graph neural networks",
    "abstract": "Heterogeneous graph neural networks (HGNNs) have been blossoming in recent years, but the unique data processing and evaluation setups used by each work obstruct a full understanding of their advancements. In this work, we present a systematical reproduction of 12 recent HGNNs by using their official codes, datasets, settings, and hyperparameters, revealing surprising findings about the progress of HGNNs. We find that the simple homogeneous GNNs, e.g., GCN and GAT, are largely underestimated due to improper settings. GAT with proper inputs can generally match or outperform all existing HGNNs across various scenarios. To facilitate robust and reproducible HGNN research, we construct the Heterogeneous Graph Benchmark (HGB) , consisting of 11 diverse datasets with three tasks. HGB standardizes the process of heterogeneous graph data splits, feature processing, and performance evaluation. Finally, we introduce a simple but very strong baseline Simple-HGN-which significantly outperforms all previous models on HGB-to accelerate the advancement of HGNNs in the future.",
    "citationCount": 330,
    "references": [
      "6914a7997ff4be207fa7b3472a9c5879abaec646",
      "524faad1bacfc79e613d185c0939194302455413",
      "d88540fd4730330f1a823b90643d793f6ce00b41",
      "04faf433934486c41d082e8d75ccfe5dc2f69fef",
      "965652c0e426c5b42d7218d7429025be7ac542bf",
      "7168f3bbd3b330af95dd698a86fe6ddcda5d6bbd",
      "77a589410617a81553e6a381bb746c34ce89d45e",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "80ba6bcc8068556359c7193c22d941e3b0b29e6e",
      "0ca7d8c3250d43d14fdde46bf6fc299654d861ef",
      "c7fd29fdd2e0b50a571db4f607eab138e9ecb644",
      "6f394c354f298111177dba14ee175e0012abd631",
      "aa63ac11aa9dcaa9edd4c88db18bec87e0834328",
      "cc44c3f8f46de0aee1f95a706c29680254aaa462",
      "cebc111b8c2668094058d92871a24f27a12f68de",
      "e3d662bbd0e5539fe22a85f3518f960595b9914e",
      "025ea689e6ab3b544101df17233e87536a1e578a",
      "de02ec03f6a71246e505862a7195894601fbab99",
      "594dc362b4332ae661e3d71da17d097bb4a357dd",
      "3c64b7a74c749d43b1a4b96dd1a00620ba613ee0",
      "4efb9a950f252138a30eeb942ed02663a3ea29d1",
      "00b7efbf14a54cced4b9f19e663b70ffbd01324b",
      "371c799bde8b162e7f8fa2b2a0a8cfb29765f89f",
      "398d6f4432e6aa7acf21c0bbaaebac48998faad3",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "b8da4337c92acda632e8138be1b525a3aef54b85",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "610cff0a09c76c43739be1a6e5b0ed7a1a24ee60",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "57a807f65e61bbba0ea3ba02572cc5843ecef2b6",
      "cd8a9914d50b0ac63315872530274d158d6aff09",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "2c03df8b48bf3fa39054345bafabfeff15bfd11d",
      "f63e917638553414526a0cc8550de4ad2d83fe7a",
      "86412306b777ee35aba71d4795b02915cb8a04c3",
      "24fafbc64fddff8bad9699343871f5ae5100011e",
      "e7af1047d643ca833a7561dea750ead7a336ff27",
      "db16e908246f32b60a6e0a8e27093aa145fbb1ed",
      "1976c9eeccc7115d18a04f1e7fb5145db6b96002",
      "b9124861e4e874bbc477b4b726adf94f7d2ecdc4",
      null,
      "a680c7e5173a77a5c1e2cad530f75e211351f11a",
      "dc56791df8402e40ec7d785bd283a79c965d735a"
    ]
  },
  {
    "paperId": "68a024d7b70ef3989a6751678f635cbe754440fc",
    "title": "Skeleton-Based Action Recognition With Directed Graph Neural Networks",
    "abstract": "The skeleton data have been widely used for the action recognition tasks since they can robustly accommodate dynamic circumstances and complex backgrounds. In existing methods, both the joint and bone information in skeleton data have been proved to be of great help for action recognition tasks. However, how to incorporate these two types of data to best take advantage of the relationship between joints and bones remains a problem to be solved. In this work, we represent the skeleton data as a directed acyclic graph based on the kinematic dependency between the joints and bones in the natural human body. A novel directed graph neural network is designed specially to extract the information of joints, bones and their relations and make prediction based on the extracted features. In addition, to better fit the action recognition task, the topological structure of the graph is made adaptive based on the training process, which brings notable improvement. Moreover, the motion information of the skeleton sequence is exploited and combined with the spatial information to further enhance the performance in a two-stream framework. Our final model is tested on two large-scale datasets, NTU-RGBD and Skeleton-Kinetics, and exceeds state-of-the-art performance on both of them.",
    "citationCount": 699,
    "references": []
  },
  {
    "paperId": "5542d0ff99767f75f8c8a329fc3d88d73ff470c3",
    "title": "GemNet: Universal Directional Graph Neural Networks for Molecules",
    "abstract": "Effectively predicting molecular interactions has the potential to accelerate molecular dynamics by multiple orders of magnitude and thus revolutionize chemical simulations. Graph neural networks (GNNs) have recently shown great successes for this task, overtaking classical methods based on fixed molecular kernels. However, they still appear very limited from a theoretical perspective, since regular GNNs cannot distinguish certain types of graphs. In this work we close this gap between theory and practice. We show that GNNs with spherical representations are indeed universal approximators for predictions that are invariant to translation, and equivariant to permutation and rotation. We then discretize such GNNs via directed edge embeddings and two-hop message passing, and incorporate multiple structural improvements to arrive at the geometric message passing neural network (GemNet). We demonstrate the benefits of the proposed changes in multiple ablation studies. GemNet outperforms previous models on the COLL, MD17, and OC20 datasets by 34%, 41%, and 20%, respectively, and performs especially well on the most challenging molecules. Our implementation is available online.",
    "citationCount": 465,
    "references": [
      "b46ae28131cfb87df801a978944ee8ee638166fa",
      "0d943f17e09cdb681f84c6bf3e7ea8b491bfdccc",
      "d40a41faea989c5cdeeda0326b203877a8f59146",
      "b77b20880d73fd54204b1987a889187113121dc0",
      "3dc12dadcf6a2015fb3c732e35dfa56ba604ed88",
      "c16835c8e535ebd9c10a550ca9455fe384a14449",
      "00f39c314542902cd1b03842069e5d3ed441a5c3",
      "feeae38fd404fdc17cad19d80461843059216fde",
      "6195b623a13e861741ac1e80a7a8b774d5332236",
      "966ea7df97a5c38d04710dd4bb393b8acaef4d9a",
      "30827cfdabbb8e1f02c6fd7c188d5a7e6b05c6da",
      "718006f0338adf915d27f4edbaf5c6df8326f7cf",
      "bc81b43b30a92256ec8b6aed82533955f748e2cf",
      "b88741c01dd8769c4c4be09fcaab7e2c0e63a716",
      "1784a18105dafb85e2c53c86a9736fc7b8b71316",
      "d910c945cdea4e428174b7776a7682ce1c6f8c25",
      "6075091294a0fe0fe5c6c7b7a0df9029b6a965cb",
      "5c6520df0bcc34c5fa83c66ff10770c25ab641b1",
      "6bc4004347cdf76d84597210796f38fcf7a01a80",
      "563ca4cda06665f4b90f8fce9bcb28c02e6872b9",
      "f7b550cba2d61b3fb676e72c92c245134363fda1",
      "f92b1f08d1da3aa0e0b6060780124d68a3506abf",
      "597712c88550cfa0ebfdba8ee3f0134404d95c56",
      "3a5af4545ee3ac3f413841c10c7605a1cefeb9e5",
      "907a993066b9c922aa3a1d71edd77223dc06c762",
      "b3af16485c5028ebae8819e387a6cbdff352d9c7",
      "057b594c9e6ed45fc445a4dc45384117bdd15a3e",
      "520005eba3f1b8e852ed9508ead726e15629c78a",
      "b7a6b7adafd01e939c9266083dfba9edea88846c",
      "5ee147684b06ffc4db0f6326e0cba017d12ceff3",
      "4480588b166afe9286af16f65c6cc1b84f4bafbf",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "9fa42ea422fe1729e04a98fa8072a7b48ce91bc8",
      "7a90d95ffc3d2d397fee3133165c0af9501f55c0",
      "397b0c1dcead6217dc0e1d2d1a13b37c7d712dc2",
      "94be567c32ae76bdaadabd4975807a94181e39b3",
      "7484cce4b20c43debd6fc5f993b539001c47a97e",
      "374313c2fc407655ae05eed61005a29cfaa7460b",
      "6f3370fcf266fc10842b6d3e77c6cadd842a3580",
      "c983653841b6987d9959318f074a595783838576",
      "ce2845cadc5233ff0a647aa22ae3bbe646258890",
      "afd76be183d34af3bf944debd73db1c77987a8c6",
      "452394b52baffcc1f71c416d2a57653ac8f7d1a1",
      "3afe627b83d4b7b4154f722d361dca9bfcc4adeb",
      "d07284a6811f1b2745d91bdb06b040b57f226882",
      "5bf31dc4bd54b623008c13f8bc8954dc7c9a2d80",
      "424a6e62084d919bfc2e39a507c263e5991ebdad",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "b587ee7c802a5bd222a69090f59285e0dfdb29f1",
      "33d9d4593d44792e17a045e5f3407f0fe7a40dd1",
      "fafcaf5ca3fab8dc4fad15c2391c0fdb4a7dc005",
      "b587740a3051a4503b3edbb568d2333ab786e056",
      "01300a1a06c4bf514b16ac7d761b4ee04369234d",
      "0ff76d9759c10d95a3edc6db2184eb8dee7f3d01",
      "43cbc4db7a9f0d92dce9a9c9f5b19490efee3ad8",
      "f245d7ff4bbb617528ef3b416ef33b2635fbfcc6",
      "cc9d149de3077ff8bd2712ffd07dc64a561561a7",
      "a647578e190c85f04e4b4751ff7434458f23add9",
      "b571afb72d61dcf20ac99a687fd48fab77482682",
      "f5b85a8b997d8a551409416c957f53be209dd9b9",
      null,
      null,
      null,
      null,
      null
    ]
  },
  {
    "paperId": "53e80869c6582d7f95ef0a351170736afd1742d0",
    "title": "Rethinking Graph Neural Networks for Anomaly Detection",
    "abstract": "Graph Neural Networks (GNNs) are widely applied for graph anomaly detection. As one of the key components for GNN design is to select a tailored spectral filter, we take the first step towards analyzing anomalies via the lens of the graph spectrum. Our crucial observation is the existence of anomalies will lead to the `right-shift' phenomenon, that is, the spectral energy distribution concentrates less on low frequencies and more on high frequencies. This fact motivates us to propose the Beta Wavelet Graph Neural Network (BWGNN). Indeed, BWGNN has spectral and spatial localized band-pass filters to better handle the `right-shift' phenomenon in anomalies. We demonstrate the effectiveness of BWGNN on four large-scale anomaly detection datasets. Our code and data are released at https://github.com/squareRoot3/Rethinking-Anomaly-Detection",
    "citationCount": 226,
    "references": [
      "d03f0a4e888171b69ea3abe5a0f822a17ffb588e",
      "6000cda023f9e096f3692df94c3f17a98e0c030b",
      "27313cb7a36d419b49b6c81b39d815c9b660bfef",
      "f768a0ba44953585e7a1524d300b6b39032957cf",
      "bbed89eee0a43baf17dd5eab8354deecadda8acf",
      "35067cc8153b7e6270797fffaefc5c9cefdfe515",
      "87fea354c68b77b4429dc8862a79e95fac3b3ae4",
      "7487499f91f0c198347a8ebc747ad8d220bdd155",
      "fbc136c8c81cd89206dc0fcb54e16bd98df83b62",
      "eef8388fa46fe95e224448ca072b2cc43639e017",
      "efda1115c0d920c6afce76b181cab0ac2130d11a",
      "14156438bafed28a626738630b5181b83ed5d79c",
      "888dbb50bd63a94e349081b27b78c671607452f4",
      "5755e608f9d45520d994e94bae47cea1dd72f41a",
      "8cf8e7fe56f26e9e811cf409e1ceeb7c9d7fb60b",
      "7717e17df9e6f83fb17f3dbcd6189a4cbeb359b7",
      "3c8a456509e6c0805354bd40a35e3f2dbf8069b1",
      "0353c467cb380025d8ef927996436b8e9cfedccc",
      "381411d740562de1e766dc8cc833844eb99dde01",
      "44842bba66366522de782f537d9bc61d8868bf08",
      "bcfdbb6b8911272139170ef4b24e31d9145093e7",
      "9f91568d8ec72c417d9146a551b61e69ccf1f848",
      "37c949ec31a7e8eef6a8bb68e2daf5f2e8cd902d",
      "7e71eedb078181873a56f2adcfef9dddaeb95602",
      "c7191511e9a3db92b25b2792b38709cff1b0fc84",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "080b8de51221395038feb656f33783b65fa48434",
      "7ed053062375927eb82e4925168f98fea6bc69a0",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "4657c06d57cea792eab4f14e3a12f50d88109680",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "b5007972c6f5a2294f83357c73e12664dd7c85b3",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "7a71e73373c4553237e4a29303ac5b60daefd662",
      "99d67902a1c92f0feeda0e70c97a3f6136894a49",
      "4814cfa3dcaf72f74aab2c8352957d8eee281caf",
      "8736e9f885d85f1ee45f1e73cf0fbe898c7fa2b5",
      "4d7bb722ff0a1bd5894cd8a620d5fe0673cbf721",
      "3e64a18ea24b291dbae4b7129b0ed0200b030d26",
      "273dfbcb68080251f5e9ff38b4413d7bd84b10a1",
      "ad4fd2c149f220a62441576af92a8a669fe81246",
      "c1425edce6121b8cff852cb85b670ff5eb8ea150",
      "9f1877ce4e986bf1d5eea3f9c0f7de7f8295e6f5",
      "8e8152d46c8ff1070805096c214df7f389c57b80",
      "295ad29df1ff30052dbb22f9912b0370811b40c5",
      "a883cacbc8f9b021b2a63f0453307855fa075d33",
      "aacc35c5f804db3847d3962726bbe735ed9d7777",
      "863efef58318bdc21986470200f6d4f2d206e039",
      "f30b10bb58e49138cbf33e625746c87b662a9e7d",
      "f1e6b11ef644581754765342b4fc4fdebb686ea7",
      "064c71e4bf43e49e3a7cefc29b570c60cbfcfc4f",
      "0353e7f78ad385e9e898d9a9de18a2aa7ed9d9ed",
      "5afde5fd85ec871d1de8ddd756bd2a8a03dd7479",
      null,
      null,
      null
    ]
  },
  {
    "paperId": "381411d740562de1e766dc8cc833844eb99dde01",
    "title": "Deep Graph Library: A Graph-Centric, Highly-Performant Package for Graph Neural Networks.",
    "abstract": null,
    "citationCount": 1128,
    "references": []
  },
  {
    "paperId": "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
    "title": "Graph Convolutional Neural Networks for Web-Scale Recommender Systems",
    "abstract": "Recent advancements in deep neural networks for graph-structured data have led to state-of-the-art performance on recommender system benchmarks. However, making these methods practical and scalable to web-scale recommendation tasks with billions of items and hundreds of millions of users remains an unsolved challenge. Here we describe a large-scale deep recommendation engine that we developed and deployed at Pinterest. We develop a data-efficient Graph Convolutional Network (GCN) algorithm, which combines efficient random walks and graph convolutions to generate embeddings of nodes (i.e., items) that incorporate both graph structure as well as node feature information. Compared to prior GCN approaches, we develop a novel method based on highly efficient random walks to structure the convolutions and design a novel training strategy that relies on harder-and-harder training examples to improve robustness and convergence of the model. We also develop an efficient MapReduce model inference algorithm to generate embeddings using a trained model. Overall, we can train on and embed graphs that are four orders of magnitude larger than typical GCN implementations. We show how GCN embeddings can be used to make high-quality recommendations in various settings at Pinterest, which has a massive underlying graph with 3 billion nodes representing pins and boards, and 17 billion edges. According to offline metrics, user studies, as well as A/B tests, our approach generates higher-quality recommendations than comparable deep learning based systems. To our knowledge, this is by far the largest application of deep graph embeddings to date and paves the way for a new generation of web-scale recommender systems based on graph convolutional architectures.",
    "citationCount": 3579,
    "references": [
      "e1cef464322243feb12ac3f81873c912e071a1a6",
      "046c4276b72e21731150c0655519ec717d8f5bad",
      "2503dff90685857ce7295e37d0045e2eef41c8b8",
      "b120a10310645df329c691b782dea9ceb7dfe786",
      "ecf6c42d84351f34e1625a6a2e4cc6526da45c74",
      "0d57ba12a6d958e178d83be4c84513f7e42b24e5",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "fdc708aaa0d18c791f878ff2214201410fa52439",
      "ace1059fd85bbb8b41874a47a029bba7899124a5",
      "0e779fd59353a7f1f5b559b9d65fa4bfe367890c",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "8bfb2a89a2313619c3edac2e5205d0bca19bcf08",
      "5e383584ccbc8b920eaf3cfce3869da646ff5550",
      "36ee2c8bd605afd48035d15fdc6b8c8842363376",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "322cf9bcde458a45eaeca989a1eec92f7c6db984",
      "9c9d7247f8c51ec5a02b0d911d1d7b9e8160495d",
      "561c3fa53d36405186da9cab02bd68635c3738aa",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "eb42cf88027de515750f230b23b1a057dc782108",
      "fff114cbba4f3ba900f33da574283e3de7f26c83",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "eeff60867041d2ea92d1b38a20c2031d240d8872",
      "87f40e6f3022adbc1f1905e3e506abad05a9964f",
      "8de174ab5419b9d3127695405efd079808e956e8",
      "e17529924798975856310a75cb3df3066ac7ccfa",
      "e12c07178f0dc2fcccee21c96ed26f142dc1e08f",
      "89d27fc4c5bf15762d001a39f0a74f84c89d3681",
      null,
      null,
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      null
    ]
  },
  {
    "paperId": "e147cc46b7f441a68706ca53549d45e9a9843fb6",
    "title": "GraphPrompt: Unifying Pre-Training and Downstream Tasks for Graph Neural Networks",
    "abstract": "Graphs can model complex relationships between objects, enabling a myriad of Web applications such as online page/article classification and social recommendation. While graph neural networks (GNNs) have emerged as a powerful tool for graph representation learning, in an end-to-end supervised setting, their performance heavily relies on a large amount of task-specific supervision. To reduce labeling requirement, the \u201cpre-train, fine-tune\u201d and \u201cpre-train, prompt\u201d paradigms have become increasingly common. In particular, prompting is a popular alternative to fine-tuning in natural language processing, which is designed to narrow the gap between pre-training and downstream objectives in a task-specific manner. However, existing study of prompting on graphs is still limited, lacking a universal treatment to appeal to different downstream tasks. In this paper, we propose GraphPrompt, a novel pre-training and prompting framework on graphs. GraphPrompt not only unifies pre-training and downstream tasks into a common task template, but also employs a learnable prompt to assist a downstream task in locating the most relevant knowledge from the pre-trained model in a task-specific manner. Finally, we conduct extensive experiments on five public datasets to evaluate and analyze GraphPrompt.",
    "citationCount": 148,
    "references": [
      "674e14227bd9aacb41a02fb195951ddddd30cd66",
      "e60ad3d4ed3273af6a94745689783b83f59c8b4a",
      "8e2bfba2487d4b57f6511776a7772e65ee6115ab",
      "cc73da69eb495a122ed24bc680bf9e2f1a420e0c",
      "2d7a6a52264e8f875105cfb34c6c901bfd1f3229",
      "ac44bbb4c62033d558aad57712438e5571069d9c",
      "48f8657c793cd8977629170a95b83692a5e3f0c8",
      "28692beece311a90f5fa1ca2ec9d0c2ce293d069",
      "722ad6ac92286507437b31486f47987d6ece05c9",
      "0e595fe9e18e422d0569a3faad7a32ba3c576e5a",
      "aa9ae8096216163ed40dd787917215b5ae4d3d90",
      "94497472eecb7530a2b75c564548c540ebd61e9b",
      "96631435fd2c2326244f5b766dde9e617f7d9da6",
      "5a3054d4b1e82b764db3d30871d50420ca300a1d",
      "ffdbd7f0b03b85747b001b4734d5ee31b5229aa4",
      "bc37c6bdb8f39929a58b30464f72d6aa46cddc17",
      "76c124786ccf4263e6403a15a8e350ac28be4e65",
      "8f14c531574e2e3a04f25cc77ad43daf2c330b90",
      "639cf093ac3cc5c4b35747c02986036463296fbe",
      "4ccdd1fe6cc9c896e910582bea2c33c19317c5ca",
      "04faf433934486c41d082e8d75ccfe5dc2f69fef",
      "91fb815361fdbf80ff15ce4d783a41846bd99232",
      "a9872078cc6dabd2428750543862b45f4a482dfc",
      "1f3c381eedfe8914b81e93070bfdb00cf86ac943",
      "90abbc2cf38462b954ae1b772fac9532e2ccd8b0",
      "896f2aac3d9f32cd676442de2f88e8a802d8c349",
      "94194703e83b5447f519fd8bcbb903916e05aaf9",
      "65a9c7b0800c86a196bc14e7621ff895cc6ab287",
      "2fb59ebe271d6b007bb0429c1701fd1004782d1b",
      "081a05b34be9d604f85ca4e5582daa753370b960",
      "789a7069d1a2d02d784e4821685b216cc63e6ec8",
      "9364b669f81ce1454da8fec79810c3ee5d56d85a",
      "f1964cc1b343f907462cd7fbfaf88c2679d61f59",
      "1c71771c701aadfd72c5866170a9f5d71464bb88",
      "8ccbd4898fd7cecac6823e7caa15c74fca670fbe",
      "ee8b1603c79a4f9c3bdc0d6633b595aa93ff3a0f",
      "156d217b0a911af97fa1b5a71dc909ccef7a8028",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "967a21a111757d6af7f7a25ca7ea2bdf6d505098",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "e4715a13f6364b1c81e64f247651c3d9e80b6808",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "006906b6bbe5c1f378cde9fd86de1ce9e6b131da",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "c889d6f98e6d79b89c3a6adf8a921f88fa6ba518",
      "54906484f42e871f7c47bbfe784a358b1448231f",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "36ee2c8bd605afd48035d15fdc6b8c8842363376",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "0834e74304b547c9354b6d7da6fa78ef47a48fa8",
      "93ee8e1c05d11d63aa3d61653b2c8bae75e0aecd",
      "fff114cbba4f3ba900f33da574283e3de7f26c83",
      "7e1874986cf6433fabf96fff93ef42b60bdc49f8",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      null,
      "ba640c0682b242cb480bb4eb5b934ee6db949269",
      null
    ]
  },
  {
    "paperId": "90dead8a056b848be164c2e5cdadfa2e191c3265",
    "title": "A Survey on Oversmoothing in Graph Neural Networks",
    "abstract": "Node features of graph neural networks (GNNs) tend to become more similar with the increase of the network depth. This effect is known as over-smoothing, which we axiomatically define as the exponential convergence of suitable similarity measures on the node features. Our definition unifies previous approaches and gives rise to new quantitative measures of over-smoothing. Moreover, we empirically demonstrate this behavior for several over-smoothing measures on different graphs (small-, medium-, and large-scale). We also review several approaches for mitigating over-smoothing and empirically test their effectiveness on real-world graph datasets. Through illustrative examples, we demonstrate that mitigating over-smoothing is a necessary but not sufficient condition for building deep GNNs that are expressive on a wide range of graph learning tasks. Finally, we extend our definition of over-smoothing to the rapidly emerging field of continuous-time GNNs.",
    "citationCount": 214,
    "references": [
      "365c1e187e173b51589a8f50575407e3e1d1175c",
      "8bae2d456875bd21d09d759850a3b92f32b0f9c5",
      "2afb4cacbfa6b374f72accc37e779afc593ba843",
      "854b41b4bc1254b68cb7242b15341fe70461139f",
      "a50a2a191c98dfe045ac2139495ee80ff1338e47",
      "04ac11f8db83406b03d92aa4571fc3e6c176c1e3",
      "af84c6db6b5c41ca628867ff4a27566e9ca3c69e",
      "54ff6c9ad037792e938e05985720d313512539b7",
      "faa6fce9a16925eb3091271281f923bc95291ebb",
      "95eee51c1cb1771e96cd182f47c90a7877461530",
      "a5ff5ca2918534622063a2e0cd5ed969e18ba53e",
      "14014c024674991149f3ecf9314c93f7e029ef1a",
      "3f9d84e408dea70c41bc7ccb6ed1093f6402c10d",
      "639206a9a32d91386924f1c94e9760dfb43df72e",
      "1d81e7f428fea2b2e15ee3a96fe843ca603acc4c",
      "c6d550c3fcecf27b979be84c4cd444cc1c72bf47",
      "21e33bd0ad95ee1f79d8b778e693fd316cbb72d4",
      "236ab4850536d8a2a0dc0a261e50e4dcd6d8c947",
      "6942bdc5aa70ed1288c49621719de2f699bf83dc",
      "3bfa808ce20b2736708c3fc0b9443635e3f133a7",
      "9a772646ef9ed9c917f45fa592d5f89f7d5f8542",
      "04f3203f1214063436d81ce0c2ad7623204da488",
      "903d62dccc969f5e6642d89fc746b94de7e8c1af",
      "8540780e6b9422f7a1264edb70f39d3ff79bb8c1",
      "38293873cce681b857b3c1d73f5590f641f3dc42",
      "94194703e83b5447f519fd8bcbb903916e05aaf9",
      "0a6a9e6d4e3efd7c69357769305b70097281655f",
      "4ce9c20642dce5eb7930966053a1e3da4ef617f2",
      "44842bba66366522de782f537d9bc61d8868bf08",
      "4e7dd1e79f0f13650b2612325e6ba8d206dc04fb",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "449310e3538b08b43227d660227dfd2875c3c3c1",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "f09f7888aa5aeaf88a2a44aea768d9a8747e97d2",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "2c03df8b48bf3fa39054345bafabfeff15bfd11d",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "e12c07178f0dc2fcccee21c96ed26f142dc1e08f",
      "04f4085c0126ba29453a582cd1e62e05c8e15c82",
      "a5eb96540ef53b49eac2246d6b13635fe6e54451",
      "3e33eca03933caaec671e20692e79d1acc9527e1",
      "f03db7ef9cf309561eb02eb317b875deb8817c01",
      "7906c718ea2620c983275c5de5305e12887b1567",
      "baaae3a438424f0d0703cc612a87f7b823fdbe1b",
      null,
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      null
    ]
  },
  {
    "paperId": "252351936bd6fabf4b6cd2962fa0ee613772278d",
    "title": "Spatio-Temporal Graph Neural Networks for Predictive Learning in Urban Computing: A Survey",
    "abstract": "With recent advances in sensing technologies, a myriad of spatio-temporal data has been generated and recorded in smart cities. Forecasting the evolution patterns of spatio-temporal data is an important yet demanding aspect of urban computing, which can enhance intelligent management decisions in various fields, including transportation, environment, climate, public safety, healthcare, and others. Traditional statistical and deep learning methods struggle to capture complex correlations in urban spatio-temporal data. To this end, Spatio-Temporal Graph Neural Networks (STGNN) have been proposed, achieving great promise in recent years. STGNNs enable the extraction of complex spatio-temporal dependencies by integrating graph neural networks (GNNs) and various temporal learning methods. In this manuscript, we provide a comprehensive survey on recent progress on STGNN technologies for predictive learning in urban computing. Firstly, we provide a brief introduction to the construction methods of spatio-temporal graph data and the prevalent deep-learning architectures used in STGNNs. We then sort out the primary application domains and specific predictive learning tasks based on existing literature. Afterward, we scrutinize the design of STGNNs and their combination with some advanced technologies in recent years. Finally, we conclude the limitations of existing research and suggest potential directions for future work.",
    "citationCount": 211,
    "references": [
      "b31695ff37b729e97a586d7d6250fc66f976993a",
      "1a2117f7aa7798073799e994031825cdb7d7f28e",
      "02f96749366e9ad6f649607a3871f28cded70577",
      "051166529849e10c23d3a493e0e2eae7edf18e9c",
      "79ee8011165e2032bee36732fbb03505042b0b5a",
      "1aa02bc5585a2c52e2643bf8be714e98a2e7a852",
      "78566caab0e6370de60e642ea314dc8c822a4321",
      "1268bf8bbba86570d7ed9ad882d780dedbb1710c",
      "c1a13ed7ef722e6442ef4f3ffdd7614b9d8dc8ac",
      "941c62e66c27621307d54ad397b7d9d68a44c7ad",
      "07ddd214b2ebe8ddbb157463df238b90b64f223f",
      "59694c8dce4f13db2f486eb8102459a3f7c23da6",
      "4d434117f4c96e7b1040825cc4d843b6779cdffe",
      "4732586b3038ef00caafb6c0d0a4e621a51642ff",
      "463d7f34e6f39f8b45597eba10f8b46b11bfc74a",
      "e83db42bbd0a7702eff6733c5f662b324b568be2",
      "334de342e7c4823d7b91e6915089d6a16339f5f6",
      "ca4b56aa674bba3c7d10d1645cc31cc3a61fc0dc",
      "9fab6048fc657ec13d4a59fe21b823ecd0ab0b95",
      "2ee134e68d70b01fccb59306bb38bc4107b1351c",
      "336c30da869640a972f441bf085d4de2b72c5929",
      "872016feb88c6027ad846da3e33776042cae191f",
      "e65d738fca6152c2eddb7ac44dd80b72fd8f5273",
      "013b43179f5c6f3d325db75b4260ff2ced5c4a75",
      "abf773ddd5cb8f42a20e77effcf7e1f826991d42",
      "fcecb5e58f8320d4f06b710330e3c6e0df69242c",
      "58f124b1ba99a87e4a2a26c267290f795c25b433",
      "3253a37dd7b6ebfbe22f22ad4bedc07b4b5b0f29",
      "12dd3ea6cd7041aef237f63c03a3e90fdc16897b",
      "f1273601f5cdd1930c569c256661e1795098b28c",
      "926ae0d09aa049b3815cf427f97c55f17bba164e",
      "291fd11f65c3b74f551bbee1c14905bab1c57de2",
      "cf4e97fe7e00725f11c2ac1ac9c6b52ab511bde6",
      "015271efe207165753b7d8c1346b91fe8f6064fd",
      "b3fcd7afa1c47a7b651cd4d999139cf8882e9c9d",
      "a307e96e5ef071155f3cdd72829aa9be1f905f6d",
      "66d3989769c3d253c7e7b3645fd3f372ea2ac5e6",
      "f00d9ecd8495caaddf7e9d355c13866dd504dab3",
      "5b05ee74cdc6cba9e4e4a418aebb6b7d105c16ec",
      "8faeb904180eda9a5001a33f9ce7a5e30b804643",
      "d142743d40fec3cb8fce464296d3edd27ddd2c05",
      "c5bd62e75e4b69840304e6b6f1ac56e82ad51555",
      "ffc3f632ad69983b40a5d90b2aa4d269fdc327e0",
      "a721b908b5802e12d4bb86c8d5a4c3b1d6341629",
      "5b347d3d5ace07ca7f0ce96cc6966fbe9bec891a",
      "e715be5c4cc4709b5463061f473d51482afb411e",
      "2c7b12989e59648f175589defcb0d64aa7725e54",
      "6cd11a389e9aaaea8bfe68e3ce486b8d3e8c287b",
      "48dfdeedbad27ddcdb4770dfca220054d6bca94c",
      "b130687bf2632da16973bf9755e81e061e0ca504",
      "6dc97881cc3c319ee23f0fb821b795b47f590554",
      "c073fa0c65deaf18c8230b48a6094bd6feaa0519",
      "6e12101a0b8ced3f4daf96e0501f57c2fb36db6d",
      "8cda49c8afe387e0bef30634df280f1af379a1d1",
      "dad4f99d0175fafec01e6a5d34bfe26aa6ccc38e",
      "39aae82430a88584cad13fc1c068bb0a5ba7f342",
      "58f2e76f56c8e638df75f72bf01eaa5bf7e60278",
      "544acaddb77631eb981d3638f0896ff44a188dc3",
      "5b1978e8284c8514165938bff6e3276977088f94",
      "f999e08a588b7822c25ad7d34b3a120515ddc3cc",
      "e3e721fd51a5940273759c5058b2046740a54d5c",
      "f005b259c31d1a9ed359a3700e9cbe7f9ca51c0f",
      "3f120511b7adcb430cbe69941cad5ba230e27eec",
      "8d30ce059dc4a03e3ff363e1db52faee2bf4cde4",
      "5be02c8db2078bb72224438df8003552e49b23a8",
      "f9af8aef47c422be3a12845638098ab90c778ed4",
      "c9cf3179b20251cd75fbc26ab2b04a5a59e7807d",
      "2958acac16d7e109e5540efc5a31f71edfbd5466",
      "0e125f6b457cdf7e43598bab2bd5ddbb1d390216",
      "0cd144aa211d06094bcd2cafbe71af4ce0e59868",
      "b438b8844abfa52c9269cc90c428825d3577fb60",
      "6b9c604ebbca40502b604b066043ace484fb0266",
      "29b0580a811d79bc2f23e021c077fb0083cff561",
      "2558139af888496d6b5520a91fc6adeb15f23daa",
      "76868f97b3ef929eaecdb08bef96041189c6d2c2",
      "585ef1d9c2f8951f524ec9d58d6ef5f52dffca4a",
      "525c4627860f55bf7cfc1a78747b690f67dc1faf",
      "fd87b292b79f7a26b487a1cd78cdb5c9a1a4ec86",
      "4fda69a13af128d1bcfe766fb6ff482f73140048",
      "326d8afbea3104bd14d973f4572db34473845659",
      "b02a5aebd9598ddbb2b4021b5576cedb5519d436",
      "0388d4ab76c669deacd35e4b27634bad53afff95",
      "151c5d5e9b503066a94f96a67e3680e7a0d80130",
      "bcd351fbff50c8d04b8d8c5674945a3a370fa539",
      "e200deda80aaa8892d63d21fa157e9dfd58c1fab",
      "5f447bc454eb572374751576ee0932e5ecba7f8b",
      "8d6a348c4b00da0c30f9f5c77619ea40e441652b",
      "80000464a095e2bf86c11db07bf1a72c6c95df9b",
      "78fbfb6096a2d53e9b89e882c562bf3eabd7915a",
      "eacf6b222cf2b3072e8472e622a2d4f53503118c",
      "137fbb17f28e4b8bd0141a53db0bf316a17b5677",
      "83ed6dc1ec62267b0919183ac3e2816f23089496",
      "29bc5ce5da50db495005d789be53c503576b1a49",
      "6ea296e7ee12bd0ac3399e88f45b6500ab300a44",
      "970e8f35dba8f6571a4b608780952adc7f429f10",
      "6351ebb4a3287f5f3e1273464b3b91e5df5a16d7",
      "c4515857baf4481227ecf203bf7570ca6457f2e1",
      "54fcc217af26556e20eb3df851e32caa938f4767",
      "e2948a83b157e9a33d8a38537c59ad556b036035",
      "399f2bc35bc3163477b554499be8a41df0adbf3e",
      "24d0c1679f15a10a5739226bfaed282a89db702a",
      "66d0f19d7dd37c5fd946d9c87ccc3aa62985506f",
      "ddb8a6e6d5e8816b2d9e4679995d29ff0a18cd6b",
      "28099f9a239c123576d1b6cef9883db40636b35a",
      "c8310be7016400c9395d829d31667b975ad9191a",
      "b8f3faa0588d9d04a8f434f59105b238c0f5ee0a",
      "3b2f5884e8199544375ddcdb4fa58f44df0b1a7e",
      "a08bbf1956eb4137371334b138c6304d61d69771",
      "faadf1c9301b5fc4c2795fb616016d51982af8e0",
      "40cb6b9f47f9bfef5ecf5325959f739b5a302625",
      "396b9f2ce7f42c922e49e106aaac30aec257d683",
      "8ca3df45f42a9156e94630f35b33ee874a7b2001",
      "e494fbb4621aa115f1901f32fb3e3fc9ae757119",
      "5822490cf59df7f7ccb92b8901f244850b867a66",
      "71ae7a93abd103a1f6820b446d24232a458ae75f",
      "8f9ed1060daf32e8feeb9fbdea2a9acbd32de212",
      "6ef770d11e3e5918646b2f5a97c0bcc8bc9b9256",
      "aa8183aae0d95459103fb25d2810af7585da482d",
      "8153ade36d85de3a67c1f750ef05a1a9c6212a2c",
      "24fa0aeef63e72445312993ca5dfd51dcff8f487",
      "006875b74e49c97c3403ea413f905a2334ec514f",
      "a4906b18863aa10706dcf8a0274bec801145a495",
      "fc9c6fcf275b35f5912b723438c52906913d244c",
      "4b882905c9602d25e28b59dd825d62e19d5ed9a7",
      "1f79005aecc269af7bd1c03cd09b3a67d934f795",
      "fca6cc8595c88d0551a40470c10280638d444349",
      "aa07ea8d4fcd5c83ba26776182b80102c763fdd7",
      "53c9f3c34d8481adaf24df3b25581ccf1bc53f5c",
      "e90e84a100391c2d65e4852b7ff7e92e7ae026f3",
      "aeea29ad352a04e74b6a4459e7328aa6e904486d",
      "caff74af9619f216043aad62009944a07a616b9c",
      "3d2c138a2c757b2483f927fea5395b41fc02c789",
      "9afa2fa80247ab49daeb38177a22d27b6fafc0f1",
      "2a534c4b06ef7e8157aea2c57779320b3db43a9b",
      "9b175ff0549462007d050680b1ae46fe9dbf4bea",
      "d04b59a9ecd60698aab402288bf9070640c95dac",
      "80f9cb8abcd7ee1c471086149655fac276a302d5",
      "35d5c1dd4d51e885a9e5a0e794adadf13920a39b",
      "d3e4b9c94d37d14783c0d6f529445841aa11e784",
      "001dcf53553befd8ac2d070969b3d4ed99d8a490",
      "fbaaffc699b17256f1269e6b27d65741fbcab840",
      "bad3534cc797606d1fe3cb09713407783e77cac4",
      "c854748aead2eb3a38520a4e5a843809765cea9b",
      "56d138b1271769046a1c3d8d3a67bb592d0cd1a0",
      "722136f79766b203bef8ca71fc9ab8adb2a79646",
      "ba7b80fd765b3326dbc5f8cb7692f5b40ee25a10",
      "401930b2dc738a5a67d136bc9a2d04461c5bf93a",
      "ab7097660ef993807e9902840fcfbe94b433bcb9",
      "f5074a176e126f9443ef3fa478599cf5aa2b74f8",
      "b37449940079dab60263e317a2862ec2b57e8ba7",
      "da8ef18269a04332ccf9cb5c0e02cfa9b531f734",
      "5792baeaff726b2f309224a1506d266ea9582a90",
      "ed360bb72d67d7ae7aae80841137cb9cb34d6978",
      "24cff2aafcd66e1b7be4f647e478e8e73cf410a5",
      "c5826aec6709f12940307d67bf5ea21ed71da974",
      "1fac4dabbbd074033f4d6a772dcfcd63c6e676aa",
      "645054d31fa26b29bbfb0cf73b75f8906c359415",
      "76c124786ccf4263e6403a15a8e350ac28be4e65",
      "2504ffea9c60007e07efed26021c5924be8714da",
      "9d6068f7b3f7600efcd0dc1e0b8cfb73126e2eb3",
      "c2519b12698187baddc889dfac9b1747cf6d2cef",
      "50d79f64bb6bebf8a3fd97dc0e9e3ef73264c5eb",
      "13b136e1e987443002a550347eba671636544e07",
      "d68037bb4d9fb2f9d8ca1216aab29f85063b181c",
      "9e6cbf5dba2e07bf1db0372fef01f3f2e8b4e8f7",
      "212004167136997fe50e48cd2ea6c86f630009a2",
      "1e1f2753a5d8965d7bdc528a322241d042b03994",
      "eef78886c0231c44743dd5eb2ce4f3539d9c666b",
      "5307c0edb36cafe5973b224f25844e022489d819",
      "d999defb346e2ea528ca10bec7279bed1114d490",
      "1e9dbe5ee557391679132a727e0b921ee24d748a",
      "6a12e89a6d16f48d95ceff957d8c2812b8ee8c62",
      "3ee3794b25304f21d364b7389d91a37c989a35d5",
      "3255a5964d9960dc419d1e4e5eb6eba062963988",
      "2e2439c70d811cbbb64aa8ea7bb6442efef67d55",
      "1f93cd6cd0fc17756f4aceb62dae87a2dfe9e721",
      "cf6714f313bff58fcd5a95a893cc2f34331a24c8",
      "248e4c2f6031eef8695fb3bd07eff1f5d19d19bc",
      "c5036065bcf2daf249014f2592aacf2360ec0e66",
      "9c3fefd3fe877fc9e28968934e55c3cd18031e20",
      "e5e724f5c4c6737b1ceb36b758a18033b72a4b68",
      "2f89f2c580a406acd87c495158c9c193cff018c7",
      "270d25840b489f1ee894d7802793ca8a5da049a5",
      "49b5202408c901dead51754886e7e65e2c1f6d03",
      "75e924bd79d27a23f3f93d9b1ab62a779505c8d2",
      "d300ce5c990ba885ac73bdac8ec4318bbf43af25",
      "4a4f84992b4ee8331f1e3189f6f9b0437214035c",
      "bc0f18be83322d389b74fc43963221852f446c48",
      "19f8366278c7f741725d48f457f63b0107fafab6",
      "f420663fe8c69ed5ea5236201a1f4c734cd145a7",
      "98f2105a2c3a2ab65070296cca8fdbda2aa61694",
      "3c72237a77977be734d17fc45937d80ccd929233",
      "ce44ae8dadf5f46673f50fdb3e3cf1f2535d39f4",
      "1b24169304c4e85f60beae5e198e61038cfb3095",
      "d36f053f11170a87637797c1906392fd238322c4",
      "5ef15cbf35a7d70dd5444c8333de6dd82962eb2f",
      "499c93d343d9e77d2366a1556a9a2a65de562ea1",
      "da5d3cfc9898cbf05fdd5a6954378b07a4f8d846",
      "a33e9222b0efa2f59152b6a7e287a5f461a437a8",
      "6ca944ae76b4c71c5940c4172ef8222897d6cd51",
      "8ba1f5b23b54eb56e7fcccb4d7930ba2abe9bca5",
      "fc41d75288a81dd7e30087480f51821fc6572d95",
      "879113427f2294031edb144670871911da10987f",
      "eee94ff699337681c6660278b2ecf7e6f9774ed3",
      "dde6dfc3946eaac9b96c6280bfe72e97900a7ca7",
      "addb9884568f64591c99b229805ee900471e93de",
      "06b8e82542d1873928d007548a23d3b77daa11f8",
      "0f8332fb651bf639ab110c65067ef2225f49eea5",
      "36cf500079b82e3adf4a3afe3356c1c03426bdcd",
      "e154205a6f3178ae513a1120fe415181fa565640",
      "86bbb643ce19102659be7ee2d696ca2e167754fa",
      "d58fd97d7a8308a20b159bbaf02011e26c323852",
      "a54c647f6db73621ec496ea86355726161c0898d",
      "1eb7f46b1a0a7df823194d86543e5554aa21021a",
      "fae129338c0899576524506008427f64477d3967",
      "13c185b8c461034af2634f25dd8a85889e8ee135",
      "6a5f817fd8be2d89b492a3592b9f4e69d818b537",
      "54be361ad20a895831dd19f70712c885c94a6289",
      "5856fb5bfc33e5b2d787356f9689684424ef40c8",
      "45e478bd2e8c859f2cd08e1a1fa2c545d7aa288e",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "8e7666c21ae8be01ec4a3d794ff3d24f7992d731",
      "04f97db6d1a262f9b195a18a0cab6015c7cb44c7",
      "5eee61e47d55ed1ba90a00c91fcb3673d91e042f",
      "134b77182981451c456ad0a02c1d61f67906f892",
      "c1f457e31b611da727f9aef76c283a18157dfa83",
      "449310e3538b08b43227d660227dfd2875c3c3c1",
      "1d76f66ba83f8cefc03681d373b845394f2d2fe1",
      "566d9637c465e4dfc1c1695ecc7155adbb54f45c",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "72edcb3788f9c141a3ed28e6d36f75ca4977d27e",
      "9ba0186ed40656329c421f55ada7313293e13f17",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "f96719c68a5282199b4f078cffa347bd539fd4ae",
      "88caa4a0253a8b0076176745ebc072864eab66e1",
      "dfa47adda5eb82ea655f48b9ff0babc36ff05bea",
      "df0402517a7338ae28bc54acaac400de6b456a46",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "1193317829bfcc9b9dffa5ae85a2e2114254b37e",
      "7f5fc84819c0cf94b771fe15141f65b123f7b8ec",
      "f9c990b1b5724e50e5632b94fdb7484ece8a6ce7",
      "59a79116f9f7a20560da0aeb7519c33f6ec84a17",
      "0b544dfe355a5070b60986319a3f51fb45d1348e",
      "eec471897375942fd690b736c2753bb19d907273",
      "8e8152d46c8ff1070805096c214df7f389c57b80",
      "69e5339c0c3928a354e848b9ccf5349f6397e60b",
      "2e9d221c206e9503ceb452302d68d10e293f2a10",
      "e52fb14e4beccc5e88a33c1fe5c7d6e780831ae1",
      "00aa2ac0e6b647b7e8e0c36bb7267b6f1db16040",
      "17c10fdf2af84406bb543442878b4a9deac7ec07",
      "71423c75a47c1caf4d5ac8548b2f076c99a9da95",
      "1397cc525bb31579190b23813b47543cdc836f11",
      "bc0d3abd0bb330bfc422529f859e65901d3c0fac",
      "2f9bcaf420d8c2da45a2066dc123f9872ebdd935",
      "9576982b7ea3b9ab8f155f1393b7ffb51e020b21",
      "b1ab8c232858cfd656a29fd8d8a87bcb6bcf5dac",
      "50fb8943d9319f3cd83bcade44ee2aec0b59b4be",
      "33be8043b3d7d8d3bfe35d16fedb973c5cd722a3",
      "7c07a27e11aea9f4bb2ac7707c0fd9788d134675",
      "d457d705c50ea1ed69311f4a9f257705e46b7155",
      "571e2c39b5b2684d306882023d8a175e15a6e7b9",
      "8e0be569ea77b8cb29bb0e8b031887630fe7a96c",
      "a8628ef256f229ef7ba65667678389f982bb9973",
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ]
  },
  {
    "paperId": "5e6db511e736f77f844bbeebaa2b177427abada1",
    "title": "On the Expressive Power of Geometric Graph Neural Networks",
    "abstract": "The expressive power of Graph Neural Networks (GNNs) has been studied extensively through the Weisfeiler-Leman (WL) graph isomorphism test. However, standard GNNs and the WL framework are inapplicable for geometric graphs embedded in Euclidean space, such as biomolecules, materials, and other physical systems. In this work, we propose a geometric version of the WL test (GWL) for discriminating geometric graphs while respecting the underlying physical symmetries: permutations, rotation, reflection, and translation. We use GWL to characterise the expressive power of geometric GNNs that are invariant or equivariant to physical symmetries in terms of distinguishing geometric graphs. GWL unpacks how key design choices influence geometric GNN expressivity: (1) Invariant layers have limited expressivity as they cannot distinguish one-hop identical geometric graphs; (2) Equivariant layers distinguish a larger class of graphs by propagating geometric information beyond local neighbourhoods; (3) Higher order tensors and scalarisation enable maximally powerful geometric GNNs; and (4) GWL's discrimination-based perspective is equivalent to universal approximation. Synthetic experiments supplementing our results are available at \\url{https://github.com/chaitjo/geometric-gnn-dojo}",
    "citationCount": 92,
    "references": [
      "a8984912c2647b54412ca6b7f694001a402255d1",
      "6b29d0e8c69db690d25843e3f81bf34a9a558596",
      "c7215ab4589ce3590910c597e86b1aba8e460d49",
      "0f94ef2e2034b7cefbdf9c04e8ccf205dec8dfbe",
      "036aef17a8c2c03202170aa85fd7be1dba974202",
      "98926d43356e87c22c82efc132dcaaac1ff40ebe",
      "6bdadaafb97e555b9b7a78ff0a5b6aecc996f149",
      "2a85846fd827a157b624ee012e75cbe37344281c",
      "c080266260e7b5c709350519f0534f362e521b95",
      "cc7f2a67a8c253aece19ffa429c805c1d1a0fffa",
      "407238453abd02a9edf48032eaa19819d6d150ff",
      "c62fb7fb4bb512c8b78adb83aad9eedec02defe8",
      "04ac11f8db83406b03d92aa4571fc3e6c176c1e3",
      "ae83ca7901aba565604b146911d17ae3ef4d7393",
      "d420253d38e08881969ed1e3afbe6e1ef3fe1368",
      "5c84ffe8bb0da3e359cc71a9a08d5379ff5eac12",
      "dc32a984b651256a8ec282be52310e6bd33d9815",
      "093bd7a7dd31a8eb4da371d012da5fd272bb96ca",
      "0d943f17e09cdb681f84c6bf3e7ea8b491bfdccc",
      "5542d0ff99767f75f8c8a329fc3d88d73ff470c3",
      "14014c024674991149f3ecf9314c93f7e029ef1a",
      "758294483c308d9d6028321f0741b6e4617c9ab9",
      "8ea9cb53779a8c1bb0e53764f88669bd7edf38f0",
      "f8079b38314b9a78e2558d26126ed649e9c3d2dc",
      "00f39c314542902cd1b03842069e5d3ed441a5c3",
      "7456dea3a3646f2df6392773a196a5abd0d53b11",
      "966ea7df97a5c38d04710dd4bb393b8acaef4d9a",
      "30827cfdabbb8e1f02c6fd7c188d5a7e6b05c6da",
      "5e7047851d05b2ecef5de451dda5404acda726de",
      "6075091294a0fe0fe5c6c7b7a0df9029b6a965cb",
      "3bfa808ce20b2736708c3fc0b9443635e3f133a7",
      "19c0d004bd0e42a6449d8b7717cbda4431a67e65",
      "6bc4004347cdf76d84597210796f38fcf7a01a80",
      "c529f5b08675f787cdcc094ee495239592339f82",
      "3a5af4545ee3ac3f413841c10c7605a1cefeb9e5",
      "8284195cf32a24beeff5b1aa262093435dddbdad",
      "0cb6f36fc7964dbb377826dbd6043366ad5377db",
      "b3af16485c5028ebae8819e387a6cbdff352d9c7",
      "54e6a214c9dca4ba6bb8c5d52e5b219c5ea50e12",
      "057b594c9e6ed45fc445a4dc45384117bdd15a3e",
      "44842bba66366522de782f537d9bc61d8868bf08",
      "520005eba3f1b8e852ed9508ead726e15629c78a",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "462d01edc820ac0d4f4460ed133b0f59a292ff9e",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "7a90d95ffc3d2d397fee3133165c0af9501f55c0",
      "6f3370fcf266fc10842b6d3e77c6cadd842a3580",
      "e9126a98de0c39dcffe4c4f5158e037460196724",
      "d133cb102ad0f81e3fd17a7db090b28afc124c4a",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "73c71ebe1a9cdba5b39331d2b0ef14c02f59bd58",
      "9762e64ba47270a97d5bd19d88cb1e3723bd52fd",
      "99f2d996c8d2ff8e0f667b7237a7ed7de7cc5bf3",
      "20f0357688876fa4662f806f985779dce6e24f3c",
      "80bde76ce35c5b8f450bf98c8356a46b0677968c",
      "0ca6b6e5a8af07f43e2269bbdbb7b751be4ad6f8",
      "ee2570338f1c00097be793093268336d5ea4c0e7",
      "d08a0eb7024dff5c4fabd58144a38031633d4e1a",
      "850cea6c8238aadadf05171e8b338e6431b8b2d0",
      "936a63850acd46acb5c4183e6b360e47bc0a86aa",
      null,
      null,
      null,
      "6d1d91a413af1212fea8791e266282019b62c37d",
      "b37775b5240d5f5ef6b60811a865c3eea89ba000",
      "2ec3cb6c3228725212c14893d7d0580ba56fb0d3",
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ]
  },
  {
    "paperId": "b05a5424d0fce45896b6b8a847cf540a38f556bc",
    "title": "Global Context Enhanced Graph Neural Networks for Session-based Recommendation",
    "abstract": "Session-based recommendation (SBR) is a challenging task, which aims at recommending items based on anonymous behavior sequences. Almost all the existing solutions for SBR model user preference only based on the current session without exploiting the other sessions, which may contain both relevant and irrelevant item-transitions to the current session. This paper proposes a novel approach, called Global Context Enhanced Graph Neural Networks (GCE-GNN) to exploit item transitions over all sessions in a more subtle manner for better inferring the user preference of the current session. Specifically, GCE-GNN learns two levels of item embeddings from session graph and global graph, respectively: (i) Session graph, which is to learn the session-level item embedding by modeling pairwise item-transitions within the current session; and (ii) Global graph, which is to learn the global-level item embedding by modeling pairwise item-transitions over all sessions. In GCE-GNN, we propose a novel global-level item representation learning layer, which employs a session-aware attention mechanism to recursively incorporate the neighbors' embeddings of each node on the global graph. We also design a session-level item representation learning layer, which employs a GNN on the session graph to learn session-level item embeddings within the current session. Moreover, GCE-GNN aggregates the learnt item representations in the two levels with a soft attention mechanism. Experiments on three benchmark datasets demonstrate that GCE-GNN outperforms the state-of-the-art methods consistently.",
    "citationCount": 485,
    "references": [
      "b0d941cfa0a3c43703e5222221addb1ad0f9e68d",
      "38b06821977b5024dd51145bbcfdd0eac42d439c",
      "0331a008ddf21b6e8176af35dac5f0a5dbc78560",
      "2884cfaebfb9e686e9d5e8b04611f19b4536b3c1",
      "1f9fc8d7074ccbe97fe465f83d0d8258262663ba",
      "d837642802ffc85e193694f94f7499276864648e",
      "b6abbb18726e2609cd844791e94270c96a1ac73f",
      "c5f5f179d80a3bf9b4f29750283a87eaca42e91b",
      "00b7efbf14a54cced4b9f19e663b70ffbd01324b",
      "0c7e1338a9c7914a3b9a5bdc42b457b3f272160e",
      "97faeefa771e8cc8e55159e2bd03e6f5eef249a8",
      "fd3f489fc0438e500c0473af40dfebe4705df6d2",
      "97de32d8ca162944e5f7e83071c596d13d168109",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "4ab5a2b7eab033c2c2059b6e1e3e6f3e89ebd95f",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "908e33baf3eacc2e50c7dede52af96cf9cf5ac59",
      "e0021d61c2ab1334bc725852edd44597f4c65dff",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "2570d48871aeeaa2e068082f7b1b9805f9209c4e",
      "50d85cb114f7c5e779a6772f2931e77dddd54a5e",
      "2d1cfc9e81fb159967c2be8446a8e3e7b50fe36b",
      "f82c52452c7de8cd6472202c1be2cce9fbcb8dda",
      null,
      "34f25a8704614163c4095b3ee2fc969b60de4698",
      null
    ]
  },
  {
    "paperId": "454304628bf10f02aba1c2cfc95891e94d09208e",
    "title": "Graph Neural Networks with Learnable Structural and Positional Representations",
    "abstract": "Graph neural networks (GNNs) have become the standard learning architectures for graphs. GNNs have been applied to numerous domains ranging from quantum chemistry, recommender systems to knowledge graphs and natural language processing. A major issue with arbitrary graphs is the absence of canonical positional information of nodes, which decreases the representation power of GNNs to distinguish e.g. isomorphic nodes and other graph symmetries. An approach to tackle this issue is to introduce Positional Encoding (PE) of nodes, and inject it into the input layer, like in Transformers. Possible graph PE are Laplacian eigenvectors. In this work, we propose to decouple structural and positional representations to make easy for the network to learn these two essential properties. We introduce a novel generic architecture which we call LSPE (Learnable Structural and Positional Encodings). We investigate several sparse and fully-connected (Transformer-like) GNNs, and observe a performance increase for molecular datasets, from 1.79% up to 64.14% when considering learnable PE for both GNN classes.",
    "citationCount": 332,
    "references": [
      "2b6a8ebce832815f2959bb048d23cc38b458ad4c",
      "093bd7a7dd31a8eb4da371d012da5fd272bb96ca",
      "a6337d9ebb0b7de84588806110157806f9c0383b",
      "47ae807cd511b35e78a2cd4e198283dea6dafd41",
      "5863d7b35ea317c19f707376978ef1cc53e3534c",
      "7072db6eddb85ecd2c117365d91bd694760f726e",
      "d596ac251729fc3647b08b51c5208fdf5414c7c1",
      "849b88ddc8f8cabc6d4246479b275a1ee65d0647",
      "acacf38caa0066f3daaac69cd5bc40406cc0b98c",
      "92d229609b33717ec6e0e97591def3c086913858",
      "b8b3380efb26854bae6f51ad1d2b5a045129c5a1",
      "b4fd73a95b4b102917589b36d4b9c73b9d120f86",
      "3302081b8878de505b69900e22b8137c5d931be7",
      "1449dbc313f7e948a748bda3a22d423bf022cfda",
      "1784a18105dafb85e2c53c86a9736fc7b8b71316",
      "6360aaece0d6bf153183b9ecd075f42f7b127cc9",
      "965652c0e426c5b42d7218d7429025be7ac542bf",
      "3bfa808ce20b2736708c3fc0b9443635e3f133a7",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "19c0d004bd0e42a6449d8b7717cbda4431a67e65",
      "09e48adf1a3f012ec56fbb4f92acae975ee43d87",
      "6fb8b967dad742eb390a3090f094a12f2d909538",
      "bf7c2861dd126fb80d68e86a639d0249cc1d49c2",
      "47f01fd4f0c9c77058a966d3f17dbc09cf7ef42a",
      "d14e56568dc5f57ccdae899d84f91e34ad847670",
      "3c8a456509e6c0805354bd40a35e3f2dbf8069b1",
      "cc9b137697046c29363b971e06b41cd5412b1831",
      "a6aad9ccdcb7674a3b7ab710f0a80d205834f847",
      "fd075bcdf2d7e13d23f7c249a8eded343d5bbe3b",
      "7f42da4abfadf9d5a464affe22d0bd4bf21c0edb",
      "54e6a214c9dca4ba6bb8c5d52e5b219c5ea50e12",
      "057b594c9e6ed45fc445a4dc45384117bdd15a3e",
      "6b010e07618eb36abe6def23d94488b2c81ecbf7",
      "c7fdb033ff15771e9bcea4336135eec171a595f3",
      "4e7dd1e79f0f13650b2612325e6ba8d206dc04fb",
      "7f5ea861a57e14796f033fd0f5580dbc34ff88f2",
      "318d7da35307221267b6ce6ead995cc812245abb",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "3f13a5148f7caa51ea946193d261d4f8ed32d81a",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "6541afa4b4061a7d5c8387514bedea9dc249fd80",
      "fd17bd9a5dc24a081ad9743570f50dd6750f54b2",
      "a5fe578a6b9f51ce19263676e6395421fedc6d2d",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "d0ab11de3077490c80a08abd0fb8827bac84c454",
      "f09f7888aa5aeaf88a2a44aea768d9a8747e97d2",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "50295c19e177480ba3599300de1ab837cc62b08c",
      "995c5f5e62614fcb4d2796ad2faab969da51713e",
      "c38add89b868e78cc34804b19282f56c962635d5",
      "2c846c5ac7e8bd020b89f6c4767a01731114ee4d",
      "2c9b060388b88841cf8095cd9efcbfeb805357f6",
      "b043f19fa263adb874becf32b912d9174bdea56d",
      "88816ae492956f3004daa41357166f1181c0c1bf",
      "2e9d221c206e9503ceb452302d68d10e293f2a10",
      "d08a0eb7024dff5c4fabd58144a38031633d4e1a",
      null,
      null,
      null,
      null,
      null,
      null,
      "6d1d91a413af1212fea8791e266282019b62c37d",
      null,
      null,
      "5d90f06bb70a0a3dced62413346235c02b1aa086",
      "13c82489c1568b67265d17a15720001a5737171e",
      "a13050d0a10ea6c1a536e3ceec069639123fea3d",
      "162d958ff885f1462aeda91cd72582323fd6a1f4"
    ]
  },
  {
    "paperId": "c193011099906126fe7b6cfcb04062cf4591ccf9",
    "title": "Specformer: Spectral Graph Neural Networks Meet Transformers",
    "abstract": "Spectral graph neural networks (GNNs) learn graph representations via spectral-domain graph convolutions. However, most existing spectral graph filters are scalar-to-scalar functions, i.e., mapping a single eigenvalue to a single filtered value, thus ignoring the global pattern of the spectrum. Furthermore, these filters are often constructed based on some fixed-order polynomials, which have limited expressiveness and flexibility. To tackle these issues, we introduce Specformer, which effectively encodes the set of all eigenvalues and performs self-attention in the spectral domain, leading to a learnable set-to-set spectral filter. We also design a decoder with learnable bases to enable non-local graph convolution. Importantly, Specformer is equivariant to permutation. By stacking multiple Specformer layers, one can build a powerful spectral GNN. On synthetic datasets, we show that our Specformer can better recover ground-truth spectral filters than other spectral GNNs. Extensive experiments of both node-level and graph-level tasks on real-world graph datasets show that our Specformer outperforms state-of-the-art GNNs and learns meaningful spectrum patterns. Code and data are available at https://github.com/bdy9527/Specformer.",
    "citationCount": 88,
    "references": [
      "277dd73bfeb5c46513ce305136b0e71fcd2a311c",
      "641828b8ca714a0f70ccdac17d7e9dff485877c2",
      "b9225c672a5078409d890393780a5eb90f2ec3ca",
      "383116b2685d0c7ae9669ac929b628b9af0af5f3",
      "b54a8f7825204b5886f73b9e67649836e378721c",
      "0557d1afde1af96a647723249a7822d0cf98fdc5",
      "28da08d10d371914bf79aea0c846110de2294629",
      "04ac11f8db83406b03d92aa4571fc3e6c176c1e3",
      "089bb1ecce75936eda1890f8e40a56d4c811dd33",
      "bbed89eee0a43baf17dd5eab8354deecadda8acf",
      "47ae807cd511b35e78a2cd4e198283dea6dafd41",
      "5863d7b35ea317c19f707376978ef1cc53e3534c",
      "9389af659f14239319186dff1cef49e8ece742c8",
      "4b776e7f26464e5b230c1679560f12618730dcc6",
      "fbc136c8c81cd89206dc0fcb54e16bd98df83b62",
      "849b88ddc8f8cabc6d4246479b275a1ee65d0647",
      "268d347e8a55b5eb82fb5e7d2f800e33c75ab18a",
      "9160756d319bbe476a0e8b24ab85346c985d3c3f",
      "0ee0801ba010a441403f9ed666ef9bf006b3aa07",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "04f3203f1214063436d81ce0c2ad7623204da488",
      "135334ea7fdef8eef0367e862797cac7dcd232a4",
      "93b8f389a307c7c04a141c3d08331df5c95c9a18",
      "4ce9c20642dce5eb7930966053a1e3da4ef617f2",
      "9f91568d8ec72c417d9146a551b61e69ccf1f848",
      "7e71eedb078181873a56f2adcfef9dddaeb95602",
      "5098df13be6d1f2a31c9fbf85703336ef77a9665",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "36d442f59c61ea2912d227c24dee76778c546b0a",
      "d07284a6811f1b2745d91bdb06b040b57f226882",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "a456265138c088a894301c0433dae938705a9bec",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "bd5fc28c7356915ec71abafbe86b7596c60720aa",
      "8e8152d46c8ff1070805096c214df7f389c57b80",
      "d08a0eb7024dff5c4fabd58144a38031633d4e1a",
      null,
      "1485a6ffc3aa08756e95b69b116198bb6e0fb6ca",
      "0513503cb41d0d261edf36a4c5bc99757c3e83ee",
      "6e4d14bbfd0114bc6f82845be5e6b654ca62b149",
      "df2b0e26d0599ce3e70df8a9da02e51594e0e992",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      "31bdae4d6db4aa065141cf3722f22ccf58951907"
    ]
  },
  {
    "paperId": "80c698688bb4488beaceaab5c64f701a946cb7ae",
    "title": "All in One: Multi-Task Prompting for Graph Neural Networks",
    "abstract": "Recently, \"pre-training and fine-tuning'' has been adopted as a standard workflow for many graph tasks since it can take general graph knowledge to relieve the lack of graph annotations from each application. However, graph tasks with node level, edge level, and graph level are far diversified, making the pre-training pretext often incompatible with these multiple tasks. This gap may even cause a \"negative transfer'' to the specific application, leading to poor results. Inspired by the prompt learning in natural language processing (NLP), which has presented significant effectiveness in leveraging prior knowledge for various NLP tasks, we study the prompting topic for graphs with the motivation of filling the gap between pre-trained models and various graph tasks. In this paper, we propose a novel multi-task prompting method for graph models. Specifically, we first unify the format of graph prompts and language prompts with the prompt token, token structure, and inserting pattern. In this way, the prompting idea from NLP can be seamlessly introduced to the graph area. Then, to further narrow the gap between various graph tasks and state-of-the-art pre-training strategies, we further study the task space of various graph applications and reformulate downstream problems to the graph-level task. Afterward, we introduce meta-learning to efficiently learn a better initialization for the multi-task prompt of graphs so that our prompting framework can be more reliable and general for different tasks. We conduct extensive experiments, results from which demonstrate the superiority of our method.",
    "citationCount": 149,
    "references": [
      "84c0a7b905919744cc761ea6d43988508e112a3e",
      "62c9fdb7b1820c849a407a6b1e4e2ea190336459",
      "e60ad3d4ed3273af6a94745689783b83f59c8b4a",
      "f9a03b6cb8b7570caf7ac80c0e58cc2c0eb59bcd",
      "1497a56aa25a385e1d60e6a9c2fa60aa7bd17edd",
      "53e80869c6582d7f95ef0a351170736afd1742d0",
      "b161c4aaddd2983a9d4d5a240bd5ffa84b36c4e7",
      "75b27a209fcf6ae715529504f9e6e392666de8be",
      "1fd4b505743f03f9f35327b219d28231a0c3796c",
      "12e5c9f75d772a59c61420d8c171b00f15efcb3e",
      "c23d9d44e8bc68408cea9f305d1f24d915bc0d0d",
      "22ff0266d707d8bb31eeac6a009184fab6501df5",
      "e5b2e2a284db5ba7c2c011daba9769d2c56b6586",
      "28692beece311a90f5fa1ca2ec9d0c2ce293d069",
      "ed07dcd2c7dceead7b2db75eb38a350611865a50",
      "ffdbd7f0b03b85747b001b4734d5ee31b5229aa4",
      "f2885c6a25756cf81aa23b41bc62696a5be5c94d",
      "85e7d63f75c0916bd350a229e040c5fbb1472e7a",
      "b68b2e81ae2de647394ec05ee62ecf108bf2b50a",
      "0d67d3ddca1c4e370eaf1e99ec674f612c39c66c",
      "76c124786ccf4263e6403a15a8e350ac28be4e65",
      "f5623cd36228c0606c1dbcd3ab034df24c58312f",
      "4f68caebe510a0d737759ee648daa3de4fc98627",
      "ca85cdcb363ac7c2ce912093a4b31045977c3a69",
      "90abbc2cf38462b954ae1b772fac9532e2ccd8b0",
      "a87f0bac2ed58e8a79d33d0c1cf81c6407cd645f",
      "aa63ac11aa9dcaa9edd4c88db18bec87e0834328",
      "789a7069d1a2d02d784e4821685b216cc63e6ec8",
      "3077db8e0c4a0acfb1295a42228505f8e206145c",
      "307c5103c9ecbfc7f11f120d8ab9f33b24c6c650",
      "c2d40522eaa5523d67a0de5e4098e7031fdccb3d",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "efe1937ea1716eae9eb3500c51a9354980234839",
      "3c2de693591a1dcbe841dd570f8e108dc9f084bf",
      "ec936b808e0fab9281c050ad4010cddec92c8cbe",
      "53d8b356551a2361020a948f64454a6d599af69f",
      "a0033c2b38d289fd71194eb830b14d0db8f5a18b",
      null
    ]
  },
  {
    "paperId": "d3dbbd0f0de51b421a6220bd6480b8d2e99a88e9",
    "title": "A Survey on Graph Neural Networks for Time Series: Forecasting, Classification, Imputation, and Anomaly Detection",
    "abstract": "Time series are the primary data type used to record dynamic system measurements and generated in great volume by both physical sensors and online processes (virtual sensors). Time series analytics is therefore crucial to unlocking the wealth of information implicit in available data. With the recent advancements in graph neural networks (GNNs), there has been a surge in GNN-based approaches for time series analysis. These approaches can explicitly model inter-temporal and inter-variable relationships, which traditional and other deep neural network-based methods struggle to do. In this survey, we provide a comprehensive review of graph neural networks for time series analysis (GNN4TS), encompassing four fundamental dimensions: forecasting, classification, anomaly detection, and imputation. Our aim is to guide designers and practitioners to understand, build applications, and advance research of GNN4TS. At first, we provide a comprehensive task-oriented taxonomy of GNN4TS. Then, we present and discuss representative research works and introduce mainstream applications of GNN4TS. A comprehensive discussion of potential future research directions completes the survey. This survey, for the first time, brings together a vast array of knowledge on GNN-based time series research, highlighting foundations, practical applications, and opportunities of graph neural networks for time series analysis.",
    "citationCount": 177,
    "references": [
      "bad11c8c673935ce207afa87a3a1f298b7e64b17",
      "c2a91d928f65f0861a8b8d83d9a086e5e9a2a8fe",
      "6faa72a1f130b4ebaf6ded0c381450713b014926",
      "4defd1fd653b9558c2749c75208056c6ad979542",
      "f0dbc5dca9dc38117f95d77a88f63447f9fdcb01",
      "af692ff8748681675954159fea4a295c8710b32d",
      "640cf0c0430e1c757eedc7ae8f9207a15e5bdb2c",
      "ee96bb31193ae5707a59d55c3c589dfe947fa438",
      "eeb797bfdd5efacf4ee7d90b9b9fb8f8eaa4cb14",
      "5b038c1a93967072cc76689fd805e756f804cc42",
      "1a2117f7aa7798073799e994031825cdb7d7f28e",
      "3933865a11b5bbb22590c711f18c0a3c95415ae4",
      "920cb4ce743dd0cd0b25c2f4d80107dcf555a5f7",
      "116c1eab038d7c5d3f2ff3d1103cdd1fefdd2ef8",
      "eb46fe40562fe20eac559174dacd98614d80d1e4",
      "1725ad1d8cc0e539ac5d0a85657d5c95b4538c5e",
      "9e8b7b0d4c628c12b6a65ab56ac5f33a35eff2e6",
      "459f7110dc6381b70c354b79857a1a717887be5c",
      "44b93cf3b9c14e3c604eb5a8985eb8b88b4b6a4e",
      "7cdf8b98c4acd00f1343f1026be7ae68511f52c8",
      "9cd5c7519a9484d33abdd7ca220eb1d38e94d504",
      "1cf13ca3244f78c3bbba49bfe19836b671ff3635",
      "b8faa6683b9bea99f87387a6434eb064996007b2",
      "42f71945ca31629b4b121547755a5768d8063a6c",
      "52b3adf3910c8aa575e45930a92db417269b0a07",
      "de11cd83ec2b87beece8dd902d864263eb435b1b",
      "dd54eae22139ff5a1fc759bc967ca0fc235d9787",
      "9febfa982ced9d4eebb4fb8082a620b2b566c976",
      "0a13f051887d7234296778d8aa686c34215360b8",
      "0b73bbe2f9910ad4fd8b125478bf521cedb088e5",
      "69e5e4f61a68d5b39f889aba5514673631673cb2",
      "0b5502d3a49f2caf5db3ffded87ab1d071ccdf35",
      "f9a7175198a2c9f3ab0134a12a7e9e5369428e42",
      "804ca9f2f43a734cd30acd57e93ef71a66fcff88",
      "252351936bd6fabf4b6cd2962fa0ee613772278d",
      "3ac492a90b03cfed83a00e6005eed37d33fe7fcc",
      "f44e98e622a53c976012bcf507ca770981fb4eca",
      "ad36dd87c036cd02f3322856911db063bd9bbcf9",
      "39dec40cf83071f5824fabeebbce6d813b0f40ce",
      "84871a1d5d6c734b5ed1e4001c0b846ab6727f3f",
      "746bb45433f6b24d3ae64d6cd51c4e9d00a0ffa7",
      "a829fbba9909b29735be11fc9e3c804da2d40b13",
      "e2a83369383aff37224170c1ae3d3870d5d9e419",
      "283de2b58c8c79c213feec9c39a9d29b673c9634",
      "3416e3d6fd1e0b2b74033928a1f7e3d675aefff7",
      "bd2aad6aa8c0b257a0ef98404f58dd541e27e774",
      "b8662ca18eb9e106f8d30134ba48120f8bc71ef8",
      "9bdbfc7762cd6c66c693585db07e01772531b0b6",
      "afd26391e51ede9af9c6072f5c847f0c889f9969",
      "783006879568eaa7e3c200ef7abeb9c35f013c60",
      "eb4d69db8c257604e2c3e3cec53a4fcfd0813ab6",
      "29e9415c40144e0d829aa5bb2579ff110553f2d1",
      "a8047a50456b20d7dfac2ee564fdff8f4e2ac4cf",
      "e83db42bbd0a7702eff6733c5f662b324b568be2",
      "dff41edd8c62785d04371a23bdc3c273f8ca2729",
      "3ea31f9b80bb69537f11f2c0e7d39c97d0742e3b",
      "ca4b56aa674bba3c7d10d1645cc31cc3a61fc0dc",
      "bd612dd8d3b27ebb7a386f5f2d7215c63dd8675a",
      "dbb03264bd710ad5167fa0eb82a14728a6479e35",
      "336c30da869640a972f441bf085d4de2b72c5929",
      "279cd637b7e38bba1dd8915b5ce68cbcacecbe68",
      "e65d738fca6152c2eddb7ac44dd80b72fd8f5273",
      "e630da9850e2f62a4f2a4e9a3ed59c5d7e3bc289",
      "c56100ffa07b5a6a4ef58d796a6f915149821de5",
      "4cc5c34f17ee1cfa57ef79007082a1b155319b56",
      "67ba5d149c810c903c90807a666956c88dbdb20f",
      "4faaf38b55cd32db921fc4736ea686081362d72c",
      "5a28ab9289e600428a3113bcd8d671a17b338385",
      "12dd3ea6cd7041aef237f63c03a3e90fdc16897b",
      "b9830d64bb2cf35197b2597b030da05f0fe66dea",
      "78f67cf82f3fd20ee43b4094c5b113b0bb78f72a",
      "537fcb1a77e5e39996a524d0f14bbedbb8647a70",
      "3c5f7e7ee0ab7413ba3bf8ad3400810da542d617",
      "ed9f12b8322b87bf7e9f119e175feeb357bccf0c",
      "13e45edc24a6fbbe36a51255d7bc1805f34b2b4e",
      "46704d603673dc6820ad61e0c88dce5dee06a409",
      "bc5ad881c297594b7bdc0c0fa162937508e622df",
      "d3c2a4f0d34cdf680bdd9f8ef391d8cf8fd0705f",
      "5e60dc704e7933e2a3e83512f345bba0debfe3f3",
      "bd8668bae70d41e8db425808a1f184d4214fc4b5",
      "b18800ad59eda88b015cdbd6bae3f133350f61b2",
      "07bbdfd52ad37643a95ac2f20241c2f389810195",
      "f6ac476cfb06ab77835c4b99f78dd4448f9af916",
      "cdc5950eaed59f0f4a3fb747f4f8d4e2f189e0ba",
      "563aa8b3ddf38bf6770e4677e3172de30211615c",
      "df305ed70761e89f06e1a60cfa1e85e6d70d921c",
      "029377a5e4782c6017c4b424e8582ee733ad4a47",
      "b17d29f643e5bd03616b1fe3fa7f67d06ac9c905",
      "877b473b2015fa2cdbc7f0a060946706890a1ce8",
      "f63e07e0d83f854c0e12235a1f7bfc581d4318b2",
      "41035f02442bd83cbac167fe295be2aa2ecae40d",
      "6ee56aca9b76f3ce412d944cc38c2bb6416f8481",
      "f8d44802ac8190864c61c9aaf4a8b450261873ab",
      "f4310279654d47ca781be13d3d540b9c0451d9c0",
      "a092b7e51c21d41528ba49a339efaaf81d72ca7b",
      "e983ee5022028205f30ddd9dfc4e5cd8378b3c3a",
      "4b19af73214e215a2d7f4a3f43c437b3562bf9d1",
      "5b1978e8284c8514165938bff6e3276977088f94",
      "308d53d9dda77f8eab4691cf2b30f8faf03108f4",
      "efeb4d5af4ca746a1e30cbe74a809276332832a9",
      "e3e721fd51a5940273759c5058b2046740a54d5c",
      "9e62c6049196990370f2c04c2d0a28dbbae76692",
      "c20dfeb736b9a7ce2178a1aac8ded55741bcb44a",
      "8208f502bd21a6e44f34f72035d6361ccfa99670",
      "37d59d047dc52eb6efb76df3e2b6cc510148ed90",
      "0d01d21137a5af9f04e4b16a55a0f732cb8a540b",
      "9d8e36b1145b6e9e3c358857e3b7a46dbb2b9a96",
      "d45b4bee33e5f8b3dff8a9b144ab58e01e1425a2",
      "21913eb287f8fc33db8f6274fd2a07072c4e11eb",
      "1bd79b2ef83d4c0cb94a1f085d30d9211ad5618c",
      "252d1a19390f773af9bbe8895360cb29efdecab3",
      "8bca092b7e63d43ae4369838c48caf0e4d399038",
      "4d7560594c26e6c87a385e4751779192959e8e34",
      "88370094180b7dcd2b9ffe49d0b6e46d1cb23c32",
      "6b9c604ebbca40502b604b066043ace484fb0266",
      "4ec52947008df94ec786838b36b4a3cedb8b6801",
      "ff410fd2c05a90e5e64e9560930de4b27d9e596a",
      "d09608593caa20b79a8aaddfe19df7e31513d711",
      "1b18367bb4fbf1acacf94c878311388349065111",
      "ab84c5286a1b67abca97574710cf1a4562c50a2d",
      "b02a5aebd9598ddbb2b4021b5576cedb5519d436",
      "c25975cc81949931f79ffb135354c474681d1ccc",
      "ed4087f6e8d77452810979f58246c5b2ad846cf8",
      "80d7b9180299ed1954dbc3acde4ad4efa8974e0a",
      "0388d4ab76c669deacd35e4b27634bad53afff95",
      "c83ff105a418d3ccff6f0496b3bee84cd89e9a97",
      "107cef3e8a6a6a6f128e87954812bc11df2696db",
      "8d6a348c4b00da0c30f9f5c77619ea40e441652b",
      "6ef74f20fe6bec9a797503acf0b6fbc264a50141",
      "a9958dc87e6cc4425c5d91d59e6ae4cbd2a2772e",
      "4755b49e44a453666022ac47a0706802aed8ec94",
      "a43c86792e1e36fa214829c71c37b71305f2f471",
      "89e7a13747ee2536986175ea8380a5ab99ba25cc",
      "a51d5cf63ccde7bd02bfd56f3faf8a938287289a",
      "057433f19814ef69cc79f9f7b7480c4866a836d8",
      "455bfc515eb279cc09023faa1f78c6efb61224ba",
      "a46b06a4b8b4deecf96a4e42cd19b4696f999e66",
      "d420253d38e08881969ed1e3afbe6e1ef3fe1368",
      "170868ca2558cc8e903a360c8023e66a3f8bafcc",
      "b679a408acfacc416b021c28ba79a00767fd8543",
      "21d54922f3f9441d9fb1d05925d33ebbc60e0b12",
      "9be29f6d32358b46cfcb489e52e13c11bc1172ea",
      "43033640630a3fb4217f9e880ebd82dff1b96785",
      "396b9f2ce7f42c922e49e106aaac30aec257d683",
      "e9b4aeb1371256aa5cf907621935b40266318e78",
      "d7adcb62e45c8b0fd4a97f45ffc8fe3045f487c2",
      "86efd3b30939b3b88fb7e268a57e0ce406b39487",
      "f5b78f7fd6505a4774756792c940e4ca1bd2a39b",
      "190a980c2432d8b7e495747ca8e70db0c6ae1ee6",
      "b40e45a3a6010e12d0abdb8402772b51bace9915",
      "076a6b7e73f33fa6c56698ee2935a26f1c11c305",
      "510b5b370211d2d85d43475d28bfd40fd48a6a22",
      "c152106f693e264977c3a8a095f3779434a8155a",
      "2e08a508fa9c6ae7195aa14dfe6c9e695e19aa33",
      "24fa0aeef63e72445312993ca5dfd51dcff8f487",
      "87fd0752c1befaa3710e91b7801f42ea32f98386",
      "43ea60953d675c3daa8cff594c8525ec513876b7",
      "4b882905c9602d25e28b59dd825d62e19d5ed9a7",
      "1f79005aecc269af7bd1c03cd09b3a67d934f795",
      "6c26f91480e7b281e4123c533ad6f123f9519e6c",
      "21d2742e38f7167354dafcf7f565d3894b31d008",
      "c7f20ff82ea0aad63aaae0cfeea0c0710decf93e",
      "1fe4590e1807c61fc416612966010123036db3e7",
      "aeea29ad352a04e74b6a4459e7328aa6e904486d",
      "caff74af9619f216043aad62009944a07a616b9c",
      "914b71998c8fd65d65bf7cea417a13a546e28acb",
      "9cc7134dcfa77a4612be1166a325de78fa96113d",
      "110419f31d38fdf7ffeaa30df3b8634c5f511c81",
      "0105ea52b7b26da000082549e25c47ebbf4ddf12",
      "0a4d5fdfaba62390b25c725badffee524bbcf0a6",
      "dd45bfa7f5d75edddc5d999334f86594334cf4bb",
      "605f032f50df28575c513938cb5ab729ae950fea",
      "95f5870b18d5f894e4f6ec8490d1a39e0963e79e",
      "981a3305737aaa09e8e1aa94565fafd984a7dd92",
      "d04b59a9ecd60698aab402288bf9070640c95dac",
      "a3e83028c536616ca87a2b48430cf5139bdf4171",
      "e06501bf530025fc51ca8fb44f37fb81554e7836",
      "e259ee075998eedc0b0c91c17769bf9dffeba46f",
      "8ea9cb53779a8c1bb0e53764f88669bd7edf38f0",
      "e4fe4dc802d7069fc909ff4d84f2b5bd8446d8e3",
      "bad3534cc797606d1fe3cb09713407783e77cac4",
      "2fb16966229a3097598ccdfcc9797efba0b93bb5",
      "722136f79766b203bef8ca71fc9ab8adb2a79646",
      "401930b2dc738a5a67d136bc9a2d04461c5bf93a",
      "e8d9bcbc5a3eecf5f442c5ffcd1fae9f26be8059",
      "ed360bb72d67d7ae7aae80841137cb9cb34d6978",
      "24cff2aafcd66e1b7be4f647e478e8e73cf410a5",
      "c5826aec6709f12940307d67bf5ea21ed71da974",
      "fc1cd5bee2f178771423f86ca76cf90326e9d631",
      "60b659ad0ff362bded0b0ccb6d84f99a14ec9c78",
      "7d09fb081b32afe53b7e54c77e7982c0ec668257",
      "56e14c5f5c4d927bb12278d2574d1202a7299542",
      "c88ee84b150ce0d3be164fd4cbaeeda7d151e3b3",
      "2f6cc6d2e46f4bb5de1907e79417c4bbfcef5582",
      "f14fc9e399d44463a17cc47a9b339b58f6ef7502",
      "d9f5ec342df97e060b527a8bc18ae4e97401f246",
      "0ab86ca0eb16fa873ab85927e3ea9246084d6b51",
      "645054d31fa26b29bbfb0cf73b75f8906c359415",
      "8d24008a4d913be075870f8df0572bc24ea83ce4",
      "6c996c6271f06d16f0d89a807070e4d8e35a201f",
      "100a6c5f486a5e32c0cdbfd60938e280c9a4136f",
      "ffd3b0192d5c03689d8393f44708cd5a835a256b",
      "1e1f2753a5d8965d7bdc528a322241d042b03994",
      "928da953f29a5efa3546a75f38fc11f308c35d33",
      "1153f0730ffda16ccec008245c14481d6726fd1d",
      "c3f47d8aeeb21ba2379481f20aa8d298a5a55c30",
      "2051548f7681c96d603de932ee23406c525276f9",
      "526bfbdb0affeafd3a91a5b9aec84aef130d0c6c",
      "c977bafb6f6f431ab2a907c16e58e8052acee770",
      "d999defb346e2ea528ca10bec7279bed1114d490",
      "8611d3666f73011662671f48591c076959ee7383",
      "87e77ac0c054abddfef9cd8e579f10c8559217c9",
      "b4fd73a95b4b102917589b36d4b9c73b9d120f86",
      "ae9dc3fa8859651d6d4d502b702c509a1be969e3",
      "d61f58df7495c7243252dd1aa43dbf8bf58c9500",
      "248e4c2f6031eef8695fb3bd07eff1f5d19d19bc",
      "8b163b75a6b833911c4e958f8bd52124205382ec",
      "cf6714f313bff58fcd5a95a893cc2f34331a24c8",
      "c04b328d50dd48ae09ae3c087aa6c97b54178eff",
      "2c3d2a46f8e6e496aa62c4d24b8a6f4a24548190",
      "30d65fbc8d71ac202ee8d7d5f0e58c63a6c6a957",
      "06516a7a2f03af32a819bdc5aeaf152536484095",
      "c634c1021ca7c0a74b73d9c74eadb3aa88a839f4",
      null,
      "e8f67038acaf6ebb90a7a1a8ec551a9d35dcf42d",
      "5c126ae3421f05768d8edd97ecd44b1364e2c99a",
      "2aa9a9bb733387aefe2b011053a99e6d79d2d3ad",
      "3bb50191b712e9dbfc4dbe7a6fa45b0a321caf3e",
      "49b5202408c901dead51754886e7e65e2c1f6d03",
      "75e924bd79d27a23f3f93d9b1ab62a779505c8d2",
      "a5d5aaf0de62f37b23251aed9c8266de4991c33c",
      "31603b3339f4da5bdc6b7de4231bd1ddfb32a50a",
      "02d49b4dbaf8c093034918a76648fea53961753d",
      "a8f69ae2eed2701060306da5978ae238bbc94bfb",
      "4a4f84992b4ee8331f1e3189f6f9b0437214035c",
      "19f8366278c7f741725d48f457f63b0107fafab6",
      "6f0b46b751c4804a9981b6f5e996aafa3d58da58",
      "936448ce9e97c5ab2818e6d68662e4fc0ecd7f58",
      "98f2105a2c3a2ab65070296cca8fdbda2aa61694",
      "f420663fe8c69ed5ea5236201a1f4c734cd145a7",
      "b037a122def7420346728e3b21f549f34408feb8",
      "6c1eeab447252f5897209ca50abc863ad7e83f9e",
      "8c3c65d77ac0c6bf12fb2afafe8d7a56b6dc2c01",
      "429173b6033ce240e0b5930379417f703d0e38fe",
      "4f40af0d33caf0144340c494237e5821687cb4e4",
      "2e3a86c4b8f6883b371f718eb0a35857a6bf9b95",
      "134e505f0562a13405727343206722bfe529be0d",
      "bbadb704f71900c64920b36559a7cbb3d767b265",
      "0789554f92e934e17fa63b70c398160f8bc442c0",
      "6ca944ae76b4c71c5940c4172ef8222897d6cd51",
      "8ba1f5b23b54eb56e7fcccb4d7930ba2abe9bca5",
      "73acb9f701b9c76979e3d86af4e54eeb3459a0a8",
      "848aec2e294b5c8d068caf842b920122e07d2f8c",
      "fc41d75288a81dd7e30087480f51821fc6572d95",
      "eee94ff699337681c6660278b2ecf7e6f9774ed3",
      "2deafb11372f085d504db87fd626e478d8e965aa",
      "2a6d160b529272964ce1a6707adf52f3d6ba4861",
      "784b018c87c7dcbbe772374e45d5191bae9938ee",
      "97ebd482a78e6e6c1ba51da5e1b2f8e7640cc8b5",
      "b631ba962b4403a9c0fd9cce446ef3b1e21ea059",
      "57784e5db3504d549d16382de8f7f4ad222b3d71",
      "200b29987a7967b8d9f4aa6e8b1bc12b69e01aa2",
      "399abad978f4e0ed0e5628023634f0c625c9647f",
      "e6d4b8cddb6fcfc843dccab6bc9945ebad25df3d",
      "b0c65fd9121f344e12eb4c25d8196e7697121bac",
      "440d248d148f7e36dad232e48f1c5c1cbc556d86",
      "06b8e82542d1873928d007548a23d3b77daa11f8",
      "1939f4d2b77b1c9cb834d38d76b2d0d6d63de471",
      "0f8332fb651bf639ab110c65067ef2225f49eea5",
      "4b388c9ac1a16f771c33ee08c0c8848ef66d3fb8",
      "36cf500079b82e3adf4a3afe3356c1c03426bdcd",
      "a54c647f6db73621ec496ea86355726161c0898d",
      "329b84a919bfd1771be5bd14fa81e7b3f74cc961",
      "fae129338c0899576524506008427f64477d3967",
      "5c2367ff962762905a2dad774e498d47e3e76021",
      "05c4eb154ad9512a69569c18d68bc4428ee8bb83",
      "54be361ad20a895831dd19f70712c885c94a6289",
      "baa02e5bed49b94ac8c880b79c57530e7556a81d",
      "ab9fbb766303ee1a9c30635f8625cc3551c0fa40",
      "0c7e1338a9c7914a3b9a5bdc42b457b3f272160e",
      "d8abb8206b913d185b4bd406880131c13759a6ff",
      "4543360d6b6133d143121eda079cd4b7667d2277",
      "510d98681e5e85fb1265513728f16e2543ae1b4b",
      "5d1d53c671b20db116ba8c91c6446bb4757614da",
      "1c2efb418f79b5d29913e014a1dfd78865221c39",
      "449310e3538b08b43227d660227dfd2875c3c3c1",
      "a89f0a78f86077864e108a1bd2c4e670c85907f8",
      "6354dad3769ddf9d9537c8a36137788721072a58",
      "8ce2e261d1cc28d960916886a7b72a6fd2585f47",
      "533193c2a907d557e0de55ba9f5fd1e3ad6e4984",
      "ff18ac20c66f848ed863ffa5c09fcb4cc7f4cf3f",
      "f7cd55c8b39b2627233253f12c74933833d293ea",
      "839c4dd710ae7a234424aeda2f1423e0ce61bd5e",
      "67628543f7ae51979acadfbb8860568b25f263da",
      "2503dff90685857ce7295e37d0045e2eef41c8b8",
      "bc9293bcee13cae5cff8a088f4038c4236decd42",
      "4df03fdccfdb6260511f8dd24b842a10af68b0f8",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "a60c69c2fae27ebbb73c87f7f2a4765556bd7f9f",
      "72edcb3788f9c141a3ed28e6d36f75ca4977d27e",
      "9ba0186ed40656329c421f55ada7313293e13f17",
      "868cd1b90497f5a69ad0d24ec0abbd19d9ab7d43",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "d3229d6cf3738b31ee23e815e2a8c799df5c82dd",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "4733bd02af7507093a4012eb8bc50698191532f5",
      "76624f8ff1391e942c3313b79ed08a335aa5077a",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "e1ec8337518603ef633e0270cf99aee81dee83c2",
      "5f6c1b0a780cbaae92f6169312b7441decc9d6ef",
      "2c7752c6d8015293ff0914f0f827225816513b97",
      "ae42c0cff384495683192b06bd985cdd7a54632a",
      "3b421dcebe21bf45c1930b948cfda7ec95b55ac4",
      "210f258524deabc3d08cbbea4e4ca5c2a98f4846",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "09ba546e598c4bf84316e2fb26d0eecedaebb4e6",
      "0c413d8af5e31ae3f210b509087148c7abd58dbf",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "bd723bc768baa78b7bd3e6f28a401d6d5cfe87f8",
      "24a03ceddb449112a6fc9716ed2562a7acf24850",
      "818a236f573431aab50969cde4ced8b3d48a1deb",
      "18b47b83a373f33d6b902a3615f42c10f7600d72",
      "fb40b7d4a9b7c1040173c0420b69ccbb7bcdbe5c",
      "0b72c321cd990df3b8960fc68e482d2f9e1834ab",
      "ac3ee98020251797c2b401e1389461df88e52e62",
      "9acc51b06f54b07836fad4cc24633187dc21317f",
      "7c033e85f3c58e1ead65f43d2f6d8f7d0b49b478",
      "39e223e6b5a6f8727e9f60b8b7c7720dc40a5dbc",
      "4dc1c7699b98cea7af2c457bb5647c497e7d0c03",
      "45a33bddf460554b7c1f550aa382d63345a20704",
      "ef8458353c245bbe3bcf81b055fe5313b93a9f66",
      "69e5339c0c3928a354e848b9ccf5349f6397e60b",
      "c5b46a2c993afc29c32f85d1394adb6c7628fe69",
      "41fef1a197fab9684a4608b725d3ae72e1ab4b39",
      "a5e1ea32391b75b5d467fc4d2a58a539f4834a33",
      "027f82cd386bf004611cb4e7c75b0ef5f52228df",
      "ee0c3888c8e918ee669a9efc59094add6d72a68f",
      "a244c47a1d4a8c2894b22807df8c7eec16cc110a",
      "79b4d585597963fdb627176f40ee4631a00cbafb",
      "7fb7364cf5f9bd48a9dd3a92a5243aae128afc24",
      "a7c828184693a453a6c2867dee233ed054b2012e",
      "9f09561af59a8e7ae127443b6134c86dbebdfef4",
      "2e9d221c206e9503ceb452302d68d10e293f2a10",
      "f19b99c04b09ab5d45040cedaa3591af6ac674d9",
      "7cd4e19b3eeecf086574969a2cc9d5a4b987275b",
      "63fec86ae9c0bf2f60eeca4dc0ddf35e905eb9f5",
      null,
      "cfc21dbbdcb4c50c553d1e1fb0dbc69f61ce1d30",
      "92c1c49b490b47a16fd8d54ed2284fbd7a01201a",
      "8b1420ca6063e325b3896f260e8d9899e108ac8d",
      "71423c75a47c1caf4d5ac8548b2f076c99a9da95",
      "d5f5e8fddb2dbdd912b5baec11c74beb7b47095c",
      "59670c32a94083e2211c060f3b9436cd3f41d5c6",
      "8eaae9e9946be9b12f58e94ea875f6ff48c18d3c",
      "2e0da34e67d26aebcf7f1c1c541afd5a60523480",
      "c3c94ccc094dcf546e8e31c9a42506302e837524",
      "84e4362fbfa6222b50081dc1d9e1e39b6e8c1e8a",
      "ee8d0023ec8e4fc6df19935a94e0d186432d0239",
      "276ffbc0143fe5ef5356d9dcd7d840ea3562c22a",
      "448ea20c2b353ecf582cdbf3589b21e76da90f65",
      "f45e441b34c8b6825926b027fd440cedfa64f9df",
      "e4a9a06f0587e3c156164cd89666668a991076e8",
      "36905df02a590f4adf0483ccd2c0319670ea53d3",
      "acf87283fa8ae426f1a4987b345b401bf2913f61",
      "b7b294eff0de542a7bef6a7b16c0e75ea01e48fb",
      "64ec282f7a5fcea23233ae485f00c469c4409ed9",
      "0862acb0097977ebc8b9c242b48735cd39dfc72e",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      null,
      "1cf321816e71d3cbf7a3b576812fced0277fdfb8",
      "4f8d648c52edf74e41b0996128aa536e13cc7e82",
      "8d0029f5b6e2934b7b509d4b116d9831cafabece",
      "a4dc196c9de90cc50146311577d0e43503f1775e",
      "139ea656fd12cf6d5e3006e09c7c2a891d2aed50",
      "e74fa4bb319cd5f54f1ee358b2a3e380c8189444",
      "544cfb22b8322c03bcc0ba56d86bb8996cd55e95",
      "de93d85ebfbbde5fa75d9f66eee6156ce22b48eb",
      "65ae46eba524aea3766e91bd1005453c87af8ea2",
      "e680f2e90ac0d34c00daa0bcf3428844c6f535f7",
      "b508b1a9bd9350fd6063453cc2e522dfc2e3510e",
      null,
      "e8cf0fad0a9209816fe670dff680528d67553b95",
      "8a50e6bf122c20b417523b25eb06950ca0ec42d6",
      null,
      null,
      null
    ]
  },
  {
    "paperId": "2b1eae2cceb377cb9267b2c96294228d5e583136",
    "title": "GraphSMOTE: Imbalanced Node Classification on Graphs with Graph Neural Networks",
    "abstract": "Node classification is an important research topic in graph learning. Graph neural networks (GNNs) have achieved state-of-the-art performance of node classification. However, existing GNNs address the problem where node samples for different classes are balanced; while for many real-world scenarios, some classes may have much fewer instances than others. Directly training a GNN classifier in this case would under-represent samples from those minority classes and result in sub-optimal performance. Therefore, it is very important to develop GNNs for imbalanced node classification. However, the work on this is rather limited. Hence, we seek to extend previous imbalanced learning techniques for i.i.d data to the imbalanced node classification task to facilitate GNN classifiers. In particular, we choose to adopt synthetic minority over-sampling algorithms, as they are found to be the most effective and stable. This task is non-trivial, as previous synthetic minority over-sampling algorithms fail to provide relation information for newly synthesized samples, which is vital for learning on graphs. Moreover, node attributes are high-dimensional. Directly over-sampling in the original input domain could generates out-of-domain samples, which may impair the accuracy of the classifier. We propose a novel framework, \\method, in which an embedding space is constructed to encode the similarity among the nodes. New samples are synthesize in this space to assure genuineness. In addition, an edge generator is trained simultaneously to model the relation information, and provide it for those new samples. This framework is general and can be easily extended into different variations. The proposed framework is evaluated using three different datasets, and it outperforms all baselines with a large margin.",
    "citationCount": 338,
    "references": [
      "ece57b93c36325d909723564044f06986e5553ff",
      "48b7c2a2431f8fa8b67d693d0f21b741d7d23fe5",
      "6b010e07618eb36abe6def23d94488b2c81ecbf7",
      "f9163156eeba67762a7441db48fe6720106137cd",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "73a87bb0bffb4c8dedcaec38e42d43a98eb5cd72",
      "9757ef31095227cb289af22b0a4010eda754d100",
      "3dc522a6576c3475e4a166377cbbf4ba389c041f",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "2f5250a5b54c5be194f984c3fd2b69029528dd85",
      "67b9b6db06fa91145bed02438aab8773cc029f1c",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "5a60901f3a19a35ab55712b0b79ca5332c7795d8",
      "7c6de5a9e02a779e24504619050c6118f4eac181",
      "3d846cb01f6a975554035d2210b578ca61344b22",
      "18b47b83a373f33d6b902a3615f42c10f7600d72",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "0b749a1ce53c90a37d4b086f7f2cb8b64ed5407a",
      "fff114cbba4f3ba900f33da574283e3de7f26c83",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "10e09b1803d43bcfe2fd2f1c5c71c6d04ba97279",
      "a505e4c2bf30cd88afe483f7541409e2ba5ab3d4",
      "b012256861a72e6d046f454f8d867647c51ced0e",
      "68bb1fcd6d5a4548aab2112bbb505e7e274655e4",
      "43d2ed5c3c55c1100450cd74dc1031afa24d37b2",
      "b1e4660c82951ba19a861afc8be5cf56cc46aaa8",
      "b618f88ebaab51c4d38182e773419478abe44cf8",
      "7c297b36f8ad53a1e387613336886a466e3f0d01",
      "09ddfea0d38687d88780a72a583095274fd0510f",
      "a02ecdabc0e43b37bd0dac32b6b6916ae7ab60af",
      "7fed3e00be2bb09510f5f7cad7ac106e6c94a359",
      "48ddd9101a90fe65e3061de69626741b843ff5e4",
      "6a7364f6ed2846ea2b705336a4c49dd287102a50",
      "b32b190dd927ba041f8859c8188a3dab8c2da746",
      "9c4a953ed2cfc999eef0901d43097f9d2933005c",
      "bcc13a0b04a38c1b7c17dfbd638913f46ec3f289",
      "8cb44f06586f609a29d9b496cc752ec01475dffe",
      "00353bef128d246f21da3076b002a30d7316e557",
      "ebc3914181d76c817f0e35f788b7c4c0f80abb07",
      "37e12ff3d721c9d3e3308a8cd74a56c4362530b9",
      "7e2cd5ee3395539b83b54cd93951637398423063",
      "5eb1b872bd1ded1a293935697eb7f0af37bf6635"
    ]
  },
  {
    "paperId": "6f5b1076ebacd30849d86e5f5787e3d43b65911f",
    "title": "Adversarial Attacks on Graph Neural Networks via Meta Learning",
    "abstract": "Deep learning models for graphs have advanced the state of the art on many tasks. Despite their recent success, little is known about their robustness. We investigate training time attacks on graph neural networks for node classification that perturb the discrete graph structure. Our core principle is to use meta-gradients to solve the bilevel problem underlying training-time attacks, essentially treating the graph as a hyperparameter to optimize. Our experiments show that small graph perturbations consistently lead to a strong decrease in performance for graph convolutional networks, and even transfer to unsupervised embeddings. Remarkably, the perturbations created by our algorithm can misguide the graph neural networks such that they perform worse than a simple baseline that ignores all relational information. Our attacks do not assume any knowledge about or access to the target classifiers.",
    "citationCount": 574,
    "references": [
      "ac225094aab9e7b629bc5b3343e026dea0200c70",
      "2fae42932811ff9307b6b4a5059c2300f3587b53",
      "48405a8e7a669a74aebe577a8b9334776bb9adbb",
      "7f77058976e2fe75e98280371962c43d98c98321",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "6c44f8e62d824bcda4f291c679a5518bbd4225f6",
      "2230c5946b37ab891389a034396a4e2f1830cdfa",
      "90dc22818bd2d97d8deaff168b0137b75a962767",
      "dcd5b17b26c028b574cfcadd0d4e47b8d169ce5c",
      "0526e714f286dd4140a789a03b6d77c2267520e8",
      "43a1be14ebfb5b930cdf826abf212fc454eb7148",
      "2b76b6e766547b3c6dbc2785a084ec3b72cb760d",
      "c889d6f98e6d79b89c3a6adf8a921f88fa6ba518",
      "f09f7888aa5aeaf88a2a44aea768d9a8747e97d2",
      "97f7ef7a5332218e0e9ce75ad5cf77048466ca83",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "9512facd37bba2ff1ece31900c08901bb011f1ce",
      "93100ebe89840bc235c586ddc6daccd262707fec",
      "bee044c8e8903fb67523c1f8c105ab4718600cdb",
      "fff114cbba4f3ba900f33da574283e3de7f26c83",
      "d891dc72cbd40ffaeefdc79f2e7afe1e530a23ad",
      "d396a5d0a48142acdb78da8e59aeeea319d59051",
      "bd5fc28c7356915ec71abafbe86b7596c60720aa",
      "43d2ed5c3c55c1100450cd74dc1031afa24d37b2",
      "2d679de19dd1a04b49a45c42e32697e8779cde0c",
      "e5ca0f1d79a5245ee5ddf6af80c01829bcac7340",
      "04f4085c0126ba29453a582cd1e62e05c8e15c82",
      "3e06c979b01b1c235017495d7d3a2769bb6a81bc",
      "b64e846fe88acaf302248249696c3b7badde41b5",
      "bc22e87a26d020215afe91c751e5bdaddd8e4922",
      "80ab36666842edf03e1c1a68688ba40a3d43c30d",
      "b6b26564df790262abbe48fa18079d9610189b29",
      "8784f905f4f9fb6fa4a3cc9b0faa5b5479c687ec",
      null
    ]
  },
  {
    "paperId": "116c1eab038d7c5d3f2ff3d1103cdd1fefdd2ef8",
    "title": "Graph Neural Networks for Intelligent Transportation Systems: A Survey",
    "abstract": "Graph neural networks (GNNs) have been extensively used in a wide variety of domains in recent years. Owing to their power in analyzing graph-structured data, they have become broadly popular in intelligent transportation systems (ITS) applications as well. Despite their widespread applications in different transportation domains, there is no comprehensive review of recent advancements and future research directions that covers all transportation areas. Accordingly, in this survey, for the first time, we provide an overview of GNN studies in the general domain of ITS. Unlike previous surveys, which have been limited to traffic forecasting problems, we explore how GNN frameworks have evolved for different ITS applications, including traffic forecasting, demand prediction, autonomous vehicles, intersection management, parking management, urban planning, and transportation safety. Also, we micro-categorize the studies based on their transportation application to identify domain-specific research directions, opportunities, and challenges, which have been missing in previous surveys. Moreover, we identify unique and undiscussed research opportunities and directions, which is the result of reviewing a wide range of transportation applications. The neglected role of edge and graph learning in ITS applications, developing multi-modal models, and exploiting the power of unsupervised and reinforcement learning methods for developing more powerful GNNs are some examples of such new discussions in this survey. Finally, we have identified popular baseline models and datasets in each transportation domain, which facilitate the development and evaluation of future GNN-based frameworks.",
    "citationCount": 128,
    "references": [
      "051166529849e10c23d3a493e0e2eae7edf18e9c",
      "d0f4f8fff2bcca4fc8283f2acc7c3c52e8889625",
      "2a88353025b01dfc2925cc3799df6dc11fc52783",
      "c5bd62e75e4b69840304e6b6f1ac56e82ad51555",
      "32e3654d9a26f0c9d2268f0cc34e25b066166afa",
      "1417c899029499679c27dda7383646406c917872",
      "d3c2a4f0d34cdf680bdd9f8ef391d8cf8fd0705f",
      "503fc448d038db46ad1f0c2073a75399478e9939",
      "c073fa0c65deaf18c8230b48a6094bd6feaa0519",
      "afdfc6ced3113d232478b605d2e3de2d2711739c",
      "58f2e76f56c8e638df75f72bf01eaa5bf7e60278",
      "66215209e936a66221af6cdf8235bd5c5fb0a964",
      "2fa53ba7bcbcb11e52d8839c99be527c5d4d0e09",
      "08071a12d4d2c686c552fd0d3be1cbe846e6ebf5",
      "8bca092b7e63d43ae4369838c48caf0e4d399038",
      "223fac75786f02b70fb7bcb0ec0a602fe666e1b0",
      "ec358e18f3c40274c7bed9a7dc0b66c985e8d094",
      "76868f97b3ef929eaecdb08bef96041189c6d2c2",
      "6c051b47d3465465159f728bf55e448cb801b2ff",
      "8053b1962425ae96478ee0e9168512f7141fc6a2",
      "de92b394a06167ac18e35621b2d6f60cb21ee48f",
      "0aa711f8b3dc66e1c233d4ecea138c9cc479e4dd",
      "c1aa3f1cc473e59fd32420ae856580c81c4c5403",
      "c83ff105a418d3ccff6f0496b3bee84cd89e9a97",
      "3bd7484840c7738ac571874f18df7a3a15369a9b",
      "414d1eb840fe18fa5d25181a86c249096dee3ecd",
      "afd0b2804010eea7616272a4acc3035daf1a2be5",
      "8d6a348c4b00da0c30f9f5c77619ea40e441652b",
      "bfafeba699d935050eab53b17757713f30cb3dde",
      "aca7a6733bc3ecd144af5fdf0a8c6fb990b4b665",
      "e16a9f7790c854ca149f652e08e1dcd8a7cb94ff",
      "b624b51e96f269eb6b3aed160aff3f393f5a91e3",
      "86efd3b30939b3b88fb7e268a57e0ce406b39487",
      "235430f9c86e5d78487b9dac602ff5788c629c7c",
      "12d34a768befdb26e52b7a9a3e938fbecd52bc71",
      "006875b74e49c97c3403ea413f905a2334ec514f",
      "d220ae45eca0fea60c5499eb9fb2dc6381b98b7e",
      "bebb458bc95923b61cac1377cf16610e5921b65e",
      "dc655ddcf26e83f2fb6795f14b5c5c8aa51c7bee",
      "acc1150ac0b1b26257c1287084ae8b6ce380b8e3",
      "1f79005aecc269af7bd1c03cd09b3a67d934f795",
      "7f253c959af5f9616870ad690fa6e8b8143f012a",
      "b55bb2b27bd4b99a0ec0459eb2690911b287c7f1",
      "4287d3f9ae40b507eceb9d42f5333e621863d0a4",
      "6038780a1abe2527a83c7652bc31b386a0fe9cd1",
      "3fe4e36b6f20371b914414c964bc424d1b0c4cd7",
      "f2b1e659eef5b38f5da6956d814950bc82a9c334",
      "2a89efdde29b5c0a0d6ed4fa5f2e63aca5cc7818",
      "7edeca3aea6800f78214bd77616a68c0d1af1b1f",
      "e2aa88f95f98d720f200a5aeef0405143f84a83c",
      "35d5c1dd4d51e885a9e5a0e794adadf13920a39b",
      "bf093ee4fea1a1f57a5f83be13e46da2480d6850",
      "1b2fc7dfc81e9f36b504509f87a24d1842eef104",
      "31d041221a551ae2de9cf18692a9b1736fbc6115",
      "bad3534cc797606d1fe3cb09713407783e77cac4",
      "655289aa488769b8b3e91731390c4611d964b8bf",
      "5792baeaff726b2f309224a1506d266ea9582a90",
      "24cff2aafcd66e1b7be4f647e478e8e73cf410a5",
      "c5826aec6709f12940307d67bf5ea21ed71da974",
      "e0c8f5fd2d9a949ede49109549db323ebcf24957",
      "edeb764cca569ff2b37f64f7d92be865b6a7c77b",
      "56e14c5f5c4d927bb12278d2574d1202a7299542",
      "4d3283c50bcf41b9ad7a29a1914714b911b7f0ff",
      "2f6cc6d2e46f4bb5de1907e79417c4bbfcef5582",
      "4b703b80d33e19399221fd7d9fc437f8b33f9d23",
      "08b2ff5176db4dd27dde654e899b561841d47b0f",
      "2ee0426ed82a3bca6bb5c993243377b580068f7a",
      "569e2b511ed344b8d8acac55b7a3ed0d17948a43",
      "09aac6562d736c6eca050221a694f1dc3491df6b",
      "2e92728e393538304555e48a8d7532daf5ebabd4",
      "e3f5290999f73fe3e96a46f96e870476116c919b",
      "b366c9d35c60807da18d9422affbbdd830bb1691",
      "97624382b4addd32004694ddebc3438d038425f0",
      "45f4585f12ed7310c2dbc487a2aa1ba23c568071",
      "1e9dbe5ee557391679132a727e0b921ee24d748a",
      "9de55651621235f3c60f54c3bf35c31598ae476b",
      "3255a5964d9960dc419d1e4e5eb6eba062963988",
      "851a63972fc756cf97d3c8a4d686632c495b0889",
      "5c319a012777e6a4bc813645117ca1d260361bd6",
      "afe077689425a2e82903a62b2c839c2db2c6c005",
      "c04b328d50dd48ae09ae3c087aa6c97b54178eff",
      "1ca279c51bb4e3e7de0c5c565a9e4df8bc9ce39e",
      "3c5feb38cb7e2b6864d37818ec3f0f5955180b69",
      "b26a9991a3afb5c46b7f35bef9ab0edd3d58fe4e",
      "a2add616fc2686d12b9ab9b74afb8cfa8e31584f",
      "7453370aa430c39ea16d4333cce2770b7914013d",
      "3f14c72c88c8cb02bcf2b7541a4de021029a86fb",
      "49b5202408c901dead51754886e7e65e2c1f6d03",
      "75e924bd79d27a23f3f93d9b1ab62a779505c8d2",
      "f39c4f757f0378914052f8856a85fc90956e9329",
      "f38367624b347d100bd6c0dbe566c83a47905086",
      "d766b67868b3a9a97ad4407cd496760698d2a427",
      "f420663fe8c69ed5ea5236201a1f4c734cd145a7",
      "ce44ae8dadf5f46673f50fdb3e3cf1f2535d39f4",
      "b037a122def7420346728e3b21f549f34408feb8",
      "7f4a1baed9f909f527f77e30e051116474fd4017",
      "22cc76c6d9b25facb2874bbcbbbfe781a4d85bcd",
      "4d697261cb2a1928769ab68cab77e6c45e36a83e",
      "9f389e3beb4fb913a0d89fa459f0167d9f7190a3",
      "78cde5c7584925f0cc224be6687e309e20c52c7d",
      "cb7fbc294d9c09244090f39bfbcfaab98433d694",
      "83ed014fb3f0881ad1e61034e3cf12581624fa58",
      "1f6bb4991c7fdaf5d9ac8f1261d3dc7f81dd98e1",
      "72a20f574ebc22b3267aff45b6161d7d79625945",
      "da5d3cfc9898cbf05fdd5a6954378b07a4f8d846",
      "f3058ac35927720d2a229984b10524e36d87d7dc",
      "0e6fdee979d9671b922ef2c49d1d97059ad13940",
      "8284195cf32a24beeff5b1aa262093435dddbdad",
      "cc00a4006a3e3a60594055de14d70e301d99e8b9",
      "6ca944ae76b4c71c5940c4172ef8222897d6cd51",
      "8ba1f5b23b54eb56e7fcccb4d7930ba2abe9bca5",
      "fc41d75288a81dd7e30087480f51821fc6572d95",
      "d474bf3cac3f3824778dbc494bd2e89f6f8e57dc",
      "d39d552539bc4dd65a75ffe04f28bf2b32ddf917",
      "eee94ff699337681c6660278b2ecf7e6f9774ed3",
      "99019ec8dbd2b0daffbef16a6e6f9de6ebf88cf5",
      "b697678fdc778a7ea2be08dbf1db1f421f3b3024",
      "07136393b47c223a0663c962c3eb9fd0f88b5132",
      "e4b4760ffdbcbb2bee36405ba9c9db77433f284d",
      "ac322498cff687e3315604899994befd1aa10165",
      "e989395606abf042c753de0cd5054e4fbdfd7362",
      "a34b6a4c968335c304e661fff03ba5fedde28567",
      "64993b08a97d89411276a1336c7df0b279b895b9",
      "addb9884568f64591c99b229805ee900471e93de",
      "06b8e82542d1873928d007548a23d3b77daa11f8",
      "7504dec665704de67c168f32fc0c424e1e5abeb0",
      "36cf500079b82e3adf4a3afe3356c1c03426bdcd",
      "0f8332fb651bf639ab110c65067ef2225f49eea5",
      "ff835d571253fd167a55c4a1d5da48ed1f8abe5d",
      "d12584136908917f4c06804233bdd881599aff4e",
      "fae129338c0899576524506008427f64477d3967",
      "909da440288c80182fa660d601bcae4fd41c8746",
      "5c2367ff962762905a2dad774e498d47e3e76021",
      "40968cf84b03ba9643278cb6c7c878e4accdb8cb",
      "db63dc894d36167776e8c1e4d2def9f6516fb92a",
      "369eb781ee3e4c82af862c2718c18a500931253f",
      "b17e0b5b5c7e632ecf5f35b0616cbf820382fcf7",
      "0321bcbe98f2686670b7e8da3c13b74d46030c4c",
      "48640ef269ffeb3e19c961de2eeca027a30841d8",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "30b38ca8151bbd5a5ff45bce94297d1248ff58b5",
      "8e7666c21ae8be01ec4a3d794ff3d24f7992d731",
      "9b3f2f45b95df882c807bcb011d2e2a1040d4cbd",
      "47a945986215553fe54e27fb3e5d87b4525fa56e",
      "5d1d53c671b20db116ba8c91c6446bb4757614da",
      "6b252cf10b7d273d65f36fe80a73f0a12f6dbccb",
      "5eee61e47d55ed1ba90a00c91fcb3673d91e042f",
      "84fa9792c29ad32ca1e8c39b3a06a3105d9e199d",
      "9288096eefc817d25c22c31a6e37b5f2a2bd2c4c",
      "c9c47277b67e32e4cfd3c8fb1861029d0259eb62",
      "3364d1375e14481d41a7f9fd78261f9d27e66e68",
      "31b119301539dd5266224bbe2971fbcba3bf1982",
      "3ad88bdb2d5fe892014c89887ff63e307df03aef",
      "8e23d99764eef23b2240150c96768db8e1668a8c",
      "04ecc68f27f8adcd986cf86b89861d0766c3feb1",
      "6cc194b280de062a8ca31ff100b6d740c4c53ffe",
      "bb84147f7b119acc23fdf88d49fe1b390c657427",
      "2126015a0c160795c36ed51e64c66a98bc57f188",
      "c097be22f1e87a846385047346b73610d91fea4e",
      "f52aeab73cf9cd3cca2bf3070cd70a37f45d9486",
      "f7cd55c8b39b2627233253f12c74933833d293ea",
      "839c4dd710ae7a234424aeda2f1423e0ce61bd5e",
      "83b44a37ddf121e660c873e207c2909b79f23469",
      "5855ff63e06d47aa75fbbe86a3e3b9aca779c8d3",
      "6817fc2d953c6913a9e8cf6c64bad1f7eb578109",
      "e1799aaf23c12af6932dc0ef3dfb1638f01413d1",
      "696b3fa5e6b602b5e9f41a08424f543f87906431",
      "88a8a4ea248b639d53e97e450a49e7218522abc9",
      "497e4b08279d69513e4d2313a7fd9a55dfb73273",
      "caa8dfc6bf0bdfd0647650e04c1c7d89efd78369",
      "3d770027aed1c787e3890acc378f11e5d720868b",
      "72edcb3788f9c141a3ed28e6d36f75ca4977d27e",
      "b7ce5e451d5e7683342da4eb6543b673c7561054",
      "9ba0186ed40656329c421f55ada7313293e13f17",
      "2937ffeef1918988485040cad447d4fc9d0462a4",
      "8674494bd7a076286b905912d26d47f7501c4046",
      "bbd7a9cfb0b28fe550c9bfd59d0d1c9d05ac1588",
      "5f6c1b0a780cbaae92f6169312b7441decc9d6ef",
      "cd8a9914d50b0ac63315872530274d158d6aff09",
      "b6fd40d9e0894c96841235d6cdbae2ee7e4a6562",
      "aed0aeb5805c58e55d78c1027288334d7c469bae",
      "6b1793ece5993523855ce67c646de408318d1b12",
      "ade1b1bfe2abefbcfe324499aa284db2b8fc50a6",
      "d997beefc0922d97202789d2ac307c55c2c52fba",
      "729d5c7dc6bfb32e47b5bd24cdb01ccaaf62bba5",
      "2267a6310c634664e2f38fdac49c97e2295c33c5",
      "74b62e5b0295dfd99b7f6976b6478e0045d98e74",
      "0f7ef24660d2524fbda2a3822d070f38dcc239ef",
      "df0402517a7338ae28bc54acaac400de6b456a46",
      "657fbf29ea0b4904a3e98d1556f9acf38dddae5f",
      "566de8271556e8776a1b0cef86a045ef3a92d214",
      "0dca5774930776998daa101e14c0756c136e2e86",
      "26bc9195c6343e4d7f434dd65b4ad67efe2be27a",
      "a549bed132e669b3f581df1ac029f4a09115dc3f",
      "4c05d7caa357148f0bbd61720bdd35f0bc05eb81",
      "3f1c6749edfaf4f89bac38b2d15a0493bd9aa253",
      "076ae2f708dd5c33c3aa89cd9d9c8b232544f142",
      "f9c990b1b5724e50e5632b94fdb7484ece8a6ce7",
      "94deb62af3054c49e7d80bd7eb3ed5efe990fc0b",
      "ac3ee98020251797c2b401e1389461df88e52e62",
      "cea967b59209c6be22829699f05b8b1ac4dc092d",
      "5bd6fb5dea46e7b9a8e608ac95a5470ddae7c57f",
      "64e615720384525dfa317605e154ee259ba1013d",
      "2b535a6bdc9329f89d09e0ca38b3c3a563617978",
      "8fcdf8a2e3cc83aab809c0b3e4fd701d805b8c26",
      "8bc80ccc97902264e9d98c48f7ad36f7dcd61b3c",
      "e36e8ef60a1bded0d1df89e07d0ad1fb354d3429",
      "213f46b27a8ea9a113b2be776695cfdbf064b3fd",
      "9886ca7fd54c33cab95789e618fc6686df58d82f",
      null,
      "356052cf65e3aba8cc3191d11757fc802cd67eea",
      "0be7e4f1824b378477a02a5fd4f1c586d87cb858",
      "46649df2532231b8431a547d0838b1229469fa4c",
      "ad0189d70aabe6a57138a9ed32ec852fae7363a7",
      "60ae609198b793c012ff4cb81c0c347ec893e4d6",
      "75f34957c7adaf9f5bd3d316e1fa0dd0be96ad7d",
      null,
      "970247f9cc45dbbbb7e21362eb90d81c12975690",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      null,
      "d0a28ca315c1201fbc4a8f1467e0555d6d65d165",
      "b90978694d80bf595663904ae36d4c367273f669",
      null,
      "abafcf4d5f1231c05d385dd36ed7fca420da293f",
      null,
      "dfdcf7770885e3ee5f31182e91e602aabe5abdbd",
      "79593b85df75e5e251f8363bbd0f7acaeae82277",
      null,
      null
    ]
  },
  {
    "paperId": "5f3173e24d17b92a96e82d0499b365f341edfcd2",
    "title": "Graph Condensation for Graph Neural Networks",
    "abstract": "Given the prevalence of large-scale graphs in real-world applications, the storage and time for training neural models have raised increasing concerns. To alleviate the concerns, we propose and study the problem of graph condensation for graph neural networks (GNNs). Specifically, we aim to condense the large, original graph into a small, synthetic and highly-informative graph, such that GNNs trained on the small graph and large graph have comparable performance. We approach the condensation problem by imitating the GNN training trajectory on the original graph through the optimization of a gradient matching loss and design a strategy to condense node futures and structural information simultaneously. Extensive experiments have demonstrated the effectiveness of the proposed framework in condensing different graph datasets into informative smaller graphs. In particular, we are able to approximate the original test accuracy by 95.3% on Reddit, 99.8% on Flickr and 99.0% on Citeseer, while reducing their graph size by more than 99.9%, and the condensed graphs can be used to train various GNN architectures.Code is released at https://github.com/ChandlerBang/GCond.",
    "citationCount": 162,
    "references": [
      "9ecebcb5fa57c97c216fdf96701982d1bd8d0b27",
      "11154b89486fd7b41bfab5f8b0e19756c488523e",
      "4ec859621b48ef6738b33b7e31ff06c57d7d2c33",
      "7918ff88695fe7894a972758533e23f09113ea68",
      "a212991f5fd64847fbfc889d4ee8a4b6e097d538",
      "140f168d8f4e5d110416eb23bf53be7ac4d090cd",
      "0e595fe9e18e422d0569a3faad7a32ba3c576e5a",
      "8eee1d2ebf0db9b24d2c6cc501720d6007083083",
      "1f180118903044c4d1b39be35710be7221daf4ca",
      "bf4209bf37f86a1fe77153fcb10eb541c18e23b2",
      "4b776e7f26464e5b230c1679560f12618730dcc6",
      "8212605d274d5e68bcedf990728f4f5c26f88168",
      "f1e5e65941617604923225cc4bf464e370fcae67",
      "7c882a945b51825417bafde8ab05163b443a1525",
      "639206a9a32d91386924f1c94e9760dfb43df72e",
      "21e33bd0ad95ee1f79d8b778e693fd316cbb72d4",
      "6b67b1f55ebad02eaa73328c3989d64c1dc23dff",
      "5a94bcc168330318d3020aa4d41bd73cf68ab285",
      "ff6a4a9a41b78c8b1fcab185db780266bbb06caf",
      "011a1bbb4059b703d9b366468ef9effdb49f4df9",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "49df8cfd358b4b55cfd6e2102a37f1c373442760",
      "fc3e99ebc07b3014f6736a6a7b077edf2f1634c0",
      "5507d267bbf0b4cdb9f893c3c0960a45016f7010",
      "f1964cc1b343f907462cd7fbfaf88c2679d61f59",
      "4e7dd1e79f0f13650b2612325e6ba8d206dc04fb",
      "1e059de3858c90445f8dce8a48cdb16ce3fc2af0",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "7e71eedb078181873a56f2adcfef9dddaeb95602",
      "398d6f4432e6aa7acf21c0bbaaebac48998faad3",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "ac225094aab9e7b629bc5b3343e026dea0200c70",
      "d30c6784b8458d6e602428a6f187c14bf75b2150",
      "058dd355ec60af11048ee49a54db599003356322",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "a6173a01a7dc3b647e11f20e3dca97bb6fde74b3",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "c342c71cb23199f112d0bc644fcce56a7306bf94",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "1703631a938b397ba7e858161ce16448f6046d6f",
      "fffcdd2541018f8dfe806d7db653e36c88d8fcd9",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "b8aecf918f1c729eb2a2fa88da9eb16835daca5a",
      "d96bd17bfda35c9f38f6562eaacd4d54a29434ce",
      "afcb4870d7751e90cc52e6d5a794bb1530fd33d7",
      "cc58edaacecbcc20b8a54ad4f68648415a7b974a",
      "53d12a37bc6ea511e9f59fe153df4bc8abf41cfc",
      "af76fba5018ab3e99bed305853a94d4cd139f7a1",
      "8dadadaab4bffa9343bd599ef031236e57e90f5b",
      "5e8c8dd23f69354c56724b636a19445085ac51ac",
      "d81b53882d265f81d914c80d2f78e6cd9ee7e250",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      "0ca07d5e4668686adb2a653b7e5b7eb4ceb05082",
      "763130b6070e739f513448abe780f48d748faa69",
      "1c46943103bd7b7a2c7be86859995a4144d1938b",
      null
    ]
  },
  {
    "paperId": "569140ad11310f71c5fcc0ecaa6810d12bee3416",
    "title": "Uncertainty Quantification over Graph with Conformalized Graph Neural Networks",
    "abstract": "Graph Neural Networks (GNNs) are powerful machine learning prediction models on graph-structured data. However, GNNs lack rigorous uncertainty estimates, limiting their reliable deployment in settings where the cost of errors is significant. We propose conformalized GNN (CF-GNN), extending conformal prediction (CP) to graph-based models for guaranteed uncertainty estimates. Given an entity in the graph, CF-GNN produces a prediction set/interval that provably contains the true label with pre-defined coverage probability (e.g. 90%). We establish a permutation invariance condition that enables the validity of CP on graph data and provide an exact characterization of the test-time coverage. Moreover, besides valid coverage, it is crucial to reduce the prediction set size/interval length for practical use. We observe a key connection between non-conformity scores and network structures, which motivates us to develop a topology-aware output correction model that learns to update the prediction and produces more efficient prediction sets/intervals. Extensive experiments show that CF-GNN achieves any pre-defined target marginal coverage while significantly reducing the prediction set/interval size by up to 74% over the baselines. It also empirically achieves satisfactory conditional coverage over various raw and network features.",
    "citationCount": 63,
    "references": [
      "a47d1a295d6cc5de4c41969cc447662ba47f32b4",
      "ba4ed1fde7ba4f9453bbc1aa9fd5611371b0dc80",
      "14a5204d6e5f27c825882cc1885691a696c59be1",
      "88e5912da432caa67c153d19108236dd9ac88fdc",
      "7dff3280beed4cef96265350074498bf142c41e7",
      "2169e2c251785288eb9bbd4217922c43b10f0dde",
      "d98ce5a2c3a1bef2b8eb45dc643f9f348adf0ace",
      "b04ea39d5a5787203f03368667953ee5915a5d9c",
      "ba98e89eb2afea1155c65d2ae26903d593c2fe22",
      "a80a31e0b8594daaf5b2034fa1f6cac9d5614fd7",
      "5645f1cc9c3c86091b1eeb58150a68e4f062de27",
      "9630d04188099f1f6e8b08f18c5c38965eb7438a",
      "66ee16c1a274f1c9205b0ef4fbda0b4a8a481f81",
      "7157c8eb81d972094230d28d0817004e3acf4148",
      "3b2f5884e8199544375ddcdb4fa58f44df0b1a7e",
      "445596c40dc421efe2354a340085b43181bea2be",
      "26190ccd4753d6c0d25499ea34475205ebdd8240",
      "167c4607722d10f350c320bc36a5612e72deba00",
      "e343f1517f038da090a78159363d14cdad5ddc35",
      "f14fc9e399d44463a17cc47a9b339b58f6ef7502",
      "3443efc855cebd17d1512d1a703b6e9ee2e4da8b",
      "898178fa298635099da4ce5411564d837998b018",
      "9cd7c6d19dedc5395155492e0193f399bbabec49",
      "af2549305c2839e85367a07db10366670161afba",
      "5e9c41f38a997747fc8b14deefc81a47f73419d3",
      "00215f32433e4e69ddb5a678b3f02568334d67ca",
      "aa5a4433aa08834a69b4afb7917b1c7107a529a6",
      "5eef6a00d9eab08f3071ef19ea3e4b545421e8cb",
      "e1d960b393feed49a37c94dd0d331608d232d53d",
      "d4691aef27ae3c768b90c34ca5d8521d202eb47c",
      "1eb7f46b1a0a7df823194d86543e5554aa21021a",
      "6f9dc6f8519e927d948a13aa7ae0df336f443eb9",
      "ebc3193ae46286f82f741143f5d67891c1625209",
      "7e71eedb078181873a56f2adcfef9dddaeb95602",
      "6f55f2234a002c69001df8ef9108cb86f1dfa506",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "d65ce2b8300541414bfe51d03906fca72e93523c",
      "34b0059f8feb7f23dc88a4a4f177529f8bcb27c2",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "ff7bcaa4556cb13fc7bf03e477172493546172cd",
      "802168a81571dde28f5ddb94d84677bc007afa7b",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "f35de4f9b1a7c4d3fa96a0d2ab1bf8937671f6b6",
      "a7b9ddcc0d316b21f0f8ab101d340ca2fa872164",
      "2730afd38769c33545b981aa4e0a46d65caec87b",
      "636e7dbf3487b8e682d840e9768200b1fde7fac9",
      "1776b5ba5d2b17f6e6a043d57d36126e2af90315",
      "94ea874335966048028fd5a55d6a11bc20bd5442",
      "22415e3d2431ca16cb69e9054c8ad6c9c099b620",
      null,
      null,
      null,
      null,
      null
    ]
  },
  {
    "paperId": "3efa96570a10fecba0f93e0f62e95d41ce7b624b",
    "title": "Are Defenses for Graph Neural Networks Robust?",
    "abstract": "A cursory reading of the literature suggests that we have made a lot of progress in designing effective adversarial defenses for Graph Neural Networks (GNNs). Yet, the standard methodology has a serious flaw - virtually all of the defenses are evaluated against non-adaptive attacks leading to overly optimistic robustness estimates. We perform a thorough robustness analysis of 7 of the most popular defenses spanning the entire spectrum of strategies, i.e., aimed at improving the graph, the architecture, or the training. The results are sobering - most defenses show no or only marginal improvement compared to an undefended baseline. We advocate using custom adaptive attacks as a gold standard and we outline the lessons we learned from successfully designing such attacks. Moreover, our diverse collection of perturbed graphs forms a (black-box) unit test offering a first glance at a model's robustness.",
    "citationCount": 59,
    "references": [
      "4247f45a5730e3bda5836e2bc7941e30f5b91cb7",
      "52bb8cb9cd9c130e18f6dcd6935b8b23d9b470d1",
      "9c582d2e8dfece419fa3a6f6e3490d4fd7369225",
      "10427c888d31f8274d9ad2a80b772e23d07f0b8f",
      "d3759f651e26bffbc4ca3e41c7453d6800e0c682",
      "3328a42bdc552fbfba5dbd5b6c16b8aff26fea18",
      "3de7ce0a7ba0ad2f8d9f3a13d11ff36f5f597c15",
      "70864c48e643e852355f4a79e23baf3614740df6",
      "440e236ddfca11d38aefdcad9ce023d70c60013d",
      "6eedb95160a41b8218ed2d37b3319ef6646f7c9d",
      "140f168d8f4e5d110416eb23bf53be7ac4d090cd",
      "f5d9e5d4b5bf9e6911c9ef763c7144f6793070e4",
      "dddd5dc485ad348fad3ed29832c2dcc8bbe55805",
      "19f2c76be1dbeb8a7ed0db4539f359e7b1764afa",
      "e04ec809a7812db1d6db34d6a972ab9ccd17d638",
      "792a9914cbaacbab1ce2e5de9a7f5eee3afb9766",
      "7eaa067078c96b383f2f2e6f1543cd063c5d6d45",
      "be648fc9f3666511efb4638f3d765909766a3381",
      "5cbc441f83387a5234bcc3f2a4724c1773632e54",
      "a47424106165acd212b3233af8eb5a26cc567b4b",
      "2fce1ef37391cd685fc5459e1cbfcb8490b85242",
      "76c124786ccf4263e6403a15a8e350ac28be4e65",
      "885c6aeda5c2424fb8c464fe2e290d037ad2c45a",
      "400389ca8b23ff77fa9ee96717fe6447df7469af",
      "9bf050287e0cd8df167cc345878335fc5a8d045e",
      "435bc42450259a22cfba92b40217b8d26f4a7ed5",
      "3336c824709d19c47c8fbf2a741a02d0ffb17ef1",
      "f357b515af59b9d60bfaedb8028633c9033ec708",
      "73366d75289c5e37481639fb54fdee28a664e2b3",
      "7168f3bbd3b330af95dd698a86fe6ddcda5d6bbd",
      "011a1bbb4059b703d9b366468ef9effdb49f4df9",
      "0bc468fdbad864699b4cf48ded94709e6d0c0ce0",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "de9ada4faff476986f698ebd3e5a4eb34ebf235b",
      "797d6b26a1a4aa98c8bbc93533707c65ad189c11",
      "58c143069444c7dff4be53531a47efefc40be497",
      "3aab8bea2ba6bd7f076e6f92a504a1e322ca64b8",
      "cf95960ed89fb3bc6be6250bca2dc23407bd578b",
      "d8ad2ca5cbf4882e41bfc336c5c75de8c634869d",
      "f5252075bb34666863cd01cc82c2d941d4ffe6c6",
      "341880efaef452f631a4a5cd61bef5dae47741d7",
      "8d86b1b090fb084bfd0c3613dd043e83526b91c5",
      "e5b38b8d3e9ae23a3ff31ec775ddcd6ba6182774",
      "26a0e0d17910c6676fcfa1cebe0cb7f5cd17080c",
      "a67d7ae110bd2a8f6cd30cf3572b7e1a0e64b097",
      "df94f2fef0ea5bb73d9bb40b7b28f7a55cb1e1d2",
      "6f5b1076ebacd30849d86e5f5787e3d43b65911f",
      "0349593412dbafbcec736da8c2547e94fa702607",
      "1b9c6022598085dd892f360122c0fa4c630b3f18",
      "6c44f8e62d824bcda4f291c679a5518bbd4225f6",
      "651adaa058f821a890f2c5d1053d69eb481a8352",
      "2b76b6e766547b3c6dbc2785a084ec3b72cb760d",
      "99cb08c76c120599abd1d1637e32aaf577f38d39",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "df40ce107a71b770c9d0354b78fdd8989da80d2f",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "592462425a4d23547dd0f3c9318350e5dcceb1a6",
      "721d0265fce28b9b8b738892c28e65206c9224d6",
      "08760a7df8448d3e3ec3e07891607824bdcbb388",
      "0513503cb41d0d261edf36a4c5bc99757c3e83ee",
      "128d1949a434792544cd731ca2320e88c280964a",
      "4b7f416cced4866e2d63a99983b9a12388c2b8f7",
      "ed948356e462804a7d629a6ef9162363a83fabb5",
      "89d502f4f92535f964e6552c4f9d4a8f52844884",
      "5cf41e4288a64f13be9036c6eb9739b2a975f4f8",
      "837d221b5e5c612e3667174b65c81fa1239247b7",
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ]
  },
  {
    "paperId": "4ce9c20642dce5eb7930966053a1e3da4ef617f2",
    "title": "Graph Neural Networks Exponentially Lose Expressive Power for Node Classification",
    "abstract": null,
    "citationCount": 697,
    "references": []
  },
  {
    "paperId": "993377a3fc8334558463b82053904e3d684f29c0",
    "title": "SIGN: Scalable Inception Graph Neural Networks",
    "abstract": "Graph representation learning has recently been applied to a broad spectrum of problems ranging from computer graphics and chemistry to high energy physics and social media. The popularity of graph neural networks has sparked interest, both in academia and in industry, in developing methods that scale to very large graphs such as Facebook or Twitter social networks. In most of these approaches, the computational cost is alleviated by a sampling strategy retaining a subset of node neighbors or subgraphs at training time. In this paper we propose a new, efficient and scalable graph deep learning architecture which sidesteps the need for graph sampling by using graph convolutional filters of different size that are amenable to efficient precomputation, allowing extremely fast training and inference. Our architecture allows using different local graph operators (e.g. motif-induced adjacency matrices or Personalized Page Rank diffusion matrix) to best suit the task at hand. We conduct extensive experimental evaluation on various open benchmarks and show that our approach is competitive with other state-of-the-art architectures, while requiring a fraction of the training and inference time.",
    "citationCount": 402,
    "references": [
      "3bfa808ce20b2736708c3fc0b9443635e3f133a7",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "229f331f1e9dc5f17e0f29ec9ae0a4b0346850cc",
      "f7b550cba2d61b3fb676e72c92c245134363fda1",
      "e4f2c471d27ced746f26cc6e8337ea5cb7c8faf3",
      "3c8a456509e6c0805354bd40a35e3f2dbf8069b1",
      "9dccd22276aaad5b6ec24e68bb7d29d954226a54",
      "2a6d160b529272964ce1a6707adf52f3d6ba4861",
      "38293873cce681b857b3c1d73f5590f641f3dc42",
      "c22ecb56b1b3d54acb8793df1ae6a526cf621449",
      "e176551be4cea321dc1f6aec3d8727cdb87972e8",
      "0a6a9e6d4e3efd7c69357769305b70097281655f",
      "fc3e99ebc07b3014f6736a6a7b077edf2f1634c0",
      "629810f70fa8b1de8d14d647b8ee3966762ad58c",
      "6bdce513156f81d9df298b6423e0400f6cfae73e",
      "057b594c9e6ed45fc445a4dc45384117bdd15a3e",
      "44842bba66366522de782f537d9bc61d8868bf08",
      "05c4eb154ad9512a69569c18d68bc4428ee8bb83",
      "a68753bcaf95b3508435ee58b2f6de358a52bb66",
      "4e7dd1e79f0f13650b2612325e6ba8d206dc04fb",
      "630f12b88178f4a54611f29d71c6cc3e674ca0da",
      "7e71eedb078181873a56f2adcfef9dddaeb95602",
      "318d7da35307221267b6ce6ead995cc812245abb",
      "b7a6b7adafd01e939c9266083dfba9edea88846c",
      "f55781f7ce6fd31e946f0efe76d5bf89858391d1",
      "30b38ca8151bbd5a5ff45bce94297d1248ff58b5",
      "c2d40522eaa5523d67a0de5e4098e7031fdccb3d",
      "33ef18fea11eba462d047cdade87d1f297390d3e",
      "08fe73f5c915f175f49924f05d77055dfabf5595",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "ac225094aab9e7b629bc5b3343e026dea0200c70",
      "9ad35b2bdb18726aefd85cd1b3dc188a05a7828b",
      "abfa95058fa50c55a0b923a6c35830f470c125ad",
      "4ce19e59b6c99b960df645d753fd29d2ccd9b7b4",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "6354dad3769ddf9d9537c8a36137788721072a58",
      "e4715a13f6364b1c81e64f247651c3d9e80b6808",
      "e9842f649578886801a3b4ce40a89b9125f51daf",
      "046c4276b72e21731150c0655519ec717d8f5bad",
      "2503dff90685857ce7295e37d0045e2eef41c8b8",
      "51a2bc2e8fb8ed47a085df33dd965e57335080a0",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "861d72c7b1685c2bd5e72215807acdae30d9139f",
      "ecf6c42d84351f34e1625a6a2e4cc6526da45c74",
      "b7c4570d7d97f327e7f82fe28100172ec5e94cac",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "fdc708aaa0d18c791f878ff2214201410fa52439",
      "b5007972c6f5a2294f83357c73e12664dd7c85b3",
      "1a39bb2caa151d15efd6718f3a80d9f4bff95af2",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "aa5f0c525d1158381ec66d0a0034076c90e07f2f",
      "f09f7888aa5aeaf88a2a44aea768d9a8747e97d2",
      "0e779fd59353a7f1f5b559b9d65fa4bfe367890c",
      "54906484f42e871f7c47bbfe784a358b1448231f",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "36ee2c8bd605afd48035d15fdc6b8c8842363376",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "7c6de5a9e02a779e24504619050c6118f4eac181",
      "2c03df8b48bf3fa39054345bafabfeff15bfd11d",
      "18b47b83a373f33d6b902a3615f42c10f7600d72",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "e49ff72d420c8d72e62a9353e3abc053445e59bd",
      "995c5f5e62614fcb4d2796ad2faab969da51713e",
      "d6f2f611da110b5b5061731be3fc4c7f45d8ee23",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "e15cf50aa89fee8535703b9f9512fca5bfc43327",
      "fff114cbba4f3ba900f33da574283e3de7f26c83",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "03911c85305d42aa2eeb02be82ef6fb7da644dd0",
      "43d2ed5c3c55c1100450cd74dc1031afa24d37b2",
      "34795caa356317f2c662bd4553cd7608e0aeb657",
      "a8e8f3c8d4418c8d62e306538c9c1292635e9d27",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      null,
      "34f25a8704614163c4095b3ee2fc969b60de4698",
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      "b6b26564df790262abbe48fa18079d9610189b29",
      "2ed8ceec868d71ebdcdcdfb8126c22f42107b9ea"
    ]
  },
  {
    "paperId": "da923d1ccfd4927fae7c2a835c7979e3a4dec159",
    "title": "Graph Neural Networks for Natural Language Processing: A Survey",
    "abstract": null,
    "citationCount": 300,
    "references": []
  },
  {
    "paperId": "4d4f41fa429f37ce41de0422938affb7805cf9a8",
    "title": "Everything is Connected: Graph Neural Networks",
    "abstract": null,
    "citationCount": 190,
    "references": [
      "365c1e187e173b51589a8f50575407e3e1d1175c",
      "1f6e9cdb9b24ccfee4d7dade0fdc4597cdc4d93a",
      "9d2b167ae11edffd944c22de4225a711111d1e2e",
      "5309f4bcb15e3dafbed759488551c1650b55dd81",
      "c0cd4b4844c31a27a7900a754d0a91b160b00e55",
      "274d3d3a2ccd254df2baf6b4080348fff407f428",
      "5822490cf59df7f7ccb92b8901f244850b867a66",
      "d834210f8cbf3cb74f10728764acbbd8136c6177",
      "dc32a984b651256a8ec282be52310e6bd33d9815",
      "07aa07cb6791f336cb32643d54201eab295b2757",
      "ab30672c8c5e4787f6a5985f26a8f281f0db2fb8",
      "14014c024674991149f3ecf9314c93f7e029ef1a",
      "2e17cc055f7313d3c4ebd48c07a6026a408bed9c",
      "8ea9cb53779a8c1bb0e53764f88669bd7edf38f0",
      "4dc3c61426a3332238ea0feb23f2113a96aef0d4",
      "3091df7607ee9b9b7d1b490a6049e4bace0db8b5",
      "08257eb1faa19c29ddcc31d7d749c9bd262213c5",
      "fc56572b7524d0b5b0e4770f57185b20d9294136",
      "b9c4ec6e99dd57ff3b4f04d324a22e6c48dc2064",
      "6075091294a0fe0fe5c6c7b7a0df9029b6a965cb",
      "9745b5bdc430b1f9b15ab3b71157f2ebaade9830",
      "73fe797b4f4f2d18784246bb74626426a8fe108e",
      "3bfa808ce20b2736708c3fc0b9443635e3f133a7",
      "f8da8c55c0e7c4940a02347347dd232bc2bac0b5",
      "85f5d9f87747555c588067f2a5f12516698f6808",
      "836e965cd93369089027d31d92a55b5819cae267",
      "09e48adf1a3f012ec56fbb4f92acae975ee43d87",
      "15510709cece022d54cf0eaf6fdff3cbd8711fc0",
      "a8b382ced2293e3b191e73eca8e6c1e5a2eb11f3",
      "e4f2c471d27ced746f26cc6e8337ea5cb7c8faf3",
      "65895f31c6d71b931eee27cc6f55412e1dc3380f",
      "7f42da4abfadf9d5a464affe22d0bd4bf21c0edb",
      "d976b1fca38255bc52f54dc7a9cf7c98e96c3b43",
      "7e71eedb078181873a56f2adcfef9dddaeb95602",
      "bc6f7ba757b437842564cd028881a509c225ce26",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "6f3370fcf266fc10842b6d3e77c6cadd842a3580",
      "89b1766a77f7a34aadd67861123d5cf3cd3ece52",
      "046c4276b72e21731150c0655519ec717d8f5bad",
      "e1799aaf23c12af6932dc0ef3dfb1638f01413d1",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "b7c4570d7d97f327e7f82fe28100172ec5e94cac",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "a456265138c088a894301c0433dae938705a9bec",
      "ae42c0cff384495683192b06bd985cdd7a54632a",
      "f09f7888aa5aeaf88a2a44aea768d9a8747e97d2",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "5aa24533e5ad3ef48a04b90f7484791b94e6870f",
      null,
      null,
      null,
      null,
      "b51d1d7666a2f291efcc4fbee237bc31e01387bb",
      "a4fd9f07f40e8935139edfdac3b8cf64c7a4e351",
      null
    ]
  },
  {
    "paperId": "04faf433934486c41d082e8d75ccfe5dc2f69fef",
    "title": "GPT-GNN: Generative Pre-Training of Graph Neural Networks",
    "abstract": "Graph neural networks (GNNs) have been demonstrated to be powerful in modeling graph-structured data. However, training GNNs requires abundant task-specific labeled data, which is often arduously expensive to obtain. One effective way to reduce the labeling effort is to pre-train an expressive GNN model on unlabelled data with self-supervision and then transfer the learned model to downstream tasks with only a few labels. In this paper, we present the GPT-GNN framework to initialize GNNs by generative pre-training. GPT-GNN introduces a self-supervised attributed graph generation task to pre-train a GNN so that it can capture the structural and semantic properties of the graph. We factorize the likelihood of graph generation into two components: 1) attribute generation and 2) edge generation. By modeling both components, GPT-GNN captures the inherent dependency between node attributes and graph structure during the generative process. Comprehensive experiments on the billion-scale open academic graph and Amazon recommendation data demonstrate that GPT-GNN significantly outperforms state-of-the-art GNN models without pre-training by up to 9.1% across various downstream tasks?",
    "citationCount": 567,
    "references": [
      null,
      "4d391dff5371a5ec299d73e5c7dddc3f33eafa80",
      "0ca7d8c3250d43d14fdde46bf6fc299654d861ef",
      "7af72a461ed7cda180e7eab878efd5f35d79bbf4",
      "ea9a516d5cb0b298f0df50e82b3e0400b72fcdff",
      "9dccd22276aaad5b6ec24e68bb7d29d954226a54",
      "add2f205338d70e10ce5e686df4a690e2851bdfc",
      "41d49ec6f73ab5621ab8e8cb5ddb677a886ccc76",
      "c95383f251a62c63217586059c67f63507c3e839",
      "5dce96b15fed603fc191bfbce912a33d21143c8d",
      "2fb59ebe271d6b007bb0429c1701fd1004782d1b",
      "64e87487a87532778352a358209935fef48300d7",
      "e0c6abdbdecf04ffac65c440da77fb9d66bb474c",
      "789a7069d1a2d02d784e4821685b216cc63e6ec8",
      "00b7efbf14a54cced4b9f19e663b70ffbd01324b",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "967a21a111757d6af7f7a25ca7ea2bdf6d505098",
      "b227f3e4c0dc96e5ac5426b85485a70f2175a205",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "e1cef464322243feb12ac3f81873c912e071a1a6",
      "d07284a6811f1b2745d91bdb06b040b57f226882",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "908272f8e6340971600148d4e73f50e1e8843aaf",
      "610cff0a09c76c43739be1a6e5b0ed7a1a24ee60",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "cd8a9914d50b0ac63315872530274d158d6aff09",
      "54906484f42e871f7c47bbfe784a358b1448231f",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "b022f2a277a4bf5f42382e86e4380b96340b9e86",
      "36ee2c8bd605afd48035d15fdc6b8c8842363376",
      "7d0effebfa4bed19b6ba41f3af5b7e5b6890de87",
      "0834e74304b547c9354b6d7da6fa78ef47a48fa8",
      "f37e1b62a767a307c046404ca96bc140b3e68cb5",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "2f4df08d9072fc2ac181b7fced6a245315ce05c8",
      "87f40e6f3022adbc1f1905e3e506abad05a9964f",
      "b8de958fead0d8a9619b55c7299df3257c624a96",
      "2be2f5a313792627ae1760c4a308da5ed164d962",
      "24fafbc64fddff8bad9699343871f5ae5100011e",
      "e7af1047d643ca833a7561dea750ead7a336ff27",
      "d2c733e34d48784a37d717fe43d9e93277a8c53e",
      "5fc5c5a4e489e781de434567d946e6eb65c44f60",
      "f020b61789112fe7241b871907268f0bdc5c84fa",
      "df2b0e26d0599ce3e70df8a9da02e51594e0e992",
      "9405cc0d6169988371b2755e573cc28650d14dfe"
    ]
  },
  {
    "paperId": "0b33c9c2eec5e7a71e1c051ec76e601e76152146",
    "title": "Say No to the Discrimination: Learning Fair Graph Neural Networks with Limited Sensitive Attribute Information",
    "abstract": "Graph neural networks (GNNs) have shown great power in modeling graph structured data. However, similar to other machine learning models, GNNs may make predictions biased on protected sensitive attributes, e.g., skin color and gender. Because machine learning algorithms including GNNs are trained to reflect the distribution of the training data which often contains historical bias towards sensitive attributes. In addition, the discrimination in GNNs can be magnified by graph structures and the message-passing mechanism. As a result, the applications of GNNs in sensitive domains such as crime rate prediction would be largely limited. Though extensive studies of fair classification have been conducted on i.i.d data, methods to address the problem of discrimination on non-i.i.d data are rather limited. Furthermore, the practical scenario of sparse annotations in sensitive attributes is rarely considered in existing works. Therefore, we study the novel and important problem of learning fair GNNs with limited sensitive attribute information. FairGNN is proposed to eliminate the bias of GNNs whilst maintaining high node classification accuracy by leveraging graph structures and limited sensitive information. Our theoretical analysis shows that FairGNN can ensure the fairness of GNNs under mild conditions given limited nodes with known sensitive attributes. Extensive experiments on real-world datasets also demonstrate the effectiveness of FairGNN in debiasing and keeping high accuracy.",
    "citationCount": 248,
    "references": [
      "917e9565b2be88c2b42b3fd21ed6c61c27d89e05",
      "066de71946052e2945742d7bbb72e8855d8d13e1",
      "c397fdc468eb878db233dc80bf65a35a5b87a80e",
      "13bc768cb8945fd9758ef805d242606d9eef02b7",
      "d909f9daf629cdbbc00133e6e79cf9ba0eab3b57",
      "d2f73057b5c135235b2a908a3a9d2d68a025b0f5",
      "4712082ea923f2c2730cae3df5ad861fae697dcb",
      "0090023afc66cd2741568599057f4e82b566137c",
      "d8ad2ca5cbf4882e41bfc336c5c75de8c634869d",
      "40e7cf66413c65a1ae500f4e4ed944a995064b16",
      "758a29b97b416ef718daa8b4e6be672e13af1d2e",
      "b25a30451518d372817967a72e125d638c85379e",
      "a2c7d81e5956b38eb296b079ce4f116083d2bfd9",
      "45a0936668026005beccf9009e8a555f96a50d7e",
      "05c4eb154ad9512a69569c18d68bc4428ee8bb83",
      "61c425bdda0e053074e96c3e6761ff1d7e0dd469",
      "8e9db5c090de4189231858a247128063bd317ef7",
      "6017e81c5ede6c38b306a3df9738aeb04baa7619",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "6ea90ce79d9f4d962e34b3c8a73fb41455a87322",
      "665265289471d08a4b472329eb42965b51ac485a",
      "c657b3fc93a24349117bf87296ea2b9b780706cc",
      "2503dff90685857ce7295e37d0045e2eef41c8b8",
      "c7330852a07170cd0e6990f5fbde5fca12b6ccd6",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "18858cc936947fc96b5c06bbe3c6c2faa5614540",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "f4615ae853fa0e8effbc5b36f7455c43520345aa",
      "4eef0519f75911a2e132fac12427fa13bdb32a71",
      "a625dee1fb23d1c842a961bc354c0aef3a20c132",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "fdc708aaa0d18c791f878ff2214201410fa52439",
      "b5007972c6f5a2294f83357c73e12664dd7c85b3",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "9a700c7a7e7468e436f00c34551fbe3e0f70e42f",
      "b63d949372bb0b095c8cef8a0ee9f31a45af7ee7",
      "5fb808edfaae574ee7f4553ad7090ca1fed9b585",
      "d42b11ce90c9c69a20ed015b73dc33e0e4100a7b",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "36ee2c8bd605afd48035d15fdc6b8c8842363376",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "e1547ed94cadc8e6e0aa303ae10f078df7ffdab7",
      "d103eb9d061709152a0c7368ba20d9a816d30264",
      "571b0750085ae3d939525e62af510ee2cee9d5ea",
      "7c6de5a9e02a779e24504619050c6118f4eac181",
      "86c37cd1109ce5b465116695b7705444a45185cf",
      "cbef7a84a53e19e019e5a05d232eb3c487c0e0c6",
      "4c64ee852f082f8f4e0113cfc1302b34e31539a2",
      "e49ff72d420c8d72e62a9353e3abc053445e59bd",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "0fee3b6c72f7676b4934651e517d0a328048c600",
      "86ee1835a56722b76564119437070782fc90eb19",
      "fff114cbba4f3ba900f33da574283e3de7f26c83",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "37c3303d173c055592ef923235837e1cbc6bd986",
      "85a34e83a655c4c2abe1344679d24f35b4cee140",
      "0d0229e1b8ae086b353ceca91e31460e71e57535",
      "3ac3c11bf6cd8ccc657eb629148d6e346e52c8e0",
      "adaa0523a5c9d5f92aa2009a51226391d8e62380",
      "b35d539ad0b9209a50bf7382edab3c5c708444ba",
      "89c650ccb646bdcce886e96e837db3767855c6d2",
      null,
      "bcf7b5cef77274ea00a9de1473f80d2705e5a3a1"
    ]
  },
  {
    "paperId": "2b8a207189bc02d73d1dce850bcde24dbd984483",
    "title": "Representing Long-Range Context for Graph Neural Networks with Global Attention",
    "abstract": "Graph neural networks are powerful architectures for structured datasets. However, current methods struggle to represent long-range dependencies. Scaling the depth or width of GNNs is insufficient to broaden receptive fields as larger GNNs encounter optimization instabilities such as vanishing gradients and representation oversmoothing, while pooling-based approaches have yet to become as universally useful as in computer vision. In this work, we propose the use of Transformer-based self-attention to learn long-range pairwise relationships, with a novel\"readout\"mechanism to obtain a global graph embedding. Inspired by recent computer vision results that find position-invariant attention performant in learning long-range relationships, our method, which we call GraphTrans, applies a permutation-invariant Transformer module after a standard GNN module. This simple architecture leads to state-of-the-art results on several graph classification tasks, outperforming methods that explicitly encode graph structure. Our results suggest that purely-learning-based approaches without graph structure may be suitable for learning high-level, long-range relationships on graphs. Code for GraphTrans is available at https://github.com/ucbrise/graphtrans.",
    "citationCount": 298,
    "references": [
      "82f078df26b41868008dcc46242d856d759875db",
      "16f2d2f2b8103ed0c4a4e6f339a21247e58c5e78",
      "c6337dc83db09c9648ae850c71937eb8e5fd7a43",
      "849b88ddc8f8cabc6d4246479b275a1ee65d0647",
      "268d347e8a55b5eb82fb5e7d2f800e33c75ab18a",
      "e0b34b9dd924768fce9b52bc59ffb3975deb0d63",
      "3fbf6339273c50b04e886fa9bd4ad18c952a683d",
      "21e33bd0ad95ee1f79d8b778e693fd316cbb72d4",
      "a9a4e8e631890a14257539948e1813b5214c60dd",
      "3bfa808ce20b2736708c3fc0b9443635e3f133a7",
      "ef8d788a904ed66bd8e30ffa69bc3ea1fe57dda7",
      "962dc29fdc3fbdc5930a10aba114050b82fe5a3e",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "8af925f4edf45131b5b6fed8aa655089d58692fa",
      "19c0d004bd0e42a6449d8b7717cbda4431a67e65",
      "47f01fd4f0c9c77058a966d3f17dbc09cf7ef42a",
      "78542c2be9bb853a4e04642f2d315cfb0c6d94b3",
      "055fd6a9f7293269f1b22c1470e63bd02d8d9500",
      "3db5fcb595492dcd64663c00d56f004dfafa689c",
      "bb713d56a39a040b35e4f9e036fb4422f543e614",
      "1da4770696ab4ad7bc32dc4d92425987eac0fb67",
      "94194703e83b5447f519fd8bcbb903916e05aaf9",
      "f1964cc1b343f907462cd7fbfaf88c2679d61f59",
      "ee8b1603c79a4f9c3bdc0d6633b595aa93ff3a0f",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "b022f2a277a4bf5f42382e86e4380b96340b9e86",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "d01379ebb53c66a4ccf5f4959d904dcf9e161e41",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "34795caa356317f2c662bd4553cd7608e0aeb657",
      "0b7e7da8149733462998992aad3254abadd3c97c",
      "7f4dd7927ad7ecf5b79ec1412311a4e8db5ebeb4",
      "c25f5efa9e2d6ca04388052959d73e80163556f6",
      "96ec0727355cc2f12d66d3e5efb39acea2555b49",
      null,
      null,
      null
    ]
  },
  {
    "paperId": "536da0e76290aea9cbe75c29bac096aeb45ef875",
    "title": "Can graph neural networks count substructures?",
    "abstract": "The ability to detect and count certain substructures in graphs is important for solving many tasks on graph-structured data, especially in the contexts of computational chemistry and biology as well as social network analysis. Inspired by this, we propose to study the expressive power of graph neural networks (GNNs) via their ability to count attributed graph substructures, extending recent works that examine their power in graph isomorphism testing and function approximation. We distinguish between two types of substructure counting: induced-subgraph-count and subgraph-count, and establish both positive and negative answers for popular GNN architectures. Specifically, we prove that Message Passing Neural Networks (MPNNs), 2-Weisfeiler-Lehman (2-WL) and 2-Invariant Graph Networks (2-IGNs) cannot perform induced-subgraph-count of substructures consisting of 3 or more nodes, while they can perform subgraph-count of star-shaped substructures. As an intermediary step, we prove that 2-WL and 2-IGNs are equivalent in distinguishing non-isomorphic graphs, partly answering an open problem raised in Maron et al. (2019). We also prove positive results for k-WL and k-IGNs as well as negative results for k-WL with a finite number of iterations. We then conduct experiments that support the theoretical results for MPNNs and 2-IGNs. Moreover, motivated by substructure counting, we propose a local relational pooling approach with inspirations from Murphy et al. (2019) and demonstrate that it is not only effective for substructure counting but also able to achieve competitive performance on real-world tasks.",
    "citationCount": 331,
    "references": [
      "cb42d038ee5c13c2db26d46149b1688d76289291",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "09e48adf1a3f012ec56fbb4f92acae975ee43d87",
      "6fb8b967dad742eb390a3090f094a12f2d909538",
      "48bfd1f82938036ecf680cf17ff2b882191a3ea0",
      "3a5af4545ee3ac3f413841c10c7605a1cefeb9e5",
      "01c10e04b5cbec100b0e9e94d53fe7b3f79f1857",
      "c02d7e04de29286f9ad161482408174353a22c32",
      "a8b382ced2293e3b191e73eca8e6c1e5a2eb11f3",
      "07a213517dbb8bfe67360a70b532b56bf502ca28",
      "d6388c4df36ac53bc614dc33312551f6edca6212",
      "b4303019c36d799b193b2b3214546601a9874baa",
      "1056978c817c4ef8e0995325e3e8362449a507eb",
      "7f42da4abfadf9d5a464affe22d0bd4bf21c0edb",
      "789a7069d1a2d02d784e4821685b216cc63e6ec8",
      "54e6a214c9dca4ba6bb8c5d52e5b219c5ea50e12",
      "057b594c9e6ed45fc445a4dc45384117bdd15a3e",
      "6b010e07618eb36abe6def23d94488b2c81ecbf7",
      "5728919676a85553b3c3063626c220fe7a5634e4",
      "d52961a91f03061c6732a69e292bd1e403e7f8b8",
      "c7fdb033ff15771e9bcea4336135eec171a595f3",
      "0b00413174f2474d72cfc5c3e248b958ddcc8ee1",
      "00358a3f17821476d93461192b9229fe7d92bb3f",
      "7f5ea861a57e14796f033fd0f5580dbc34ff88f2",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "b7a6b7adafd01e939c9266083dfba9edea88846c",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "beaaba420f5cef9b4564bc4e1ff88094a5fa2054",
      "1ca9bce5d61e7b5b8c9347cdc0e57dc045c80911",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "6541afa4b4061a7d5c8387514bedea9dc249fd80",
      "9ad35b2bdb18726aefd85cd1b3dc188a05a7828b",
      "0eea4193103599933bbc3ee89fcc563c5a519a9d",
      "d99eb02cd2ec40ed06a247c73e9bafd909716530",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "d9f836a2062864e4808e12224e2286a353498202",
      "e4715a13f6364b1c81e64f247651c3d9e80b6808",
      "2afa9966c37b7747d954a4dcd61e986247783683",
      "e1cef464322243feb12ac3f81873c912e071a1a6",
      "fd17bd9a5dc24a081ad9743570f50dd6750f54b2",
      "e9842f649578886801a3b4ce40a89b9125f51daf",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "3e2742cbc683e2422e504f248ccf63f1a7983c69",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "11222e4f5262c774bf9c006420eb647b951624b2",
      "1e819f533ef2bf5ca50a6b2008d96eaea2a2706e",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "680a48d5c74824d7e13c87db20de968b59e7f297",
      "a456265138c088a894301c0433dae938705a9bec",
      "d0ab11de3077490c80a08abd0fb8827bac84c454",
      "0e779fd59353a7f1f5b559b9d65fa4bfe367890c",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "63de0ad39d807f0c256f851428f211e8d5fcd3bb",
      "1eff774a5e2ad9b077e8ec502a609ceb17563af8",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "2c03df8b48bf3fa39054345bafabfeff15bfd11d",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "995c5f5e62614fcb4d2796ad2faab969da51713e",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "89655dc3c3a794cb25e055aed79424c66301d70f",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "22c15f0d2a60c831b4caf7977e861951ccea1dde",
      "2c846c5ac7e8bd020b89f6c4767a01731114ee4d",
      "b36661caeaa83155d1b665e5dab50b22ba9f8acd",
      "c6a933b325bafe909676e34a4a017b17dc3248fb",
      "565483470e43dddc894634933d494287db100a9d",
      "ba02a6a93e62ef9684dfa2d34c657eaa40fbe096",
      "43addf1536e3b8789d760d014f4bfc18e454c130",
      "a7fc751cd95bd1a409a26daaef69fc3aa8a35e0e",
      "6773912dee6678d623a5cb90191f4519eb034e11",
      "4db38cdf5f26689ca62c64f34afafad8c8c3041a",
      "a11cdaa94e777b0d9752a326224f742aa3f71c3b",
      "2e9d221c206e9503ceb452302d68d10e293f2a10",
      "262d9a9cd7b99a6008e59d440c8fadf1f375b51e",
      "d35f1e533b72370683d8fa2dabff5f0fc16490cc",
      "11cf4bea8ffde8225eaea72e71b4c8497f240d72",
      "114ea414b025a68d641efad9b74295a5625b9e7e",
      "69b316e545a7d7eefa9d9ce510cdd17601daaff0",
      null,
      "d59a22e628694be40223929ba09b038978bf987d",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      "6d1d91a413af1212fea8791e266282019b62c37d",
      null,
      null,
      null,
      null,
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      "fe279e7340004cfda249799e21816aa0cf272d19",
      "17bef31b7aca042af2ba8442aee60b58a147d1b0",
      null,
      null,
      null
    ]
  },
  {
    "paperId": "1d6b8803f6f6b188802275210eb5d7839644a8b5",
    "title": "DAG-GNN: DAG Structure Learning with Graph Neural Networks",
    "abstract": "Learning a faithful directed acyclic graph (DAG) from samples of a joint distribution is a challenging combinatorial problem, owing to the intractable search space superexponential in the number of graph nodes. A recent breakthrough formulates the problem as a continuous optimization with a structural constraint that ensures acyclicity (Zheng et al., 2018). The authors apply the approach to the linear structural equation model (SEM) and the least-squares loss function that are statistically well justified but nevertheless limited. Motivated by the widespread success of deep learning that is capable of capturing complex nonlinear mappings, in this work we propose a deep generative model and apply a variant of the structural constraint to learn the DAG. At the heart of the generative model is a variational autoencoder parameterized by a novel graph neural network architecture, which we coin DAG-GNN. In addition to the richer capacity, an advantage of the proposed model is that it naturally handles discrete variables as well as vector-valued ones. We demonstrate that on synthetic data sets, the proposed method learns more accurate graphs for nonlinearly generated samples; and on benchmark data sets with discrete variables, the learned graphs are reasonably close to the global optima. The code is available at \\url{this https URL}.",
    "citationCount": 490,
    "references": [
      "aa6c2814ff94ca098d90f188f95126b5b06ebb69",
      "d481b185bd55a86b1b16a3e2d2901f275414a74c",
      "e0c6a67b142bfc0a2cdd34d94453b11bfab7a32b",
      "8ef09697eca6a3201b1703a5a21722159cf64fcd",
      "2503dff90685857ce7295e37d0045e2eef41c8b8",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "b36a5bb1707bb9c70025294b3a310138aae8327a",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "75c4cde4ec810a8306b0a6ea05f789f6bc46488e",
      "a538e92e2804d39af36e37647af76eff6a1ce5a4",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "26724ed93ef33b88353a70d77f232018fac44366",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "cfda5d0789422cc82351de15c462599aca658472",
      "22a5cab4a79f10462f6ceb2f21dc901716cfe517",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "bfa77ba4cdae6e8ab694ebdf2ed5a9c32e094a40",
      "5f5dc5b9a2ba710937e2c413b37b053cd673df02",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "fa415017875accf51f927f74c90ee34b4295a7c7",
      "6ebcfc63343108d93796f74c36aca01288acd257",
      "79b03bba99eccfe4ef68d5e8c782b9983ccaf04b",
      "89162976ed104e76e499c247e81aec96556a33fe",
      "f71cc844b3e83d6f417e8ffabc529555915ca61a",
      "96bc83c043cd9599bbfaca6126039d52b93b4d93",
      "d8b0c45e399bfdd567e8f1ab22907435eabd7afd",
      "d575979d0dae2ea4851baba77a654fb6e49055eb",
      "907b840ca9246b464e3cb150d3e3e55c008d5336",
      "cce9f26d9ae328c51b61434b6f5623a2becdf857",
      "40414d71c9706806960f6551a1ff53cc87488899",
      "f4902bb39a228c1cd80217881bab26017dad3825",
      "2521c3d76bc439c961b7003080f4a7a661949547",
      "507c9b4917638d77b0bad5df47edff92f2ff229a",
      "4b704a990c2b89328969e74e1c40337183a8ba8b",
      "e55939d171d1671b4cc25a48a722c9781a60cbc7",
      "1c6356a688a273889fb71bab17973ed10483d97f",
      "f8af081e45cd09d510e6701f008d59408e234188",
      "c5787f18a737e1868a2af5b4edb219427bcb7847",
      "1996534efe5671ffe44c95ccd6d6164c0002834a",
      "998689f250121428024eed926b3c9e57727be83c",
      "31592816ac2c50ec22bcef38052d9dcc20a9171c",
      "206f12e0f963dff4dc4edc5c9cab985a5b9e5d71",
      "18aa8a0502e717c114312a3ba63dbb76fbcab47c",
      "f07f9dfe18d1af54409924746523677a5b3359e3",
      "1364a54bb4017b83d168ff7b5f84060128c85461",
      "7e928ef936c2815d7522c5176163d6ab7309a8b7",
      "9b597eb6115e02c6d827f1a02cb6cacbb6f1a8e2",
      "9b5fbb41a5d530b0e5fcbec66b1c5357a2a40e73",
      "c549bf3bb644705fe9a3ffed9dac83a2401f4fa6",
      "07e6b38dc70fc45e50ee780f36e767bed15544fb",
      "0bc59f3e7bb7cfbb74e03b2684b4a8ef19fb6598",
      "404d1df16b673659f52a8017bde4ba00f901e8bd"
    ]
  },
  {
    "paperId": "f64163a2ff1e9f3e81ef788c29b330edc5908f21",
    "title": "Echo state graph neural networks with analogue random resistive memory arrays",
    "abstract": "Co-designing hardware platforms and neural network software can help improve the computational efficiency and training affordability of deep learning implementations. A new approach designed for graph learning with echo state neural networks makes use of in-memory computing with resistive memory and shows up to a 35 times improvement in the energy efficiency and 99% reduction in training cost for graph classification on large datasets. Recent years have witnessed a surge of interest in learning representations of graph-structured data, with applications from social networks to drug discovery. However, graph neural networks, the machine learning models for handling graph-structured data, face significant challenges when running on conventional digital hardware, including the slowdown of Moore\u2019s law due to transistor scaling limits and the von Neumann bottleneck incurred by physically separated memory and processing units, as well as a high training cost. Here we present a hardware\u2013software co-design to address these challenges, by designing an echo state graph neural network based on random resistive memory arrays, which are built from low-cost, nanoscale and stackable resistors for efficient in-memory computing. This approach leverages the intrinsic stochasticity of dielectric breakdown in resistive switching to implement random projections in hardware for an echo state network that effectively minimizes the training complexity thanks to its fixed and random weights. The system demonstrates state-of-the-art performance on both graph classification using the MUTAG and COLLAB datasets and node classification using the CORA dataset, achieving 2.16\u00d7, 35.42\u00d7 and 40.37\u00d7 improvements in energy efficiency for a projected random resistive memory-based hybrid analogue\u2013digital system over a state-of-the-art graphics processing unit and 99.35%, 99.99% and 91.40% reductions of backward pass complexity compared with conventional graph learning. The results point to a promising direction for next-generation artificial intelligence systems for graph learning.",
    "citationCount": 60,
    "references": [
      "c585bde9e529aa277b26f3460700f2253512ee6b",
      "82066b26c6060a0045e25742ec2fdb698b7c923b",
      "07aa07cb6791f336cb32643d54201eab295b2757",
      "cfb8bc22e6dd6e409b849d3fdd8906378af25796",
      "641b98b64a55cc4dd8afd4c26c97958f8344c60e",
      "66c325b58dde3f0070eceff22a087279016dd65c",
      "52dd5ff0ca6592ccd4d6912462ebc602666cc589",
      "b10eec10aea29c2336ecc8b41bbfd361bccf01ea",
      "ef140fc520c62a74ea5b0517cf53606f741a26dc",
      "dd6170b3f5065da8bfc6d6f2eda58a0f5aeb57b5",
      "4343c3a396aa98c9fb0ad48b7a48e15664c69c90",
      "1d494b59c97512c38bca455a5f10d443b7de7f3d",
      "b90587af6ae47bada7db37afb6c9bb9fccc1ba8f",
      "0ff02cddd42e0434ff0e768ab1117ff326e3db6c",
      "6dc50a0e83b090504870311b0d8008b87874ab75",
      "4c7ab91196fbb47955ef57b7088c079a3fa7c73f",
      "e9d655a93a5cf062d881d27e52ce34eaac96f1e7",
      "f16f46456b3d30f0911c8344687417178bc29bd0",
      "2e3a86c4b8f6883b371f718eb0a35857a6bf9b95",
      "cc56d1210f4ee7a5a351cf64eb3bbed18b48b22f",
      "2672c56211a17e19e9b94c68b19d191cabd7e473",
      "93a3b041a6120cf2d599b512b4c5dbb3053143b9",
      "19c750a84f41de577efb7c30570658e66aa395d8",
      "9a629da36abb17acf095ea5c1bc96200636fcfd5",
      "da95d02a50b8208a17127987dde3cdf8da455114",
      "a1456f4f31a1084b7e924fd1226e205b817899b2",
      "7ac58400e5063bed9b7c35f87e44ddb917ccf357",
      "398d6f4432e6aa7acf21c0bbaaebac48998faad3",
      "e5badcfa663c30a983da24dd682288141d00fcc3",
      "0e5dfca7f4d996d0dd6ab469bb06bed5619b0a65",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "6b850c5f80cabf2796b77a7ebb9823232b80d4f7",
      "3a2345fcb4d2e2fe4572123a438bc8f30a8d93ae",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "df4f639d3ee0842504a9847ed658aeaf75523e95",
      "19c23c5fe58dd5e027d136219327e54276425353",
      "6b59bfd257155c4f6f7e4f573c892b2371651fe6",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "29dbf5c2657bc7877b36baa721b55ac633dfaad2",
      "8f6ccf34db0782e9790ecb66189842e38f94799a",
      "784a936a088776f44cfc664073ad69a0f036a205",
      "677743cfbe8a71c65b6b3af31040d98aa55fb9b2",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "718b82a08c124bf96cbf9606752970a54dc5270b",
      "cc95830a57010a960fda72531e1f811cafc14b77",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "d8c44edc0bf50df29c6f1335157ff1bcdfdc3e31",
      "41c35fbd3cf42ac544446b2050be4a07a0fc5217",
      "15e3f04cc2d02088d5979e2ebc37dd2108e5a310",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "7c6de5a9e02a779e24504619050c6118f4eac181",
      "00d736c540f80582279093cfc5ffe454a3226da9",
      "b138688d04eac3153bc4112babecc0106059c220",
      "494886988bfd6fec1bb36f4701fc10015f36d593",
      "c0d9a7837a74a4b56b7b2c19d3e16160a5f1ee92",
      "a8df9741b89b8ef9640f47f80635262c23744a25",
      "54aafa53f81b0e880cbaa67cfe71dd372732ad4b",
      "61633cf7b93c6ef2eab0c74d661654a27ea52aae",
      "3a758adba701dc81020e4d2858b1298044db71b5",
      "69e5339c0c3928a354e848b9ccf5349f6397e60b",
      "9845ec688c78e52d4988bc09a48c682c0066ed82",
      "ec2b2569b3a0d70a5b45d48b041dec9060d85eb7",
      "43d2ed5c3c55c1100450cd74dc1031afa24d37b2",
      "1571001ddd38903af9764389488b85ba7d8dc074",
      "46857f0c98f223622ad530b6fc4e446fb9187082",
      "ef77a8b0db638c675d032bd05dc3a012a2899da4",
      "96b4a21b810787ec321e8fa24f2a4ed43a3e0bac",
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      null,
      null
    ]
  },
  {
    "paperId": "e7b666c5ff82321cd35cfe5af3deb026ea0d3059",
    "title": "From Canonical Correlation Analysis to Self-supervised Graph Neural Networks",
    "abstract": "We introduce a conceptually simple yet effective model for self-supervised representation learning with graph data. It follows the previous methods that generate two views of an input graph through data augmentation. However, unlike contrastive methods that focus on instance-level discrimination, we optimize an innovative feature-level objective inspired by classical Canonical Correlation Analysis. Compared with other works, our approach requires none of the parameterized mutual information estimator, additional projector, asymmetric structures, and most importantly, negative samples which can be costly. We show that the new objective essentially 1) aims at discarding augmentation-variant information by learning invariant representations, and 2) can prevent degenerated solutions by decorrelating features in different dimensions. Our theoretical analysis further provides an understanding for the new objective which can be equivalently seen as an instantiation of the Information Bottleneck Principle under the self-supervised setting. Despite its simplicity, our method performs competitively on seven public graph datasets. The code is available at: https://github.com/hengruizhang98/CCA-SSG.",
    "citationCount": 223,
    "references": [
      "cdc86a4a9cd487eecd722f55da0b004d62e7ffeb",
      "8653cbe908c64c0e4a3591fe652d239ab7cf98c1",
      "8a9d84d86ac0d76e63914802f9738325c3bece9c",
      "2bceaa105b3d31c7d539f4a316f013a062ae7c15",
      "0e23d2f14e7e56e81538f4a63e11689d8ac1eb9d",
      "0d67d3ddca1c4e370eaf1e99ec674f612c39c66c",
      "76c124786ccf4263e6403a15a8e350ac28be4e65",
      "5d50c955e4db594983167572f3cb033d7b8d98ef",
      "2297049be3eb050bf4dbe27e353669f91702ff08",
      "4effd0f6b51b73335c3a2b7b880d168fbbe09298",
      "c9b8593db099869fe7254aa1fa53f3c9073b0176",
      "91fb815361fdbf80ff15ce4d783a41846bd99232",
      "38f93092ece8eee9771e61c1edaf11b1293cae1b",
      "ce88a95ec5f226b66cfce6770fcecbd1dc5748b3",
      "4bf76588122827157c43a59e656dccc6b6a22e90",
      "1f3c381eedfe8914b81e93070bfdb00cf86ac943",
      "9a56ab8b1aba50dc2fea3cf4b531d30891a88ba9",
      "4bf832104a47c380eb4413b20a9d5bf06649684f",
      "7af72a461ed7cda180e7eab878efd5f35d79bbf4",
      "896f2aac3d9f32cd676442de2f88e8a802d8c349",
      "add2f205338d70e10ce5e686df4a690e2851bdfc",
      "2a6d160b529272964ce1a6707adf52f3d6ba4861",
      "fd075bcdf2d7e13d23f7c249a8eded343d5bbe3b",
      "2fb59ebe271d6b007bb0429c1701fd1004782d1b",
      "97f4d09175705be4677d675fa27e55defac44800",
      "967a21a111757d6af7f7a25ca7ea2bdf6d505098",
      "af3825437b627db1a99f946f7aa773ba8b03befd",
      "b227f3e4c0dc96e5ac5426b85485a70f2175a205",
      "9198b96ad9e4d00b4d847af6becbd46e8c16eef2",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "6b73775f40467aed52784ff355b9bb7168e9078c",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "39153bcd060957a5e79e511cd4d39ec8ada4ed6b",
      "54906484f42e871f7c47bbfe784a358b1448231f",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "ffdcad14d2f6a12f607b59f88da4a939f4821691",
      "fab4d19ed77dad7c437d885eceb8aa65fae5a783",
      "8ebc4145aef6a575cbaffcfeec56b20586db573a",
      "415229903f91a1f3fc7404f5e5997fde025c221d",
      "bf654c3339f232f9d8f7cda7f00f4e7d5e97a7d8",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "fff114cbba4f3ba900f33da574283e3de7f26c83",
      "e2257e3f56ccb12875a57bc0a8cca1d9d7e93ec6",
      "7fceccc7a1046caa4936b14eeacb71ccf4d6be10",
      "43d2ed5c3c55c1100450cd74dc1031afa24d37b2",
      "a6b5b20151c752beb74508f813699fa5216dedfa",
      "125842668eab7decac136db8a59d392dc5e4e395",
      "4ef483f819e11873822416042a4b6dc4652e010c",
      "228ee64f1bd79cc1bffa136ae6583031ba997b19",
      "45db76270416a42517a21c63a77e9c4260fa979a",
      "58d3278e45284e2910d5d972b2ec2c7ce6e34c4f",
      "d52ee822014835fcd5a4992c94579d9f95673d55",
      "df2b0e26d0599ce3e70df8a9da02e51594e0e992",
      "efac04450c531b3769451a886ed9a42fce4754d9",
      "459839e00be022205fa8cffd051d42ffd2959f81",
      "b6b26564df790262abbe48fa18079d9610189b29",
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ]
  },
  {
    "paperId": "641828b8ca714a0f70ccdac17d7e9dff485877c2",
    "title": "How Powerful are Spectral Graph Neural Networks",
    "abstract": "Spectral Graph Neural Network is a kind of Graph Neural Network (GNN) based on graph signal filters. Some models able to learn arbitrary spectral filters have emerged recently. However, few works analyze the expressive power of spectral GNNs. This paper studies spectral GNNs' expressive power theoretically. We first prove that even spectral GNNs without nonlinearity can produce arbitrary graph signals and give two conditions for reaching universality. They are: 1) no multiple eigenvalues of graph Laplacian, and 2) no missing frequency components in node features. We also establish a connection between the expressive power of spectral GNNs and Graph Isomorphism (GI) testing, the latter of which is often used to characterize spatial GNNs' expressive power. Moreover, we study the difference in empirical performance among different spectral GNNs with the same expressive power from an optimization perspective, and motivate the use of an orthogonal basis whose weight function corresponds to the graph signal density in the spectrum. Inspired by the analysis, we propose JacobiConv, which uses Jacobi basis due to its orthogonality and flexibility to adapt to a wide range of weight functions. JacobiConv deserts nonlinearity while outperforming all baselines on both synthetic and real-world datasets.",
    "citationCount": 205,
    "references": [
      "facf11419e149a03bd4a9bffdda2ebb433a59d85",
      "775a6e0f9104b282ed867871d743e3afd1e66d96",
      "bbed89eee0a43baf17dd5eab8354deecadda8acf",
      "a444d51a54d6466892ce9f1ade5114f50a83cc85",
      "4b776e7f26464e5b230c1679560f12618730dcc6",
      "99ec4cad0f17f25f5b3c1f9be7de25868901943b",
      "c841c9704bf35873a051f228a15f67b30d650c2f",
      "74d14abc4c9abd78415d6ae75d3313a5636ac8bc",
      "aa1cda29362b9d670d602c7fc6964499d2a364bd",
      "b8b3380efb26854bae6f51ad1d2b5a045129c5a1",
      "0ee0801ba010a441403f9ed666ef9bf006b3aa07",
      "3a5af4545ee3ac3f413841c10c7605a1cefeb9e5",
      "04f3203f1214063436d81ce0c2ad7623204da488",
      "536da0e76290aea9cbe75c29bac096aeb45ef875",
      "33e31195ab6853dfb8b1d90b07da5755f9bf5de0",
      "2a6d160b529272964ce1a6707adf52f3d6ba4861",
      "cc9b137697046c29363b971e06b41cd5412b1831",
      "135334ea7fdef8eef0367e862797cac7dcd232a4",
      "7f42da4abfadf9d5a464affe22d0bd4bf21c0edb",
      "54e6a214c9dca4ba6bb8c5d52e5b219c5ea50e12",
      "057b594c9e6ed45fc445a4dc45384117bdd15a3e",
      "6b010e07618eb36abe6def23d94488b2c81ecbf7",
      "d52961a91f03061c6732a69e292bd1e403e7f8b8",
      "c7fdb033ff15771e9bcea4336135eec171a595f3",
      "b7a6b7adafd01e939c9266083dfba9edea88846c",
      "f55781f7ce6fd31e946f0efe76d5bf89858391d1",
      "c2d40522eaa5523d67a0de5e4098e7031fdccb3d",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "ac225094aab9e7b629bc5b3343e026dea0200c70",
      "6017e81c5ede6c38b306a3df9738aeb04baa7619",
      "43c3bfffdcd313c549b2045980855ea001d6f13b",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "e4715a13f6364b1c81e64f247651c3d9e80b6808",
      "2503dff90685857ce7295e37d0045e2eef41c8b8",
      "c751ab01aedc2888a7fe6e8b4f77ab1afa94072f",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "3d846cb01f6a975554035d2210b578ca61344b22",
      "39e223e6b5a6f8727e9f60b8b7c7720dc40a5dbc",
      "853d288c08053a7cb947ade446d0bc876f5d5833",
      "83c303467972333e897ad98cee2724fdaec9799f",
      "eb82d3035849cd23578096462ba419b53198a556",
      "c53062136a610a9a2e8e9d8b3d7fd1f7ad701e03",
      "064c71e4bf43e49e3a7cefc29b570c60cbfcfc4f",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      "6d1d91a413af1212fea8791e266282019b62c37d",
      null
    ]
  },
  {
    "paperId": "1478c3c0225368419f68aabc6b67033531d3b4c1",
    "title": "Dynamic Multiscale Graph Neural Networks for 3D Skeleton Based Human Motion Prediction",
    "abstract": "We propose novel dynamic multiscale graph neural networks (DMGNN) to predict 3D skeleton-based human motions. The core idea of DMGNN is to use a multiscale graph to comprehensively model the internal relations of a human body for motion feature learning. This multiscale graph is adaptive during training and dynamic across network layers. Based on this graph, we propose a multiscale graph computational unit (MGCU) to extract features at individual scales and fuse features across scales. The entire model is action-category-agnostic and follows an encoder-decoder framework. The encoder consists of a sequence of MGCUs to learn motion features. The decoder uses a proposed graph-based gate recurrent unit to generate future poses. Extensive experiments show that the proposed DMGNN outperforms state-of-the-art methods in both short and long-term predictions on the datasets of Human 3.6M and CMU Mocap. We further investigate the learned multiscale graphs for the interpretability. The codes could be downloaded from https://github.com/limaosen0/DMGNN.",
    "citationCount": 309,
    "references": [
      "df68a265f6c4d1b7a6aee5b1ebf3ef20c2c4f01e",
      "88ac32bcb40e1e5e88a301557c06659c04023450",
      "0289bcbf4e876ad862bac213aee9654146b97359",
      "bad2b0aa0a001de221ca86838372acfb99e68e49",
      "0f96ee5997d5951886b6e7c6c4a2e31990595cf2",
      "68a024d7b70ef3989a6751678f635cbe754440fc",
      "814b70cd133f97ef039bcc44124d9344dd8b3f64",
      "27ff37bd17a5e59149e645184ed4a0c2fb9cf2f2",
      "1cc7bba449527f8d32f3bf62f285d2da38f9a864",
      "a1ab29a04bbcf2d8844e821f22119e23f176d788",
      "c6cc85608db475f752fa0b64572ecb4468d5571e",
      "32b918246037976ba5f8363104ec042f56db42d6",
      "057444e01041ffeb50705e0b056532c2e5e15a2e",
      "ca64cd82c7221beaeb5c7c85550339683ba1ecc5",
      "a84a7885af7b8c310d9c6b25c52420553bd8ef30",
      "575d58c9d74a9a7cc62954c755309c7e37498baf",
      "643ab168dfa1df777b9276281a54af32bf9b25d2",
      "efeaa6e3114d6d6ae5c3041b66ac9a9ae9bf52bf",
      "d488ceb4ea85d4d31a933a16b0abd0af042d5b98",
      "1efc28925ec65879652ad9d5f8be53037bb2f306",
      "ba2a33107afba54adc2d92aa7ad9f747d5258e95",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "7f065002afcb90240a41f05f138269c5675b9805",
      "3df8cc0384814c3fb05c44e494ced947a7d43f36",
      "93b2e08bba55bcabf14ef49b558c9c772e8cd2b6",
      "cf03ba3b0247ec6abf22650f839a43de3ac98dc5",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "397e9b56e46d3cc34af1525493e597facb104570",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "e11a020f0d2942d09127daf1ce7e658d3bf67291",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "44e1ee7a63a01a76371d7070c132361a5ddd54a0",
      "1ec7433aeb4777e7d5c903920ae945e5429d3bc4",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "fdfedec1341bdd2f0df6cc6f987d867f7173191c",
      "bac377d3a051899dbe0d7249ed5d3d0b22d57310",
      "504002dbd2de78f8d55c860a76a6ee322eb816a8",
      "0730b04104090d83abdf86ca9ec44164133cbac5",
      "50a00d4fa9bf2e7bff37bc944ac48b403f5eb097",
      "8f168c4fe7704ecd37895c8b9a40d2f0ae831635",
      "56178de1001efe54792ad93f6980de5d5e91906b",
      "346fbcffe4237aa60e8bcb3d4294a8b99436f1d0",
      "0228810a988f6b8f06337e14f564e2fd3f6e1056",
      "497a80b2813cffb17f46af50e621a71505094528",
      "888dc8dd3a0a10d4b75c6f131cbeb2af33755e07",
      null,
      "eb8a57457e44bff50930e9f93f5b939e90ee3bc3",
      "fbc6562814e08e416e28a268ce7beeaa3d0708c8"
    ]
  },
  {
    "paperId": "8b9f01585a679dffe92261ecdec56425db9ef97f",
    "title": "Demystifying Oversmoothing in Attention-Based Graph Neural Networks",
    "abstract": "Oversmoothing in Graph Neural Networks (GNNs) refers to the phenomenon where increasing network depth leads to homogeneous node representations. While previous work has established that Graph Convolutional Networks (GCNs) exponentially lose expressive power, it remains controversial whether the graph attention mechanism can mitigate oversmoothing. In this work, we provide a definitive answer to this question through a rigorous mathematical analysis, by viewing attention-based GNNs as nonlinear time-varying dynamical systems and incorporating tools and techniques from the theory of products of inhomogeneous matrices and the joint spectral radius. We establish that, contrary to popular belief, the graph attention mechanism cannot prevent oversmoothing and loses expressive power exponentially. The proposed framework extends the existing results on oversmoothing for symmetric GCNs to a significantly broader class of GNN models, including random walk GCNs, Graph Attention Networks (GATs) and (graph) transformers. In particular, our analysis accounts for asymmetric, state-dependent and time-varying aggregation operators and a wide range of common nonlinear activation functions, such as ReLU, LeakyReLU, GELU and SiLU.",
    "citationCount": 46,
    "references": [
      "90dead8a056b848be164c2e5cdadfa2e191c3265",
      "8ad64183b0d49ba90bdb09803c777524b8fe545b",
      "2afb4cacbfa6b374f72accc37e779afc593ba843",
      "9bc2a62ad82282296dd7131805fa83071469418e",
      "383116b2685d0c7ae9669ac929b628b9af0af5f3",
      "a50a2a191c98dfe045ac2139495ee80ff1338e47",
      "ab30672c8c5e4787f6a5985f26a8f281f0db2fb8",
      "3443efc855cebd17d1512d1a703b6e9ee2e4da8b",
      "1d81e7f428fea2b2e15ee3a96fe843ca603acc4c",
      "c6d550c3fcecf27b979be84c4cd444cc1c72bf47",
      "9a772646ef9ed9c917f45fa592d5f89f7d5f8542",
      "7717e17df9e6f83fb17f3dbcd6189a4cbeb359b7",
      "04f3203f1214063436d81ce0c2ad7623204da488",
      "3c8a456509e6c0805354bd40a35e3f2dbf8069b1",
      "2a6d160b529272964ce1a6707adf52f3d6ba4861",
      "0df63cbd6f8bb0b325d780c9c2fcef8f6670c588",
      "38293873cce681b857b3c1d73f5590f641f3dc42",
      "0a6a9e6d4e3efd7c69357769305b70097281655f",
      "fc3e99ebc07b3014f6736a6a7b077edf2f1634c0",
      "4ce9c20642dce5eb7930966053a1e3da4ef617f2",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "ac225094aab9e7b629bc5b3343e026dea0200c70",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "d9f836a2062864e4808e12224e2286a353498202",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "ae42c0cff384495683192b06bd985cdd7a54632a",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "3d846cb01f6a975554035d2210b578ca61344b22",
      "2c03df8b48bf3fa39054345bafabfeff15bfd11d",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "e1c6aeffc3259fe02041906f41563f65c5509c6b",
      "4abd175bf904132288d70f4baacf59ca8a6389d7",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "c73fc2699658cc82f5cf3b14bbbb7d1812a19599",
      "29258e7c8a2d43c77933900f4b66e8bdc002943e",
      "e12c07178f0dc2fcccee21c96ed26f142dc1e08f",
      "6121952a96103fc2187ebbab470e2d0db94efc95",
      "6b287ebc873f92caed30aaa8b94092d549f55aaa",
      "64663e07b60e984da8013f0801ec31da16efca8d",
      "23068cc1a7996fa5bd810d4768f83a46935326f7",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      "48e9ac3f80c3fa697d577d5c68c56c77c0e899d9",
      "107d1cc9216776d4083932e2c85ca9d75b3515c2",
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      "7a041d4a8922f0a2d08303d3a1fd9c2fe4de05dd"
    ]
  },
  {
    "paperId": "4becb19c87f0526d9a3a2c15497e0b1c40b576e2",
    "title": "Revisiting Heterophily For Graph Neural Networks",
    "abstract": "Graph Neural Networks (GNNs) extend basic Neural Networks (NNs) by using graph structures based on the relational inductive bias (homophily assumption). While GNNs have been commonly believed to outperform NNs in real-world tasks, recent work has identified a non-trivial set of datasets where their performance compared to NNs is not satisfactory. Heterophily has been considered the main cause of this empirical observation and numerous works have been put forward to address it. In this paper, we first revisit the widely used homophily metrics and point out that their consideration of only graph-label consistency is a shortcoming. Then, we study heterophily from the perspective of post-aggregation node similarity and define new homophily metrics, which are potentially advantageous compared to existing ones. Based on this investigation, we prove that some harmful cases of heterophily can be effectively addressed by local diversification operation. Then, we propose the Adaptive Channel Mixing (ACM), a framework to adaptively exploit aggregation, diversification and identity channels node-wisely to extract richer localized information for diverse node heterophily situations. ACM is more powerful than the commonly used uni-channel framework for node classification tasks on heterophilic graphs and is easy to be implemented in baseline GNN layers. When evaluated on 10 benchmark node classification tasks, ACM-augmented baselines consistently achieve significant performance gain, exceeding state-of-the-art GNNs on most tasks without incurring significant computational burden.",
    "citationCount": 201,
    "references": [
      "4247f45a5730e3bda5836e2bc7941e30f5b91cb7",
      "b25b4d70b62d8482c98c2b901f4a7e1600df3a72",
      "854b41b4bc1254b68cb7242b15341fe70461139f",
      "089bb1ecce75936eda1890f8e40a56d4c811dd33",
      "ba4cb1db59df2cc39bbb34ed2b61a7706ca00091",
      "bbed89eee0a43baf17dd5eab8354deecadda8acf",
      "8a1e3d41ea3d730e562d8c19b2bdb50a23208842",
      "161962accc739f356ad172339aa165d45ef57687",
      "5b1ce73eee6d80a3897bb03468b067f6583fdba8",
      "fbc136c8c81cd89206dc0fcb54e16bd98df83b62",
      "33b75e9094968c060238d54f1026dbc3c8ab66f7",
      "45f4585f12ed7310c2dbc487a2aa1ba23c568071",
      "7a9af19a3dfdb72af60435eb380b8c6d4f87a245",
      "3c4b1590df295f79a9618c259e6dcb3d64312f9c",
      "1d81e7f428fea2b2e15ee3a96fe843ca603acc4c",
      "21e33bd0ad95ee1f79d8b778e693fd316cbb72d4",
      "0ee0801ba010a441403f9ed666ef9bf006b3aa07",
      "0dc14473859b1cb56c82d9e388a575c3e7813603",
      "a1a1a98f78469e72fb92b6072c1d24449cfb09b1",
      "dc5421813f564c2b39e02afc0e1c93aabb03154e",
      "04f3203f1214063436d81ce0c2ad7623204da488",
      "135334ea7fdef8eef0367e862797cac7dcd232a4",
      "cecd22bf53eb949becf937aac9f9488ccfee1e0d",
      "44842bba66366522de782f537d9bc61d8868bf08",
      "4efb9a950f252138a30eeb942ed02663a3ea29d1",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "69906b74ee369cd25522ec432ecbc601a77c9d87",
      "7e71eedb078181873a56f2adcfef9dddaeb95602",
      "ac225094aab9e7b629bc5b3343e026dea0200c70",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "d07284a6811f1b2745d91bdb06b040b57f226882",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "0e779fd59353a7f1f5b559b9d65fa4bfe367890c",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "fa72afa9b2cbc8f0d7b05d52548906610ffbb9c5",
      "4177ec52d1b80ed57f2e72b0f9a42365f1a8598d",
      "abd1c342495432171beb7ca8fd9551ef13cbd0ff",
      "6708a9f96d2169ed1a17be866379385e0c2fe93f",
      "bc6dff14a130c57a91d5a21339c23471faf1d46f",
      "fe2f6071ee12860874882be53f1d591873dfc554",
      "228bafce55e6f1cbe2c1df75b1949a1fb9c93eb3",
      "4f8d648c52edf74e41b0996128aa536e13cc7e82",
      "6429cd51882b94ee2203d1fdeb895ac2f30c23cb",
      "3d2218b17e7898a222e5fc2079a3f1531990708f",
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      "162d958ff885f1462aeda91cd72582323fd6a1f4",
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ]
  },
  {
    "paperId": "fcdd4300f937cef11af297329ed4bd2b611871e7",
    "title": "Generalization in Graph Neural Networks: Improved PAC-Bayesian Bounds on Graph Diffusion",
    "abstract": "Graph neural networks are widely used tools for graph prediction tasks. Motivated by their empirical performance, prior works have developed generalization bounds for graph neural networks, which scale with graph structures in terms of the maximum degree. In this paper, we present generalization bounds that instead scale with the largest singular value of the graph neural network's feature diffusion matrix. These bounds are numerically much smaller than prior bounds for real-world graphs. We also construct a lower bound of the generalization gap that matches our upper bound asymptotically. To achieve these results, we analyze a unified model that includes prior works' settings (i.e., convolutional and message-passing networks) and new settings (i.e., graph isomorphism networks). Our key idea is to measure the stability of graph neural networks against noise perturbations using Hessians. Empirically, we find that Hessian-based measurements correlate with the observed generalization gaps of graph neural networks accurately. Optimizing noise stability properties for fine-tuning pretrained graph neural networks also improves test performance on several graph-level classification tasks.",
    "citationCount": 41,
    "references": [
      "42040bdac466bfd89341110ff62df3df0b63e423",
      "1e70afa6da6a1eaa0260fbd93fae340181d09bc1",
      "2a85846fd827a157b624ee012e75cbe37344281c",
      "1948c13b4842b2abdcc3dd0cf9a95cd721d8a01d",
      "2e078383ab13a22eb84b749a902a5c60935b427b",
      "9f5b82d9915d0752957602224c5056be7e749c83",
      "441fa19685f7ba5f5d1b295eec37543a43c09194",
      "3eb8e72cc8e7be685cec121fb5c913d076c9b542",
      "3d9f7f7ae073194840719dc732ba76b80d249916",
      "bb681868f002199ac29fef0102173e61fc56825d",
      "f20d66665b65e565f15bf0f0b6442cc1ef04ba18",
      "a2cd073b57be744533152202989228cb4122270a",
      "6b989b8327db3a7212141c59c1569f0219775058",
      "0377b3da0cde3fa4abdf546c07d0bd6d899026e8",
      "1784a18105dafb85e2c53c86a9736fc7b8b71316",
      "83e89d56d0d0e1dfd8b52213e6cc2e191aaaf34b",
      "3a807ae90aceba10b0d3150506084dc4fae69def",
      "3a5af4545ee3ac3f413841c10c7605a1cefeb9e5",
      "536da0e76290aea9cbe75c29bac096aeb45ef875",
      "3db5fcb595492dcd64663c00d56f004dfafa689c",
      "8f18c9da3d1763723c6ef8c3734d74db005d0cff",
      "271b31b41782d11c5176a260f0ecdf2611b21e77",
      "f338528c156f275fcff3e310e157b23980e1bd19",
      "789a7069d1a2d02d784e4821685b216cc63e6ec8",
      "157605ff0f90b8193bbbcaf2e9d469d9b73be0c2",
      "816db3b923a870f02391759c214a024a8d2c548c",
      "eb70684b4878c2669e43609a01e66fd731948d4e",
      "c7fdb033ff15771e9bcea4336135eec171a595f3",
      "ee3ef373902e49abd44a14ae1a8a5c4bf6a3e0c4",
      "22a65f6975c98644f9a2601f731e9b2b7e15a216",
      "80d65eda89a4e5472f95e5a304604c80866d8748",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "51063caeb691f9a20e34feb721f14660a0df968e",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "b8989afff14fb630ca58b6afa917fb42574228ee",
      "a9022d8ffb5e417458fba9a280f90c1b08cb6c73",
      "fd17bd9a5dc24a081ad9743570f50dd6750f54b2",
      "fe257027193ea4a74fdab99d7509ce4002ad7de6",
      "b6151d4d27499420cb13774763c2db07b7bdfba1",
      "018a844cd7a496aed84f166e4b02ff547c3b5d16",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "ecf6c42d84351f34e1625a6a2e4cc6526da45c74",
      "4fc3ee440c2b0f66255a9e6966cee871ee0cc6da",
      "9753967a3af8e1db1e2da52a9bb3255bd1ce5c51",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "540c226fdf7047ac602c7cb05a18db19ee595df0",
      "9b464642fabd44ca9891d9ef9cdbd324eb5878f4",
      "d0ab11de3077490c80a08abd0fb8827bac84c454",
      "54ddb00fa691728944fd8becea90a373d21597cf",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "322cf9bcde458a45eaeca989a1eec92f7c6db984",
      "bb49c8eae3054c0cbba4f1b5c011440eb51c1796",
      "0f7c85357c366b314b5b55c400869a62fd23372c",
      "00d736c540f80582279093cfc5ffe454a3226da9",
      "49c3c2bde126b9bc09ea05181a7d9b0864ae60df",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "92caac0539ad285d5988ac84c780b9288e439b17",
      "d6fe05d447c3a379b81c4760f10838a370054c8e",
      "e2cdec637e196f504cdf489a36f79429c41a482a",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      null,
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      null,
      null
    ]
  },
  {
    "paperId": "2e1ea76e8e9b7576cab57408e2abe7295df76948",
    "title": "AEGNN: Asynchronous Event-based Graph Neural Networks",
    "abstract": "The best performing learning algorithms devised for event cameras work by first converting events into dense representations that are then processed using standard CNNs. However, these steps discard both the sparsity and high temporal resolution of events, leading to high computational burden and latency. For this reason, recent works have adopted Graph Neural Networks (GNNs), which process events as \u201cstatic\u201d spatio-temporal graphs, which are inherently \u201csparse\u201d. We take this trend one step further by introducing Asynchronous, Event-based Graph Neural Networks (AEGNNs), a novel event-processing paradigm that generalizes standard GNNs to process events as \u201cevolving\u201d spatio-temporal graphs. AEGNNs follow efficient update rules that restrict recomputation of network activations only to the nodes affected by each new event, thereby significantly reducing both computation and latency for event-by-event processing. AEGNNs are easily trained on synchronous inputs and can be converted to efficient, \u201casynchronous\u201d networks at test time. We thoroughly validate our method on object classification and detection tasks, where we show an up to a 200-fold reduction in computational complexity (FLOPs), with similar or even better performance than state-of-the-art asynchronous methods. This reduction in computation directly translates to an 8-fold reduction in computational latency when compared to standard GNNs, which opens the door to low-latency event-based processing.",
    "citationCount": 149,
    "references": [
      "948216c6a567e6cf01882409e75e9957a55ddb1f",
      "1a8c48f450d804fad8d9f09201c1bf1c1e3d2046",
      "898b985a55ae2e5d2ee43b7642dad7c4fe80afbb",
      "ceab4559736c6ba710191b12ed7f6123b2f85131",
      "bb7bf806eb09660f206d5eb80a98d144c7e07b33",
      "17d8bf1c42d747e3c222f3f8b8db0d19c6741ff9",
      "5be258f4b4d30fc0b3c915ff5180ee089c115080",
      "679927ae340dbf5415adf98ea39c88f2e4fdae64",
      "0cbb35268ef16ff76de79a1bfd93477e2ca0fcbe",
      "150f95f9c73820e0a0fa1546140e9f2bdfd25954",
      "8e2177ce972b2ec27a16b4d53c76c72375c2cf6c",
      "31d21edc3ed187c7f7bfa0aa16d185a9d45399c0",
      "3584a764401385d4c078add421cf46105bbe4239",
      "36469eeb46b6afea50af81e7c12cccd9d68e73f0",
      "171407328f4120d3d433405587dac9883fb5836b",
      "d808dbdd6a53259bea908266397b3983f246aabc",
      "5a5cf60486c7bf1937e7725ccccbdd95c4eb1f1b",
      "66c268d2a74f863586788cc154ad2ec06aa075e7",
      "630c9e9594ae79f82bea1c55ed7eb6db52f0e47f",
      "56106947e96784002623d4fba9ad6dfeb85c4820",
      "dd971c07879e1ce12b06991319528c06280eeb9b",
      "778e0ce80e523cf99ea9c746bcc1a1ffaa87be4c",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "e2d75694a7a1b6ee6d6f30885bfd1d8466ba105e",
      "efe750702b32fb04d9f5bcfb31d51af1d3d03889",
      "3fe019f5ee31a4be3fe24b687f555006e17d27c5",
      "3dd61d6422b7b1de5f61e225c99fb4e277ed5e90",
      "332ed1143ec551827f188c951f49f5b1823381fc",
      "a60f20adc4fc9f363465de327dc2f3f1ab7b624c",
      "769ee0718f473e826f243812006011cf837a29db",
      "f1e92f09209c7f50e05599c7551520ca129a6de4",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "1d6a5d0299ed8458191e4e0407d4d513e6a7dd7e",
      "a73531abe4cafbccd5b3e949e84410a50016bd33",
      "db054428f58c86ddd9985accd52e3affa9efdd54",
      "b36a5bb1707bb9c70025294b3a310138aae8327a",
      "d7a0de77a7a25943cb99d8301a839cfe54bc6e7b",
      "1e5f6ff1971072530a8bc50036d7de5fc3e80f67",
      "73ade9124ef6935e1b9b17243a48fa5320737f94",
      "154cf7b48cf154b696adaf4f128001767976a488",
      "1a39bb2caa151d15efd6718f3a80d9f4bff95af2",
      "c04c7d4abc5f0774b2dfd4e44ed183630da53e38",
      "30f46fdfe1fdab60bdecaa27aaa94526dfd87ac1",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c99537a3f0ce446df31942b78fb8337edb0c0c07",
      "287f2ed4e37a634c955b3afb05905403bf830811",
      "9b2c1eccbc3ba4790a2a3cb0f4188f565d4b5673",
      "f8b2c2a8c2369f4c40a9cf5e8599bf4ece665200",
      "f8e79ac0ea341056ef20f2616628b3e964764cfd",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "71b7178df5d2b112d07e45038cb5637208659ff7",
      "38ad1e2d6e85d2e68901fe20c45769fa343726d1",
      "46450375dbfb7a9ee861e21b4681a34c435dd1ac",
      "20bf2a70a20d988438adcf93fab12975bb5630b5",
      "ed9db7b20e019cdb1c7db8b7921221ee2d9f36e2",
      null,
      "a5117e86265f42f90a6cecae49527a0e69e2708b",
      null,
      null,
      null
    ]
  },
  {
    "paperId": "341880efaef452f631a4a5cd61bef5dae47741d7",
    "title": "Topology Attack and Defense for Graph Neural Networks: An Optimization Perspective",
    "abstract": "Graph neural networks (GNNs) which apply the deep neural networks to graph data have achieved significant performance for the task of semi-supervised node classification. However, only few work has addressed the adversarial robustness of GNNs. In this paper, we first present a novel gradient-based attack method that facilitates the difficulty of tackling discrete graph data. When comparing to current adversarial attacks on GNNs, the results show that by only perturbing a small number of edge perturbations, including addition and deletion, our optimization-based attack can lead to a noticeable decrease in classification performance. Moreover, leveraging our gradient-based attack, we propose the first optimization-based adversarial training for GNNs. Our method yields higher robustness against both different gradient based and greedy attack methods without sacrifice classification accuracy on original graph.",
    "citationCount": 454,
    "references": [
      "6082baf76512451d2fc4e5c275ae1fe52dad91bd",
      "0ede3139fc2c7ae3d39d7498298ed1bd9c1255aa",
      "6f5b1076ebacd30849d86e5f5787e3d43b65911f",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "2fae42932811ff9307b6b4a5059c2300f3587b53",
      "e642c817be4f1a456e299e60250ba2e3a128567d",
      "48405a8e7a669a74aebe577a8b9334776bb9adbb",
      "5bc67a8a47c796053d5ed77aaecd3cbbd4c5d4c1",
      "7f77058976e2fe75e98280371962c43d98c98321",
      "6c44f8e62d824bcda4f291c679a5518bbd4225f6",
      "12a17d5dfd222abfa47e121b734c93ae988d05b4",
      "6a5704ac5fdacb7121a0c02a9be4de2bdc5a40fc",
      "96e53b9c4e7ce52b32f090ceb3b069786559a2b7",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "160a03c2890f3ef5436c25ef9b1758faa13807a0",
      "7b5c74af1ba906b1b848c024b55a2d329a0e2b52",
      "7aa38b85fa8cba64d6a4010543f6695dbf5f1386",
      "e2a85a6766b982ff7c8980e57ca6342d22493827",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "df40ce107a71b770c9d0354b78fdd8989da80d2f",
      "6729b698fc28d191f3006690d973974a13c2f501",
      "6ead948d1379a95d84d883ca6b8f09dac85e0c6f",
      "bee044c8e8903fb67523c1f8c105ab4718600cdb",
      "b7ad25907acbbff28d4ac6d8a5074a7aeb85976b",
      "fff114cbba4f3ba900f33da574283e3de7f26c83",
      "0b14178e7d79ac426d0a39700e1ac8b2c6f2e752",
      "43d2ed5c3c55c1100450cd74dc1031afa24d37b2",
      "7cd316505f52aa337ef8a2aff10bc6bf1df561d0",
      null,
      "b6b26564df790262abbe48fa18079d9610189b29",
      null,
      "ac93089c9e87e369adbdd7a770cd2a0e534e9e35"
    ]
  },
  {
    "paperId": "44b9f16ba417b90e2e7c42f9074378dd06415809",
    "title": "Identity-aware Graph Neural Networks",
    "abstract": "Message passing Graph Neural Networks (GNNs) provide a powerful modeling framework for relational data. However, the expressive power of existing GNNs is upper-bounded by the 1-Weisfeiler-Lehman (1-WL) graph isomorphism test, which means GNNs that are not able to predict node clustering coefficients and shortest path distances, and cannot differentiate between different d-regular graphs. Here we develop a class of message passing GNNs, named Identity-aware Graph Neural Networks (ID-GNNs), with greater expressive power than the 1-WL test. ID-GNN offers a minimal but powerful solution to limitations of existing GNNs. ID-GNN extends existing GNN architectures by inductively considering nodes\u2019 identities during message passing. To embed a given node, ID-GNN first extracts the ego network centered at the node, then conducts rounds of heterogeneous message passing, where different sets of parameters are applied to the center node than to other surrounding nodes in the ego network. We further propose a simplified but faster version of ID-GNN that injects node identity information as augmented node features. Alto- gether, both versions of ID-GNN represent general extensions of message passing GNNs, where experiments show that transforming existing GNNs to ID-GNNs yields on average 40% accuracy improvement on challenging node, edge, and graph property prediction tasks; 3% accuracy improvement on node and graph classification benchmarks; and 15% ROC AUC improvement on real-world link prediction tasks. Additionally, ID-GNNs demonstrate improved or comparable performance over other task-specific graph networks.",
    "citationCount": 260,
    "references": [
      "0a69c8815536a657668e089e3281ff2e963d947a",
      "02d367a1cf5d3a757834f2c45b29b4fdc7b7458c",
      "b8b3380efb26854bae6f51ad1d2b5a045129c5a1",
      "ccbd7f5f7aaa7a50e35ff3de41f718861de790c4",
      "6360aaece0d6bf153183b9ecd075f42f7b127cc9",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "d6388c4df36ac53bc614dc33312551f6edca6212",
      "a4a1a70b7cd477de254f88662787406dcd40d8bb",
      "271b31b41782d11c5176a260f0ecdf2611b21e77",
      "54e6a214c9dca4ba6bb8c5d52e5b219c5ea50e12",
      "057b594c9e6ed45fc445a4dc45384117bdd15a3e",
      "6b010e07618eb36abe6def23d94488b2c81ecbf7",
      "b8dd4b06258b2113c6f5586d7b6a2bca8c6da170",
      "00358a3f17821476d93461192b9229fe7d92bb3f",
      "7f5ea861a57e14796f033fd0f5580dbc34ff88f2",
      "398d6f4432e6aa7acf21c0bbaaebac48998faad3",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "6541afa4b4061a7d5c8387514bedea9dc249fd80",
      "4654f61045d5437fa875d58653cae59b8afcaf02",
      "d9f836a2062864e4808e12224e2286a353498202",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "e4715a13f6364b1c81e64f247651c3d9e80b6808",
      "e1cef464322243feb12ac3f81873c912e071a1a6",
      "fd17bd9a5dc24a081ad9743570f50dd6750f54b2",
      "afd76be183d34af3bf944debd73db1c77987a8c6",
      "a5fe578a6b9f51ce19263676e6395421fedc6d2d",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "b7c4570d7d97f327e7f82fe28100172ec5e94cac",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "22539dc2c0a6bcab4cf1a9f1d35b6b3d766393f9",
      "f09f7888aa5aeaf88a2a44aea768d9a8747e97d2",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "eaec9000ef12593e4489a711eed5f042d46d5ced",
      "a520e1ec9cea03e125af46c53f9aea2df9848979",
      "43d2ed5c3c55c1100450cd74dc1031afa24d37b2",
      "d8861f4b51508aca5c1a34467c60719c80f67053",
      "d1d72bfd481913e7f14c25f598cd491fbf7a8479",
      "b3c081e9c6f21ec9867d70b8a382c44f6e760276",
      "d61031326150ba23f90e6587c13d99188209250e",
      "ef77a8b0db638c675d032bd05dc3a012a2899da4",
      "f22f6972e66bdd2e769fa64b0df0a13063c0c101",
      "f1aeb751d9cefc9d784d8862562f5a3fe15821ae",
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      "b6b26564df790262abbe48fa18079d9610189b29",
      "ba640c0682b242cb480bb4eb5b934ee6db949269",
      "4deebd0fdcec477a780e950dc0299beb872ea350"
    ]
  },
  {
    "paperId": "ff6a4a9a41b78c8b1fcab185db780266bbb06caf",
    "title": "Iterative Deep Graph Learning for Graph Neural Networks: Better and Robust Node Embeddings",
    "abstract": "In this paper, we propose an end-to-end graph learning framework, namely Iterative Deep Graph Learning (IDGL), for jointly and iteratively learning graph structure and graph embedding. The key rationale of IDGL is to learn a better graph structure based on better node embeddings, and vice versa (i.e., better node embeddings based on a better graph structure). Our iterative method dynamically stops when the learned graph approaches close enough to the graph optimized for the prediction task. In addition, we cast the graph learning problem as a similarity metric learning problem and leverage adaptive graph regularization for controlling the quality of the learned graph. Finally, combining the anchor-based approximation technique, we further propose a scalable version of IDGL, namely IDGL-ANCH, which significantly reduces the time and space complexity of IDGL without compromising the performance. Our extensive experiments on nine benchmarks show that our proposed IDGL models can consistently outperform or match state-of-the-art baselines. Furthermore, IDGL can be more robust to adversarial graphs and cope with both transductive and inductive learning.",
    "citationCount": 420,
    "references": [
      "f357b515af59b9d60bfaedb8028633c9033ec708",
      "43f09b79fd98ac1353f57769dd2441084e6896c3",
      "011a1bbb4059b703d9b366468ef9effdb49f4df9",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "036d743c7ca1e513adf0a91594fc8111e03dc30c",
      "3aab8bea2ba6bd7f076e6f92a504a1e322ca64b8",
      "a5f87fec616337b2d2fdc473ab7566f5ef7cd62a",
      "aa63ac11aa9dcaa9edd4c88db18bec87e0834328",
      "2a6d160b529272964ce1a6707adf52f3d6ba4861",
      "5dce96b15fed603fc191bfbce912a33d21143c8d",
      "092c499a4fc84d8490e5fae7b180099760b35d41",
      "e47e6c814d2742527fdd352db13a5fd95b7ce24b",
      "f3c7fe4c898fa40563c18966618bcb4c6ba1536f",
      "7ee74f2df5e566a359957c3d97d2b0796da88b01",
      "832dbadab16629f6811b91ed8646403af2f43c0d",
      "e5796f483f48f26d517aebe6b5de26cff84b190a",
      "58532a453553d68f6e1efd86adb843479a3d09cc",
      "fe7bbda82323430602593e7567cca54c5ce54a9a",
      "8d86b1b090fb084bfd0c3613dd043e83526b91c5",
      "960a6293d068e479435b693df04b839b24ffb7d9",
      "8ccbd4898fd7cecac6823e7caa15c74fca670fbe",
      "1d6b8803f6f6b188802275210eb5d7839644a8b5",
      "8c8c3764f11e01a282e5b2e753858669e2e443ee",
      "1e059de3858c90445f8dce8a48cdb16ce3fc2af0",
      "f223aed6393c334e400746f5d17f76d1ef27e7ad",
      "f62b39ee5ebaf5e07e42858497bb77fee9731906",
      "3ed37cc1d35ddbb7e4caacd7fc30368424544b15",
      "9a57d9234eeb5570255910b29c187b9ce43d64e1",
      "33ef18fea11eba462d047cdade87d1f297390d3e",
      "ac225094aab9e7b629bc5b3343e026dea0200c70",
      "305f8c705c034b6179fc4db19eb6163265432baa",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "6ac33d3dcecbed17580509a34bccdff2425f7ed8",
      "94eb48c1878efbe2ccff121bd600dd0fd8a75650",
      "8ef09697eca6a3201b1703a5a21722159cf64fcd",
      "f741cba061655581f6fbb628613d0669c4bdecd5",
      "e1cef464322243feb12ac3f81873c912e071a1a6",
      "f32f16ca3c27ff945198c6551a5d35fae3b1a660",
      "0c9fc038583b7a6b27772e808c798fcdc10778bc",
      "1828f861952acac7d06748f21542ead7c75170ab",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "51a2bc2e8fb8ed47a085df33dd965e57335080a0",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "6a432ad86a4c3c37005f8e46212ec4e0abea5482",
      "818de553ecd306735971aba04bbfc29d17457084",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "fffcdd2541018f8dfe806d7db653e36c88d8fcd9",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "4fd5c4d2341d05ca9f1dc072e01f75b40876f521",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "b8aecf918f1c729eb2a2fa88da9eb16835daca5a",
      "f71cc844b3e83d6f417e8ffabc529555915ca61a",
      "472ba8dd4ec72b34e85e733bccebb115811fd726",
      "537ff50f531a40067a859391524523a0319514f0",
      "43d2ed5c3c55c1100450cd74dc1031afa24d37b2",
      "167e1359943b96b9e92ee73db1df69a1f65d731d",
      "2e9d221c206e9503ceb452302d68d10e293f2a10",
      "38b3a4447a47a6a6ed1869f3da03352c487f8fe3",
      "957cac8dc63f3bd383362cb46b2bdd94d9614005",
      null,
      "b6b26564df790262abbe48fa18079d9610189b29",
      "d08fcfb61764bf97d4d2b823cb500de47aebf80c",
      "86fb6d3152a9849444f2301c91ddce5b97ce611b"
    ]
  },
  {
    "paperId": "8a1e3d41ea3d730e562d8c19b2bdb50a23208842",
    "title": "Is Homophily a Necessity for Graph Neural Networks?",
    "abstract": "Graph neural networks (GNNs) have shown great prowess in learning representations suitable for numerous graph-based machine learning tasks. When applied to semi-supervised node classification, GNNs are widely believed to work well due to the homophily assumption (\"like attracts like\"), and fail to generalize to heterophilous graphs where dissimilar nodes connect. Recent works design new architectures to overcome such heterophily-related limitations, citing poor baseline performance and new architecture improvements on a few heterophilous graph benchmark datasets as evidence for this notion. In our experiments, we empirically find that standard graph convolutional networks (GCNs) can actually achieve better performance than such carefully designed methods on some commonly used heterophilous graphs. This motivates us to reconsider whether homophily is truly necessary for good GNN performance. We find that this claim is not quite true, and in fact, GCNs can achieve strong performance on heterophilous graphs under certain conditions. Our work carefully characterizes these conditions, and provides supporting theoretical understanding and empirical observations. Finally, we examine existing heterophilous graphs benchmarks and reconcile how the GCN (under)performs on them based on this understanding.",
    "citationCount": 237,
    "references": [
      "79847a6027001eddc19b7639d2660e6d50ec987c",
      "089bb1ecce75936eda1890f8e40a56d4c811dd33",
      "7544db2ae3140081b1581a99eee88960cc31415a",
      "4bc7d63595d194a6e0930019764216e6b42da0d4",
      "8e6f0800badceddde92ca062a4f6b107ee6ab744",
      "ad2f92f1a6114b3cb9a1afea8cf9672a418d06f6",
      "8d69d51455d53344984b9719fb924685ba0145ab",
      "4b776e7f26464e5b230c1679560f12618730dcc6",
      "bad3534cc797606d1fe3cb09713407783e77cac4",
      "8c157c37bf9317a572ff95cdda4e9a29882c273c",
      "7c882a945b51825417bafde8ab05163b443a1525",
      "33b75e9094968c060238d54f1026dbc3c8ab66f7",
      "0b33c9c2eec5e7a71e1c051ec76e601e76152146",
      "5ab7c068d36a031c9c5e2e1c88cfd8b3bbdcccb6",
      "1d81e7f428fea2b2e15ee3a96fe843ca603acc4c",
      "066de71946052e2945742d7bbb72e8855d8d13e1",
      "21e33bd0ad95ee1f79d8b778e693fd316cbb72d4",
      "0ee0801ba010a441403f9ed666ef9bf006b3aa07",
      "27d5be9322d71b6fd2faa8a6b87250127a12c0cf",
      "4a0837e89fe3da40cac7f18917116b7c65cd3aa5",
      "dc5421813f564c2b39e02afc0e1c93aabb03154e",
      "04f3203f1214063436d81ce0c2ad7623204da488",
      "135334ea7fdef8eef0367e862797cac7dcd232a4",
      "68a024d7b70ef3989a6751678f635cbe754440fc",
      "4ce9c20642dce5eb7930966053a1e3da4ef617f2",
      "4efb9a950f252138a30eeb942ed02663a3ea29d1",
      "398d6f4432e6aa7acf21c0bbaaebac48998faad3",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "3dd17e2d59dfd940542387060463e3c3092350cf",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "ac225094aab9e7b629bc5b3343e026dea0200c70",
      "313dc4c4cdf81d8631948b9ce8195b3a6c291534",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "4b0acf2f1a1851c012946600a723afe4e4a48c49",
      "046c4276b72e21731150c0655519ec717d8f5bad",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "2784000e1a3554374662f4d18cb5ad52f59c8de6",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "464aa76bf0affe892b046dcdfad42a344b750fa0",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "30c4020f1156cec4e46b24a3a2d22b03e9b30086",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "7335bc7aa7e4922e7ab138c94ea0a0bc06d3056d",
      "43d2ed5c3c55c1100450cd74dc1031afa24d37b2",
      "342fe6a6338e73fd4d34c4f37f41e3bbad274dd2",
      "228bafce55e6f1cbe2c1df75b1949a1fb9c93eb3",
      "ab21376e43ac90a4eafd14f0f02a0c87502b6bbf",
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      "b6b26564df790262abbe48fa18079d9610189b29",
      null
    ]
  },
  {
    "paperId": "2028710190373ef893e3055c9113e04274a152d7",
    "title": "A Unified Lottery Ticket Hypothesis for Graph Neural Networks",
    "abstract": "With graphs rapidly growing in size and deeper graph neural networks (GNNs) emerging, the training and inference of GNNs become increasingly expensive. Existing network weight pruning algorithms cannot address the main space and computational bottleneck in GNNs, caused by the size and connectivity of the graph. To this end, this paper first presents a unified GNN sparsification (UGS) framework that simultaneously prunes the graph adjacency matrix and the model weights, for effectively accelerating GNN inference on large-scale graphs. Leveraging this new tool, we further generalize the recently popular lottery ticket hypothesis to GNNs for the first time, by defining a graph lottery ticket (GLT) as a pair of core sub-dataset and sparse sub-network, which can be jointly identified from the original GNN and the full dense graph by iteratively applying UGS. Like its counterpart in convolutional neural networks, GLT can be trained in isolation to match the performance of training with the full model and graph, and can be drawn from both randomly initialized and self-supervised pre-trained GNNs. Our proposal has been experimentally verified across various GNN architectures and diverse tasks, on both small-scale graph datasets (Cora, Citeseer and PubMed), and large-scale datasets from the challenging Open Graph Benchmark (OGB). Specifically, for node classification, our found GLTs achieve the same accuracies with 20%~98% MACs saving on small graphs and 25%~85% MACs saving on large ones. For link prediction, GLTs lead to 48%~97% and 70% MACs saving on small and large graph datasets, respectively, without compromising predictive performance. Codes available at https://github.com/VITA-Group/Unified-LTH-GNN.",
    "citationCount": 185,
    "references": [
      "22299b440277b4bc887168a669408d5547c1461a",
      "0c9d97d2ba489256d4f1760598dc2c7be6d90d96",
      "5f6fccc32953f57fe29b2316eb8351e84b0179dc",
      "76c124786ccf4263e6403a15a8e350ac28be4e65",
      "12ff508431c627fa01aaaf5779d68b6336dec5d3",
      "2e92728e393538304555e48a8d7532daf5ebabd4",
      "ee744c2c51fd29c2a86aacb1cda0badf12084b9e",
      "9c0e855382de7e708c8eea7b4d5cf792bcd4a326",
      "c50e20fd223807a6a692103bcd5530f0388c15e7",
      "e71aed7a0680c8fc09733f1dcd0cd3f6bb9cb7aa",
      "f357b515af59b9d60bfaedb8028633c9033ec708",
      "406ce1e4cd9841ad9ae6511bdf7d05650d0f7f8f",
      "f797c80a0469648abda85e56805295d3a6f307a7",
      "965652c0e426c5b42d7218d7429025be7ac542bf",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "2de30e1c07d89edbdec3bc9f4a724de9f8f41179",
      "c1040296c9aa7a5c5651749f0e98ba768fe4e68b",
      "850464c9006261bd632c4203f3e630db09a32faf",
      "3b4d4aac7c717b69632579b11986f22574c2ea6a",
      "f3058ac35927720d2a229984b10524e36d87d7dc",
      "5c7e1340adddb44cb345b66f452fa16dded6e01e",
      "3f06d02513a2763e472d2b5d5db08e9061081b9e",
      "de5c34fc56e1aa9aaf8ab58a668c655b942e70c8",
      "54b8fcf4cc95c0eee93910052018d6286dc78ad9",
      "1ecbaf7a2cd3059e07261e72a1195a7c70b3d664",
      "ee19253f28d66d2764fb91ad74bd81733bf25257",
      "387e0b95d56e9ecec60a1037ddf7cc57b2851835",
      "54e6a214c9dca4ba6bb8c5d52e5b219c5ea50e12",
      "05c4eb154ad9512a69569c18d68bc4428ee8bb83",
      "dd7bae431e0e4d94f24d54b0ac3a422703d38ed3",
      "fba8ef1c0908a37e6fb2d13b27eae0ad53c6d554",
      "4e7dd1e79f0f13650b2612325e6ba8d206dc04fb",
      "7f5ea861a57e14796f033fd0f5580dbc34ff88f2",
      "26384278cf5d575fc32cb92c303fb648fa0d5217",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "4a1004ecd34118116344633c7cdcc34493c423ee",
      "b09ae5a34d8d338b67e466e6d5c2cdff6c798fc7",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "336cb7cc2a68a1ef63996c454ecac5ea92e25132",
      "21937ecd9d66567184b83eca3d3e09eb4e6fbd60",
      "e4715a13f6364b1c81e64f247651c3d9e80b6808",
      "2503dff90685857ce7295e37d0045e2eef41c8b8",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "a60c69c2fae27ebbb73c87f7f2a4765556bd7f9f",
      "2ccf211bd633d14c7029db317447b018e66e5ec0",
      "8dd85e38445a5ddb5dd71cabc3c4246de30c014f",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "1a39bb2caa151d15efd6718f3a80d9f4bff95af2",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "0f2ccbae86bc65ffb749ba57b51690478770d17a",
      "ae42c0cff384495683192b06bd985cdd7a54632a",
      "f09f7888aa5aeaf88a2a44aea768d9a8747e97d2",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "03a521297fc5b68ddfbcbf3ce46ed4b7ffd799c4",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "6771512ff0ede5ddaacd2aed17b51db586651790",
      "642d0f49b7826adcf986616f4af77e736229990f",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "43a2183ac92a3ac892a0084d98bfdce2b5dd519b",
      "7c155186b86dd03d3f0b0db748694b76f1f53f83",
      "6f809397f611c0e7e0a55cca8b7f4e065e51f493",
      "cb89a25141febad0c14d080e2791c506ae6e4a76",
      "ef4481cbc18c91e7bf0e53693bb77f3608743626",
      "f75d683b62493bf5d1a166547115bbf83e3c1fa5",
      "d08a0eb7024dff5c4fabd58144a38031633d4e1a",
      "05e2ca9357bcf542a33b3f97310d9f477cd0776f",
      "d5906006e6efc5dbc02878d76407326eb56c363a",
      "e21cb9cc7470f3c94c44ac58c6de22303add3bf8",
      "1d03e4bebc9cf3c3fdd9204504d92b20d97d1fdf",
      "83cee2606be3ceda59ef28fe1a9f179cd4e1144d",
      null,
      "3efd851140aa28e95221b55fcc5659eea97b172d"
    ]
  },
  {
    "paperId": "0c57e17102896e9bf356e89d5daca93f8ef7a2f7",
    "title": "EEG-Based Emotion Recognition Using Regularized Graph Neural Networks",
    "abstract": "Electroencephalography (EEG) measures the neuronal activities in different brain regions via electrodes. Many existing studies on EEG-based emotion recognition do not fully exploit the topology of EEG channels. In this article, we propose a regularized graph neural network (RGNN) for EEG-based emotion recognition. RGNN considers the biological topology among different brain regions to capture both local and global relations among different EEG channels. Specifically, we model the inter-channel relations in EEG signals via an adjacency matrix in a graph neural network where the connection and sparseness of the adjacency matrix are inspired by neuroscience theories of human brain organization. In addition, we propose two regularizers, namely node-wise domain adversarial training (NodeDAT) and emotion-aware distribution learning (EmotionDL), to better handle cross-subject EEG variations and noisy labels, respectively. Extensive experiments on two public datasets, SEED, and SEED-IV, demonstrate the superior performance of our model than state-of-the-art models in most experimental settings. Moreover, ablation studies show that the proposed adjacency matrix and two regularizers contribute consistent and significant gain to the performance of our RGNN model. Finally, investigations on the neuronal activities reveal important brain regions and inter-channel relations for EEG-based emotion recognition.",
    "citationCount": 535,
    "references": [
      "3e28d4357af48c48b7338bffeace90412690606f",
      "33780d6c82a0c060a9a35fd07effbd2fbb3e5b82",
      "bffbaa9680bb8421aa709a509c9572eeba91e26f",
      "baedd244794e35e11712ba2241f64b9eec27e7e3",
      "edcae016bc586ac044fbeb11b12a9369ed5110ca",
      "3d877fb0e383832224c996ba0d397c1454bfdd0a",
      "dc60427b9d59794aba70c9b9f380a26e4d6dc1ad",
      "6778368df92310ff447365f2145d50282334e93f",
      "53c36c1e5f8639457ffe6db25515e2f8ad25f61e",
      "69906b74ee369cd25522ec432ecbc601a77c9d87",
      "7e71eedb078181873a56f2adcfef9dddaeb95602",
      "5ebef85aa9c97c0cbf60e095e82fcd15ba00a81d",
      "1c2a293b00546808a3ad9bb1fe6f107210c759ae",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "d60bb80e567976083be962e8036d75484a9cc0bc",
      "8195787260dfc6bc9abea3b1dac1ce15f747caa2",
      "8f535923a8daabf02633408dca1548010468d70b",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "c4c4bc0367ec099f1e00a7700332cd0bf393aa55",
      "a74f7801370dcf1aee1ef688f5e61da233cf14bd",
      "5b1a93f3208733b71adb7bdb2c4322bf0d152d5c",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "d8286a838080720cb3ad9e851483cf3ba749e506",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "fd4537b92ab9fa7c653e9e5b9c4f815914a498c0",
      "038f9a3515ee278bf01eca8e79b3063a84d68e5b",
      "a5b2fb8711d5771bcb078a1e21430dc5a642095a",
      "776a7bb32d774bc05b2476f16cb37ba05cfab2bf",
      "5606902be2e141a96458edbf9f9aca790fbf05c0",
      "d105daff8a2991e85f631a61d1f55f7915f1d696",
      "02567fd428a675ca91a0c6786f47f3e35881bcbd",
      "91d331d2bdd5fc86400c40c497bcb4c741c652be",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "182e7fdf10677aa8d7722d195d9d8dcbcf381b78",
      "a17a3f30b8c17d03abab5a3b16bd6bbb2925b638",
      "d27e12512c59cb80024e1ce6c0af98f951280be3",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "2623847aeeac58f976a4f94d556bf8488b5d5b63",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "1d5972b32a9b5a455a6eef389de5b7fca25771ad",
      "dd05ce86cacf50e3aee70d633040241923deb120",
      "568565b63928a37d29b9ede61e096d1a5131942b",
      "5139a91a2769fac032f21a71f91946da7df0b582",
      "0e99a3b5fc76c927e798355f573c3b65eb8e3ffa",
      "144e664a033e1883535aa0867421bc5a33f6a750",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "77e3c48aa10535276e7f570a3af594ba63de7d65",
      "2b84630680e2c906f8d7ac528e2eb32c99ef203a",
      "007464b4564d2fff325bfb85b2a2ee8c20e3fd3e",
      "5c490be1858af6a6b55e238f0f4a6b2b85613095",
      "9f59d0a003558066d2ff4fc1c77f461b4d233663",
      "0b544dfe355a5070b60986319a3f51fb45d1348e",
      "d443ff1955e9d544063693ce29016f94b98e6ab3",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "28ef938aaa312d76df988f636e248a6b267b6352",
      "0f38481a31af65a0d43daeebc8fafc0a8d7c3943",
      "9153ab92bdac1e49cd0350b8de3a2b5f320202e4",
      "e29c5a780db4315fcaadb8fdd55326d446458e03",
      "84069287da0a6b488b8c933f3cb5be759cb6237e",
      "4cb0081a80c556bf14d707416adfcb4841c173f6",
      "225f78ae8a44723c136646044fd5c5d7f1d3d15a",
      "5dcf01ea9d3585ff11a84f4c9c96af1abdedf683",
      "1a7e0185b705a5a5bdb2f43e0a247f4d244b9617",
      "eca7a76e09679c5d9d44349ae3073aa18bb49460",
      "ea9d2a2b4ce11aaf85136840c65f3bc9c03ab649",
      "1dae4d61cd74cc919ecc638bde6b7125728ea97b",
      "59cdf849049627e4c30f3bd866e3a7e03e893251",
      "b55dfb180030e51e280c5660e7351bbaee7d2d19",
      "af8835c8960e539cc33f5375861efaedec1fb0b2",
      "007e186fd05b41f68b03d1ef0a5a65bebf1d6b83",
      "529a168e72be26837fc97188a22508f9e63596f1",
      "b4bc236419099682174d3101791897aaf7fdc576",
      "c63a8640e5d426b1c8b0ca2ea45c20c265b3f2ad",
      "b5e242ff9c790f7d1caeca1f33828fdd61ed76b2",
      "c6131070de6ee810719dd3e4aa288095501aca95",
      "c8c84268d8decd05d996a9ef4b977a00fd227893",
      "75d82765de0900fed1a7a073415d8f7c625f79e8",
      "4dd5d605ff615e9be0362eb29d39029a62d4c134",
      "92397d365cbdf5452ff302d445987055b3a46098",
      "1be9ebd9025728bca1a69cebc559af5b91ae560c",
      "d4f0dd763956cdab201df6a9c1dc5f65128631f7",
      "c054360ec3ccadae977fdd0d77694c9655478a41",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      "9c03003f02ab5264b3a4aab841c09df4a4468eec",
      "34f25a8704614163c4095b3ee2fc969b60de4698",
      "5116b7902c40aeabae80b2dd639afb9c32f20a1a",
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      "a5aad5abb32f6b15f31b92312bb3b0f7b6470977",
      "342e20a754969961e5f2ce8ac232bd26e41439a1",
      null,
      null
    ]
  },
  {
    "paperId": "b25b4d70b62d8482c98c2b901f4a7e1600df3a72",
    "title": "Finding Global Homophily in Graph Neural Networks When Meeting Heterophily",
    "abstract": "We investigate graph neural networks on graphs with heterophily. Some existing methods amplify a node's neighborhood with multi-hop neighbors to include more nodes with homophily. However, it is a significant challenge to set personalized neighborhood sizes for different nodes. Further, for other homophilous nodes excluded in the neighborhood, they are ignored for information aggregation. To address these problems, we propose two models GloGNN and GloGNN++, which generate a node's embedding by aggregating information from global nodes in the graph. In each layer, both models learn a coefficient matrix to capture the correlations between nodes, based on which neighborhood aggregation is performed. The coefficient matrix allows signed values and is derived from an optimization problem that has a closed-form solution. We further accelerate neighborhood aggregation and derive a linear time complexity. We theoretically explain the models' effectiveness by proving that both the coefficient matrix and the generated node embedding matrix have the desired grouping effect. We conduct extensive experiments to compare our models against 11 other competitors on 15 benchmark datasets in a wide range of domains, scales and graph heterophilies. Experimental results show that our methods achieve superior performance and are also very efficient.",
    "citationCount": 196,
    "references": [
      "089bb1ecce75936eda1890f8e40a56d4c811dd33",
      "7544db2ae3140081b1581a99eee88960cc31415a",
      "4bc7d63595d194a6e0930019764216e6b42da0d4",
      "87fea354c68b77b4429dc8862a79e95fac3b3ae4",
      "35f209f3644be4b8d40a1ae91b0c9f2c82eb9f3f",
      "5b1ce73eee6d80a3897bb03468b067f6583fdba8",
      "a8ae2d8232db04d88cf622e5fabd11da3163aa8f",
      "33b75e9094968c060238d54f1026dbc3c8ab66f7",
      "639206a9a32d91386924f1c94e9760dfb43df72e",
      "1d81e7f428fea2b2e15ee3a96fe843ca603acc4c",
      "21e33bd0ad95ee1f79d8b778e693fd316cbb72d4",
      "0ee0801ba010a441403f9ed666ef9bf006b3aa07",
      "58f45d9307a6901a360c94fef2501aef2415b434",
      "0dc14473859b1cb56c82d9e388a575c3e7813603",
      "04f3203f1214063436d81ce0c2ad7623204da488",
      "38293873cce681b857b3c1d73f5590f641f3dc42",
      "0a6a9e6d4e3efd7c69357769305b70097281655f",
      "f5252075bb34666863cd01cc82c2d941d4ffe6c6",
      "4efb9a950f252138a30eeb942ed02663a3ea29d1",
      "ac225094aab9e7b629bc5b3343e026dea0200c70",
      "7f77058976e2fe75e98280371962c43d98c98321",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "30c4020f1156cec4e46b24a3a2d22b03e9b30086",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "7335bc7aa7e4922e7ab138c94ea0a0bc06d3056d",
      "29308c1bcccbdd5fd5d008b92d45bc04f0338a59",
      "bd569acc57705863f8de3a26853471e7b93e66f0",
      "b0b08e739aa5a674430c54e4e7e540ce81ea5b2a",
      "228bafce55e6f1cbe2c1df75b1949a1fb9c93eb3",
      "9d557d85c206ddbf1b9fb1ad0c848a64e0973360",
      null
    ]
  },
  {
    "paperId": "02a3452a5f7fe42ba32bbf30af28b7845b2d6857",
    "title": "Graph Neural Networks for Graphs with Heterophily: A Survey",
    "abstract": "Recent years have witnessed fast developments of graph neural networks (GNNs) that have benefited myriads of graph analytic tasks and applications. In general, most GNNs depend on the homophily assumption that nodes belonging to the same class are more likely to be connected. However, as a ubiquitous graph property in numerous real-world scenarios, heterophily, i.e., nodes with different labels tend to be linked, significantly limits the performance of tailor-made homophilic GNNs. Hence, GNNs for heterophilic graphs are gaining increasing research attention to enhance graph learning with heterophily. In this paper, we provide a comprehensive review of GNNs for heterophilic graphs. Specifically, we propose a systematic taxonomy that essentially governs existing heterophilic GNN models, along with a general summary and detailed analysis. Furthermore, we discuss the correlation between graph heterophily and various graph research domains, aiming to facilitate the development of more effective GNNs across a spectrum of practical applications and learning tasks in the graph research community. In the end, we point out the potential directions to advance and stimulate more future research and applications on heterophilic graph learning with GNNs.",
    "citationCount": 227,
    "references": [
      "52b04a4b11acec2109edf2d99aa7765a9ea50848",
      "1b2255ce3a17f1f33d94b832482d65c23acd6fb0",
      "db27a18d04e22ddc91ff74204e074c1aaa6d239b",
      "80568b425b09e53debcfd23929ba68595874c8de",
      "3e9b31689c3e53ff081a7814a1f621168aab7780",
      "38db6b7876147a0710b9f396661d43e50375d01b",
      "08ce4bdb94f410bf0f536bc602be3d20655cec52",
      "459f7110dc6381b70c354b79857a1a717887be5c",
      "7975b4a71236acb1e48714e8dd7a2a770bf3c0a3",
      "14a5204d6e5f27c825882cc1885691a696c59be1",
      "4a76ea74e48ee96a0b846c58a843b2031da7b9de",
      "46d9e597157614cfb70cd1e6bda4f64c20966b85",
      "457b7dc04944d960fac7a971f09b783465d7eb44",
      "b3568603a8ea91685a4a5b161ed19423444368b7",
      "06d1497141b8f3fc6eeff0c22fa6885a963d04d3",
      "39dec40cf83071f5824fabeebbce6d813b0f40ce",
      "6ef892cd47300c56a72ff67bc7b87b43b3654e16",
      "a73137f4c21e2fb1845d5f50dc7bf286036a8b67",
      "e8876edb25a01b1e6737f29d234518e4ba700cb3",
      "82bb898efad7e1db5e8aa41d55096da0fd269538",
      "4cc32f4f571b226ca1fd7adef1c480e94d60d98f",
      "d4e7c0adcfd867bd4f35dc2bcec7ec2f60ce6fd2",
      "b29aec89e64bb20f2b963e5615c79b9008ecfd88",
      "d06cc669af1ef41fbdd8934a2c9d089d4007ab37",
      "283616a044937f517cfb14be3a42dbe9506db401",
      "c4699cc29773700e0620f02fd9d21333e25402e0",
      "77acf0deac58eab468c53b9ced70431bd132dccb",
      "2e07cb3b81747e3f81ff386a846a22fd650d67f9",
      "2ed8c2bd85849efa3b854508aeab257e9efc9eb9",
      "f50c92916832fba9e0e56fa781b0a03b3e07f3d4",
      "01f0c37654519f18081a95844ddc22feeaab7e08",
      "586bc7191c90f0fb4132946dc22c61a5f6b8d81e",
      "0cde51d846952f5b5e6811313e2257fff9642dad",
      "73bac2bf125f6d21d2eec79aa2fc31bcddbb1b7d",
      "b7394e219eb2b3f39db5bfc49187e91bb09a902d",
      "ae28c99fc1024c1b5e4da659164a84ec63f6d372",
      "2f829f0d68974d37cdcf73281fbfac8a77870243",
      "66bf10f0ebaefcfba47775c3f6e0995625ea110b",
      "ac9c0dc294ddbfeb4c0694ae3c237b054ac591a1",
      "b25b4d70b62d8482c98c2b901f4a7e1600df3a72",
      "724a381d79e414e2c75b7f3918704bbd264dda8b",
      "d3fb40fdca4162a5749132317c52d24359f92aba",
      "409ad3c79a06c55c17fdfc10fcdd8af09d96fddd",
      "bdc2d3f191982c7760aa024fc798d80058085149",
      "854b41b4bc1254b68cb7242b15341fe70461139f",
      "53c78d269b292193752eac730c8a3f546dce68ee",
      "9e3643f598d648e2701e2ae150f5e3351e0c5873",
      "2d6bd8ae17776d82d4d1f63038cb0a4731543758",
      "666949d30c9500a7654d4f3a90bca7575d3b6285",
      "a8d0fdfaf2aa42f7a90ba90a865849cfad70778b",
      "b8a1a2a81383aabfc719548af0b693e06e48b4a0",
      "32983bf915d9b420ee96b8b1b19317b02cd6d844",
      "98b74858831ae4218d91de91f980893eb13ce870",
      "601d8306dac894f999542018519f8587285783a8",
      "cc827043e6c5be8337df4edb155096f9d0006020",
      "089bb1ecce75936eda1890f8e40a56d4c811dd33",
      "36d5fcfd6d4f764d38171548600dbfc6c5eff674",
      "abc881f2c2c12716c4ccc462c74d2d99ca14c601",
      "7544db2ae3140081b1581a99eee88960cc31415a",
      "c2006bab73ecb2fb0f880786db34afe7277e3629",
      "0a8bcccd8acc7ec899b57d4ba76db4ee21295092",
      "f768a0ba44953585e7a1524d300b6b39032957cf",
      "35067cc8153b7e6270797fffaefc5c9cefdfe515",
      "4878686f9b126a1fdcbdb374a4c98855a4961ca8",
      "8a1e3d41ea3d730e562d8c19b2bdb50a23208842",
      "4bc7d63595d194a6e0930019764216e6b42da0d4",
      "dacb5c0417f129295d6279bf3dd3ef059698c947",
      "161962accc739f356ad172339aa165d45ef57687",
      "0cb5c433cf5c974f31c53208eadd7fa94d1330ba",
      "5b1ce73eee6d80a3897bb03468b067f6583fdba8",
      "875aaeb4bb7d0ee9f96f8ffdcce19c3d52390c89",
      "fbc136c8c81cd89206dc0fcb54e16bd98df83b62",
      "9d6039c022cdab1ea78a562aedd3b5e6a7b67eb6",
      "792a9914cbaacbab1ce2e5de9a7f5eee3afb9766",
      "d9f5ec342df97e060b527a8bc18ae4e97401f246",
      "402b27b96cb63360aab2a4ec572f13e30f92ee88",
      "33b75e9094968c060238d54f1026dbc3c8ab66f7",
      "1d81e7f428fea2b2e15ee3a96fe843ca603acc4c",
      "21e33bd0ad95ee1f79d8b778e693fd316cbb72d4",
      "73366d75289c5e37481639fb54fdee28a664e2b3",
      "0ee0801ba010a441403f9ed666ef9bf006b3aa07",
      "0dc14473859b1cb56c82d9e388a575c3e7813603",
      "75e924bd79d27a23f3f93d9b1ab62a779505c8d2",
      "04f3203f1214063436d81ce0c2ad7623204da488",
      "5ef15cbf35a7d70dd5444c8333de6dd82962eb2f",
      "3aab8bea2ba6bd7f076e6f92a504a1e322ca64b8",
      "4b244a6778c95b1df8e9e02332ff8d22e675f628",
      "9fd89d05deb53edc926f3524a8434b685309b928",
      "7d2a53e8a77aa398fa5a4c2043b61a356651c478",
      "135334ea7fdef8eef0367e862797cac7dcd232a4",
      "f5252075bb34666863cd01cc82c2d941d4ffe6c6",
      "fc3e99ebc07b3014f6736a6a7b077edf2f1634c0",
      "05c4eb154ad9512a69569c18d68bc4428ee8bb83",
      "bcfdbb6b8911272139170ef4b24e31d9145093e7",
      "4efb9a950f252138a30eeb942ed02663a3ea29d1",
      "00358a3f17821476d93461192b9229fe7d92bb3f",
      "26a0e0d17910c6676fcfa1cebe0cb7f5cd17080c",
      "7e71eedb078181873a56f2adcfef9dddaeb95602",
      "48640ef269ffeb3e19c961de2eeca027a30841d8",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "daa7ca26eb93267f50dc7a187eecb87a1bf4b96a",
      "9ba0186ed40656329c421f55ada7313293e13f17",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "24c801ce5c73f1e8d9623bfaa57b0f0cf12553e7",
      "30c4020f1156cec4e46b24a3a2d22b03e9b30086",
      "e71668b8ef1f40c24e25218051e5796e56b8e51d",
      "b0b08e739aa5a674430c54e4e7e540ce81ea5b2a",
      "ab6629e4f33443c2f9a7a58c9adc1a936d920f93",
      "b12428b1fa414f09536d06a1eda2a57d077b874a",
      "4fca4a2f53e0038436124aeacbebf0e43c8efcaa",
      "70e0d2487440b519b392503f4fa6b94891238c90",
      "322cfc0af8b29eff694bc80bca5e456b35e400cc",
      "54d29a4cf71eabb6b17fbeca46e19084bc46ef55",
      "b2ce9a93c7d1037369772518531071073936c041",
      "7dc6d85d9daac4edf904bcab741a0063dd7ffd08",
      "62c37b88f7660735242894dd9c8cfce1f8b62c5f",
      "de028b4a2494846ef4e515ef71ab01f1b6a11227",
      "80268d1413fadfb988051fb9fe917021250372e1",
      "52d8ad3efef361b30881c06013681b594dfa9ff3",
      "ea7e48e1c877aee481b3af40872d7f2b6cd159f7",
      "40b6905928547987fa7feb05e1c7ecb1d45f6239",
      "98e5907997d5fa2c0a334044dc286d740f310e45",
      "031c91808a7c3fe1aa3c23b0512876e8b56caedc",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      "3345443925cec95381c2cf2f0b029c411945bfef",
      "e93ff62dd1505d9ac5c61f7fdeb3892401f6ad47",
      null,
      null,
      null
    ]
  },
  {
    "paperId": "f1e5e65941617604923225cc4bf464e370fcae67",
    "title": "Combining Label Propagation and Simple Models Out-performs Graph Neural Networks",
    "abstract": "Graph Neural Networks (GNNs) are the predominant technique for learning over graphs. However, there is relatively little understanding of why GNNs are successful in practice and whether they are necessary for good performance. Here, we show that for many standard transductive node classification benchmarks, we can exceed or match the performance of state-of-the-art GNNs by combining shallow models that ignore the graph structure with two simple post-processing steps that exploit correlation in the label structure: (i) an \"error correlation\" that spreads residual errors in training data to correct errors in test data and (ii) a \"prediction correlation\" that smooths the predictions on the test data. We call this overall procedure Correct and Smooth (C&S), and the post-processing steps are implemented via simple modifications to standard label propagation techniques from early graph-based semi-supervised learning methods. Our approach exceeds or nearly matches the performance of state-of-the-art GNNs on a wide variety of benchmarks, with just a small fraction of the parameters and orders of magnitude faster runtime. For instance, we exceed the best known GNN performance on the OGB-Products dataset with 137 times fewer parameters and greater than 100 times less training time. The performance of our methods highlights how directly incorporating label information into the learning algorithm (as was done in traditional techniques) yields easy and substantial performance gains. We can also incorporate our techniques into big GNN models, providing modest gains. Our code for the OGB results is at this https URL.",
    "citationCount": 283,
    "references": [
      "f5623cd36228c0606c1dbcd3ab034df24c58312f",
      "8dd90b0648da4cb0e1f18ba1f00b158a157d3631",
      "1d81e7f428fea2b2e15ee3a96fe843ca603acc4c",
      "3da4626411d83c19c9919bb41dba94fff88da90e",
      "ff19c0f5da38cdde8d625ed36536fd66198a15c5",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "993377a3fc8334558463b82053904e3d684f29c0",
      "e1d960b393feed49a37c94dd0d331608d232d53d",
      "c397fdc468eb878db233dc80bf65a35a5b87a80e",
      "3c8a456509e6c0805354bd40a35e3f2dbf8069b1",
      "0a6a9e6d4e3efd7c69357769305b70097281655f",
      "a050d3dc7aa83eec09794f29e48beaac6113ce30",
      "fc3e99ebc07b3014f6736a6a7b077edf2f1634c0",
      "fba8ef1c0908a37e6fb2d13b27eae0ad53c6d554",
      "2d50a0c6077f646f638b622051d531873e626749",
      "168e987abf3d17038ee0963d16a2052334457db1",
      "4e7dd1e79f0f13650b2612325e6ba8d206dc04fb",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "7e71eedb078181873a56f2adcfef9dddaeb95602",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "ac225094aab9e7b629bc5b3343e026dea0200c70",
      "5df8b7279e0d80b6f418f7d5cb79b27cdba9ed16",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "04ce770dbae1bfdcc66643726324206634d48055",
      "7dd9dc6efe8af57978c4711540619fc47f565033",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "ecf6c42d84351f34e1625a6a2e4cc6526da45c74",
      "f2ab3c4e6fae8e666cc68ba1b5672dfddea71123",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "d93fea6974ea93cf3416175ac606d01d16f4cebe",
      "0ca192df19f4bb1d896708b6bb32a4b0cd141134",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "36ee2c8bd605afd48035d15fdc6b8c8842363376",
      "3d846cb01f6a975554035d2210b578ca61344b22",
      "a32698a8102e302710aaf50c4c33d1906d41f004",
      "199369d8eaff23e00c106ef2ddc4181696600c1f",
      "7d07cf95a246f2ed1380ebe249889929cf18a67a",
      "cc507e7bfd39c2cd4f99254728d2e75f62d35ab7",
      "c5a3889e8c5e91ac09c3ca06ae603772613ee828",
      "4e108f9eefc36525e121c236234d9658c7aa9bbe",
      "69dc367c30240fcbbde0a2be04f16b02f2f7e73e",
      "aba50e02e6a798e69c5c7419bca38ddaaf1c4b90",
      "29752f2f4a40df45a6eb61afb7c347f1799b1f45",
      "46770a8e7e2af28f5253e5961f709be74e34c1f6",
      "125842668eab7decac136db8a59d392dc5e4e395",
      "784220a5a2ad452282f8af006a6cb5715d54d0ed",
      "49b8dff62cccc26023c876460234bf29084a382f",
      "0ed877bab75b32042a887715380c84ac27e64a8b",
      "228bafce55e6f1cbe2c1df75b1949a1fb9c93eb3",
      "4cc1ce96bfa2ad8af16dbd0c2356a2cb5a476c24",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      null,
      "e6b889abd43372bb655855e88c798435f7e13dd5",
      "efac04450c531b3769451a886ed9a42fce4754d9",
      null,
      "a007f46b3303bdb50e705b441c367e595666538c",
      "6bbc0c752570c46a772f2982728f9ad4191f25dd",
      null,
      null
    ]
  },
  {
    "paperId": "81fee2fd4bc007fda9a1b1d81e4de66ded867215",
    "title": "Graph neural networks for materials science and chemistry",
    "abstract": "Machine learning plays an increasingly important role in many areas of chemistry and materials science, being used to predict materials properties, accelerate simulations, design new structures, and predict synthesis routes of new materials. Graph neural networks (GNNs) are one of the fastest growing classes of machine learning models. They are of particular relevance for chemistry and materials science, as they directly work on a graph or structural representation of molecules and materials and therefore have full access to all relevant information required to characterize materials. In this Review, we provide an overview of the basic principles of GNNs, widely used datasets, and state-of-the-art architectures, followed by a discussion of a wide range of recent applications of GNNs in chemistry and materials science, and concluding with a road-map for the further development and application of GNNs. Graph neural networks are machine learning models that directly access the structural representation of molecules and materials. This Review discusses state-of-the-art architectures and applications of graph neural networks in materials science and chemistry, indicating a possible road-map for their further development.",
    "citationCount": 422,
    "references": [
      "02a6474812c0847def08d838570dcad3ef9ffdbd",
      "6929211a6bfdd6b066f26a6ec439542d8fcce6e2",
      "2c080875d9bcf201ed9375ce275cd3a83e38b3cd",
      "94e32a898cc8c62c5a25fb9fa01e94c21fd41da5",
      "d358ce242dacfd2ea738aa538779f06c79777f2b",
      "9177fce0beec50b8cd69c6452e0e448393c1d3e2",
      "aa3c9d8156b3ab6ea728b4f412401bbedd6dac06",
      "cd46517a71ab822628bb2045da0098596eb6efe1",
      "a6f98dd6e74e26b2cb814179f2117e6f01ebfba3",
      "a82ecc5f2e8062c369c221ff5089e983fad9437b",
      "200c7020b5de120da476603f52ba295a7622f75a",
      "436210f50810f489f11aef00e3061284b0c04617",
      "6296aa7cab06eaf058f7291040b320b5a83c0091",
      "62ebebbd2fbd92394c8ef007498adef963209718",
      "9791ae512e6b1f6130afbd80cceef6e39986efc1",
      "b7a0559d093bb2f61a1774aedc87e6f645c20a99",
      "a4bd7e965edb65d73f975bece566c7eb03e09f71",
      "227073dc88973d2093fe29c54d3cef73dfa73b18",
      "0cced303feb420a14b7ca6a6e2e7cb84d2741756",
      "f8d9db8c628083af0eaee2427fd22870ab6cccd0",
      "f50f877b07d64f116de7bf161cf009d2ebad7d15",
      "d420253d38e08881969ed1e3afbe6e1ef3fe1368",
      "cfcfa7d260aa8a66fefbf2854bf53f17cf0e1fde",
      "27b95eafabf9dd767bcef5948c08d5650bf283c4",
      "cf0d314c36e93be25aae15fa775c4bdae6463f44",
      "9e5104b84bd772876a46e6fafb560ef8a7076629",
      "55613726289b4fdb2f4ad057ed4cd82d778cde4d",
      "2a93c64bb69442a8cd0c48a7ede518073df8b4ca",
      "24e291fba483071eeeb49ed534fcc76b95142ee5",
      "3598826258fff8d71a5221bc579055f9bab45448",
      "ce906992b69cc4417fd07261c4a6826d23fe4eca",
      "c95188330638da9496e310a40fb69ce7ef5b5233",
      "310442928e1904b9c7a7a8f11a4fada183588529",
      "b1588b964e28d3e5982314cbc9113595b6af8baa",
      "9bb5a7a2dba005288744c105431c799b88d45908",
      "1b7c6548658e03a6f6be0fab387d90ae1cd378f3",
      "85da6c156e97eb5f731d69214684d948829477e9",
      "41c3624512a6b249444b374e5767c108fb240650",
      "d9387781edcb27bc6d0ebc0e8be16baa726919b8",
      "388dde9424fd4ee0cb97a179cb377ad929674ec0",
      "47883928702efd21c23a4092e65cbcf9f29970aa",
      "cb5323ef22a5a38cfba318abadcadee822ccf8a9",
      "7d81ecf81fd6455da1a5c615b2e2fe17a939d268",
      "28b5dfe6035013e9345ec4a3eef5f0c5307a3fcb",
      "5542d0ff99767f75f8c8a329fc3d88d73ff470c3",
      "ab30672c8c5e4787f6a5985f26a8f281f0db2fb8",
      "fdadbd8b22b249dc9422b2c4681f45c6f288a798",
      "d40a41faea989c5cdeeda0326b203877a8f59146",
      "4efa91e9012bf58b8190fda9a3ff858b1ae0fd86",
      "69bab843432803a8f69ffa7c33779f205e843841",
      "13000da677d64afb1cf4639ab8b4e338ba73823a",
      "5870f4c9a679a8dff0bd3ad4c62686eabcf26efb",
      "83974053bd156046068e12f7bb620e16601d396c",
      "758294483c308d9d6028321f0741b6e4617c9ab9",
      "b9bd9a18700bfc0b4d253ae20e7f433153cc97e8",
      "b77b20880d73fd54204b1987a889187113121dc0",
      "487ca567a0f2e3ef4ea11c1deccbd2312b2f46be",
      "8ea9cb53779a8c1bb0e53764f88669bd7edf38f0",
      "0d4ac0cb06d3c8536fcccdf303e8402db766c400",
      "f996f2521078b0ff376cecaad9575e59d89f884b",
      "00f39c314542902cd1b03842069e5d3ed441a5c3",
      "983711ff24b453116f9f5fd32ac75ea0440f3281",
      "ba22cfff05cad65204860e34c2bb3cdd5f5e8f22",
      "fcb64bad8a87c484d52e5be20164280b5a7bbd8b",
      "7456dea3a3646f2df6392773a196a5abd0d53b11",
      "d04bb5a641eb7e96e0b12bd9c0fc0c9e00a48efa",
      "c376a96da240f77b9dd3701b1340afb41cf88434",
      "65d33a4a01a793f9a63e603d4208275551b22f1a",
      "c5f7ce181345946c0b031253055fd1a9537853fa",
      "b9de002481d5b280ab818b3640510c62f44b95c1",
      "da4d4c1c51411e6f04d220d9d42ed1d3e38d9a43",
      "a50f37cdd0614567ef52ffa63c70285d97630ce4",
      "6195b623a13e861741ac1e80a7a8b774d5332236",
      "9c575c388947e9ff37f6023853c83421c1a3614b",
      "751816df0027c0ae6c337ba392a5447bef86ca77",
      "a1f49dd940bd65a4db02a7908117ac3217a5e8c4",
      "dd44f807cf329e0078411bfd86b1db1de912a361",
      "a96fb2254afaa74eb1fdc41dd0359439f67313d2",
      "48127ddbaa5100c3306a30aece3c02bad2cae268",
      "75621ceedad3ae5255372bd6f8c6add07309801c",
      "ec62a5cdb80d888f21533a307c42029a311bdad6",
      "966ea7df97a5c38d04710dd4bb393b8acaef4d9a",
      "19d7483e35015a910539372c6dbfb7abb8894bba",
      "30827cfdabbb8e1f02c6fd7c188d5a7e6b05c6da",
      "be4faf0555f8610d6c813dc591bee21376f67a09",
      "9dd4529d6262b8a669e63f8d9a1a28559cb45e86",
      "5acdfade1d39717667ae0fb6d75bc699206143a9",
      "08257eb1faa19c29ddcc31d7d749c9bd262213c5",
      "d8852326105b4563904803847462cb7e14d5cc1e",
      "924bd716b3e4fb804bb08f757b10d6ad0b055f09",
      "a9cb3e7c2fb43d1cc4bafaffd677db3d82571b42",
      "4e25bf7dba6c665f2c018604e5652389cfce19cb",
      "fc56572b7524d0b5b0e4770f57185b20d9294136",
      "b9c4ec6e99dd57ff3b4f04d324a22e6c48dc2064",
      "fe4b3a263bade6b122522f41143cf1e98efb375e",
      "59b9180cacb78ebb90960fb496ed449816faf267",
      "3120e29f9827a06b61dc9505732452e40d495e5c",
      "84f0fc3a5819f3c9cd77930c2d84c0054a4bae49",
      "3302081b8878de505b69900e22b8137c5d931be7",
      "b88741c01dd8769c4c4be09fcaab7e2c0e63a716",
      "3eebd740c00194d11c435d293bb6c5f04d1aed60",
      "aafe5db74426b9bde0faa1fa46cff8c636aa9bfa",
      "c90cc187ff89a7a0b39fa59f7fff41f80d5006bb",
      "600a10fa7af9e8e37fa3fff0b39233344c9755d9",
      "a623a6a45679a095e588fdbaa68e992fe9b1e11e",
      "01116fdc747a4b2de7fa29ec1313fbdf7d1d6491",
      "6075091294a0fe0fe5c6c7b7a0df9029b6a965cb",
      "7f1637319a9ecf74f8afdeac4baaa6bb48fd7eb2",
      "293f240a08809a3e70b2c2e2f7e02bd62d860f8f",
      "9745b5bdc430b1f9b15ab3b71157f2ebaade9830",
      "f5ef0247f9bf19e1774da660b58bb4ac18108fa4",
      "61b283c5ac6f83bdcbbe571aed2f529b7cdbcac7",
      "3bfa808ce20b2736708c3fc0b9443635e3f133a7",
      "0eb4769dd56ffa6a8da5b45b27c730c94ece17f1",
      "d2581888ebf3d9d7ed9ea156244c4df0183af824",
      "69515e4f008d11b67aad6614c83a353db176978a",
      "7e6dccb67a11d24e40a5063ef6825d6aef13d126",
      "3d27fd09132a9978ce5bb04dff5fd4560e25f563",
      "7a668b419af980658a67ee7183c93d6709103269",
      "6b68946e37ad95c812183d08607f9ad82019810a",
      "7aa0a5d433d207deee79e971c52ee6a0b3a3b479",
      "121d4fd7438010bb332941fb0a88b0907ed6e4cf",
      "48fb992662bcbdd0e09e93ffe80362af1926a858",
      "6c58f49174668c309475a1182f8512a7bc01d2fd",
      "28b541e86b104d188e72c2e3fb900790d1c0d300",
      "6bc4004347cdf76d84597210796f38fcf7a01a80",
      "1d217bf5a66a8d13f3adfbb775989aa0fe407c06",
      "bf7c2861dd126fb80d68e86a639d0249cc1d49c2",
      "602760ecff9d783f527dbffe3b9ec292000f4d30",
      "563ca4cda06665f4b90f8fce9bcb28c02e6872b9",
      "f7b550cba2d61b3fb676e72c92c245134363fda1",
      "eaaf53202a815c6f6dbafddf1e873778921da90e",
      "355601688c5c567bc5900c2ed09941538bfed960",
      "7c78452937f1ba2d332c98bf4e8254188c0f1266",
      "b05342ee8cc6b45f88741b3000ca0671f063edb7",
      "decf6688cb1d8f37cee7f5af670ae070a0b4305d",
      "eef9e798d326fd865eed86707a00da79b511a995",
      "973cfdc47aef3f9bdd6e39651f48acbbaeaadd94",
      "73bc990757d54f2161eceacd330e0aeb189393bf",
      "39e1d05c7954dabaeb99cc553a4f7599573055bf",
      "59faa10774018ff79aa5ef3f89d254e88aabcc2b",
      "cc453649a6830bb7e4ced7e353e16d186df8d442",
      "501c02c7caa7fc2c7077405299b4cbe7d294b170",
      "87da4c90c52b52eaae7aced8a9fbe17d28a27e9f",
      "c2c5a87355356495f90d1200f96d6435b265ff05",
      "d474bf3cac3f3824778dbc494bd2e89f6f8e57dc",
      "47a9ce352538ad98db80ccf3d08de4dccfe33e4c",
      "27fb0382907acc7ba9ae05f65ab4884d6a7ca7c6",
      "784b018c87c7dcbbe772374e45d5191bae9938ee",
      "19af82973b785c66c3033377eebca4513e106879",
      "b91332c67e19b0f0e6c9546dc47bda75c9082488",
      "ac0f9bd6d00644215515be42d203f59945a41107",
      "467fe8190f9ffbbd860beec735f3b8154984d9e7",
      "c41ada18c39a7e07dd982a1bb6046369f9dc3e3a",
      "907a993066b9c922aa3a1d71edd77223dc06c762",
      "381411d740562de1e766dc8cc833844eb99dde01",
      "a5608898e2735ee78e74e2ff1f55a5e8c8110abc",
      "873b045dea18c2092b2c11e7b9542dd93ce84d65",
      "cee5a1c93678245daf871e21c4fc9a7898771370",
      "59e0158955d34aa4bdb61a971d8317ea15182489",
      "29cad8772568e77a65f8e6800da3b3ae5002cb1c",
      "333e80cb1be31236c6b20ab7813cb264604d5d9f",
      "3f08d7be405d5f01a1ed295b4100d406f84d131f",
      "b3af16485c5028ebae8819e387a6cbdff352d9c7",
      "da95d02a50b8208a17127987dde3cdf8da455114",
      "53b7828566d5ddec06d9f6ea2f321b1dd7cf7ee5",
      "e2dc066d53f6efbdca28dcd7afee8de23877c7c5",
      "057b594c9e6ed45fc445a4dc45384117bdd15a3e",
      "af296543406b8de74ce8fe76bb5c51ac559f649b",
      "3298f931dc9ca485ad29d4c03ed000862022a082",
      "8cb2822965802a0e344b0b6a3974c39f2268a7e5",
      "f1964cc1b343f907462cd7fbfaf88c2679d61f59",
      "8ccbd4898fd7cecac6823e7caa15c74fca670fbe",
      "daf468f001c3a5c6f9e667417becb94fa83efb2f",
      "ee8b1603c79a4f9c3bdc0d6633b595aa93ff3a0f",
      "33bc44d4d7f2994f61cd224869fe7d2a73bb1733",
      "b5904cd5dbf73b8d5ff13517de490c292d877ee0",
      "0ff76855604fc150ecd36bc8c3197780a8ea2b23",
      "00358a3f17821476d93461192b9229fe7d92bb3f",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "118ba5c0173871b04131a56fe2438d2e3adb9f54",
      "5098df13be6d1f2a31c9fbf85703336ef77a9665",
      "8532da1509610d5770c01f5180ba8788d21f4745",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "d8b65198c37ada92cada81fe315508fc5bdbab8f",
      "f74efb7f8b18ac1c6bdbafc5a6966e2917624a7b",
      "584fdfe1674f23cb0a13f39f5e87a7d07e41740a",
      "de20b6488e148a19ae6c63defbfca8a6373e4110",
      "c3d8fb489e4dfeef912efab64cc7a158f3d816fd",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "31c343d741b31daeab7cce6ddb768767523d185e",
      "67de0bc5d1dfb458efc9aa192c879bf00ee667b3",
      "510d98681e5e85fb1265513728f16e2543ae1b4b",
      "8a0cb93b7a4e0cfe6c8cb6e5cdd0bc199b515ebc",
      "8efd1448b3dc501a91255873bc4a09c62eae3f90",
      "529bf01db3e6b327b34db6723ac826b1047e72d7",
      "14634be2ba7fc603f6387fab733e16f2be59dc9c",
      "175e37bca3762b3a52c6a0e153060b98a251d061",
      "41eb76d9e758130cd0d97e10ac4b59a785b4b089",
      "21b786b3f870fc7fa247c143aa41de88b1fc6141",
      "397b0c1dcead6217dc0e1d2d1a13b37c7d712dc2",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "4da4069d4d72acdcec4eb052d7829b6f0464b391",
      "d9f836a2062864e4808e12224e2286a353498202",
      "57986bf176c164cdd22c664ed2a75db3a0b3dbe0",
      "def1049b5aae96c8e1eab0ca58d77ac9c2f0e3e9",
      "6e3e17ac9a5a25ca718bd2da025a7117c4f03634",
      "b83e7e9a7bf59347eb9bc53ecaf139e301a8b72d",
      "64dfb21fc22523f2fbb1128cc9bd32a904df5e92",
      "20c9be86361523a3b6f2da968d4c313c817913b6",
      "374313c2fc407655ae05eed61005a29cfaa7460b",
      "e1cef464322243feb12ac3f81873c912e071a1a6",
      "6f3370fcf266fc10842b6d3e77c6cadd842a3580",
      "1692506a12ade107daf66bea32db9261d1392ed9",
      "7dd434b3799a6c8c346a1d7ee77d37980a4ef5b9",
      "f32f16ca3c27ff945198c6551a5d35fae3b1a660",
      "fd17bd9a5dc24a081ad9743570f50dd6750f54b2",
      "8913c23081e46a41cc7ced3c2ff379d9cd7afcde",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "14f1f267731c89bbff04fce87b223d73168d8a4e",
      "e9126a98de0c39dcffe4c4f5158e037460196724",
      "f7b1453416d3d95af19ff465104e78968920354d",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "9a0bfcfcc07bde1ba2bfbabe14adb804f76e878e",
      "d133cb102ad0f81e3fd17a7db090b28afc124c4a",
      "8d1131b08f667db2b22406183356247cc7a7eb4f",
      "aaf046c4da99ee6184f3fd31961a9967272152f9",
      "ef8ab2a0be51a0cd04c2c0f01adfae956a2a84af",
      "5dfd89e4e11ffadc19f5c97003e08f4f032d1d8f",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "8674494bd7a076286b905912d26d47f7501c4046",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "9b1e4e897b62085f2f4d731e5c3ec891b76b76cd",
      "b5007972c6f5a2294f83357c73e12664dd7c85b3",
      "413b471ed9ff2ede90bf453d3375d3467d750f2f",
      "e7a4865ca4207263ed4f2b54bb2d580ef0431360",
      "31e12b8d558a7515f3a1e3337551f5f30e466cde",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "cd8a9914d50b0ac63315872530274d158d6aff09",
      "222928303a72d1389b0add8032a31abccbba41b3",
      "d0ab11de3077490c80a08abd0fb8827bac84c454",
      "f09f7888aa5aeaf88a2a44aea768d9a8747e97d2",
      "0e779fd59353a7f1f5b559b9d65fa4bfe367890c",
      "54906484f42e871f7c47bbfe784a358b1448231f",
      "33d9d4593d44792e17a045e5f3407f0fe7a40dd1",
      "4e1f35169edb0debd734e7e5834b5672ca7911e1",
      "441c31274f4535a4a50892c1ad6e19eacfd17f8c",
      "f4c5d13a8e9e80edcd4f69f0eab0b4434364c6dd",
      "32c4e19f4a757f6c6984416b97d69e287d1d0ecd",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "36ea4c0f420fcc1f48e6f44d1ed4aa3ce5c48b47",
      "36ee2c8bd605afd48035d15fdc6b8c8842363376",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "09879f7956dddc2a9328f5c1472feeb8402bcbcf",
      "7c6de5a9e02a779e24504619050c6118f4eac181",
      "fafcaf5ca3fab8dc4fad15c2391c0fdb4a7dc005",
      "377658c944728dfad16f7016c57ea0e3471c6c43",
      "e57683f3eea6176441230c2b30bec2fda4984697",
      "d01379ebb53c66a4ccf5f4959d904dcf9e161e41",
      "c1e62b537f3d30018e7979a89b0e0f15e2b6eecc",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "47900aca2f0b50da3010ad59b394c870f0e6c02e",
      "e49ff72d420c8d72e62a9353e3abc053445e59bd",
      "67c16fe0ba8c60aceabc0b95e600f4cbb062fb23",
      "b889aa874e7683b19ccfa2a47b537a0f83948e72",
      "dc8301b67f98accbb331190dd7bd987952a692af",
      "1eb09fecd75eb27825dce4f964b97f4f5cc399d7",
      "89655dc3c3a794cb25e055aed79424c66301d70f",
      "f0b629d20e54ab62377434c4e5bfaa924bdc25a1",
      "0ce83080316fefe5b224828b1d862721480c5b4d",
      "fff114cbba4f3ba900f33da574283e3de7f26c83",
      "5f5dc5b9a2ba710937e2c413b37b053cd673df02",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "78930538a4b1e31b514e5f70a50efb6ff3d86614",
      "98476502ec663771d41d2f8c948fd176257f17bd",
      "3ced109e0c16014cf4cdd677aeb1b95acf1c35d6",
      "4a77a2ed53529431d816c42ec4554364e80ee18b",
      "369227538d5f6398a09271c8adadc8e4c19270c6",
      "c0df64a8e3d9403368e15480e95c57d91989f5de",
      "99f2d996c8d2ff8e0f667b7237a7ed7de7cc5bf3",
      "e6749a56e8f9927f6968ac99ec3163a016168d5c",
      "021d0c485b602d0a85abcfba69bde334cb8083a8",
      "76df79db0072a846f4f472db6d12928ea9257357",
      "67ff5a2652e8e794d25cf278fffe2695a07ea1a3",
      "52da1e119d033fb2f289878cfa4a624df67378bf",
      "c43025c429b1fbf6f1379f61801a1b40834d62e7",
      "5d0dff55d6302848d59651de1b85e4195e9dff3b",
      "6ccabb3811728bb6a80c4519b1b716cfd6727402",
      "7c1a89a59c0c61f3459a53c8d8f72caa9466fcc3",
      "25a081126295898458fc36caf656f9b770fc5968",
      "6e3c56010e987b1f7b0ebc64d93d0442948cf389",
      "e12c07178f0dc2fcccee21c96ed26f142dc1e08f",
      "20036cd7fac884130f642d3df30b1fd7fb24c6d2",
      "daeabbe2ac3aa90aabf10527090f548fc125e9e6",
      "c740d7a9866c2153b9bf3ecc75b82dc14868a6aa",
      "d61031326150ba23f90e6587c13d99188209250e",
      "f8b6999fa84023803f9666faf0940ffd0219d4ce",
      "2e9d221c206e9503ceb452302d68d10e293f2a10",
      "3e33eca03933caaec671e20692e79d1acc9527e1",
      "9b3719a4fbeadf2c8631660ab3ca6f3b7d7a8a98",
      "5099e38b09dbf810ced09f6d334ef79919fc5408",
      "cfc8d4e44e5250e8544c1ac744766787300e530e",
      "a647578e190c85f04e4b4751ff7434458f23add9",
      "adc22a722f2ad1d972de507779041e340f20a6a2",
      "5c430d30e021add82a0cc97406e4152b3e270d54",
      "88d4ff2a8c5483865832e24ecd362ca64e9035e1",
      "e123acaa48b3d1782eca6107d81d4efc4f9b6ba6",
      "e257655d3d5a5c4ab10fc939be208d9b747c1df7",
      null,
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      "f6bd96e6a14993d66c32bc39767add00c55921e0",
      "7d08932d11d5cf03ac2725250e83ec68f5a0f878",
      "0b7ee9b652b8dfa9f9ff7cb3d36a0a53e8b67812",
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      "6d085938cf889978c48a470095f2499f43c1af30",
      "01bc5be2ca6e648e301b3086c175fb74a57d0132",
      "97efafdb4a3942ab3efba53ded7413199f79c054",
      "0277d214bf6904e79dd44b6f9bd808b47ca4a669",
      "a7b8da0acd4d99240c4e5edb073393c2e4c3469d",
      "e11d7d21868eee0ea96ae8b2fe6b1e13af30356c",
      null,
      null
    ]
  },
  {
    "paperId": "aa1cda29362b9d670d602c7fc6964499d2a364bd",
    "title": "The Surprising Power of Graph Neural Networks with Random Node Initialization",
    "abstract": "Graph neural networks (GNNs) are effective models for representation learning on relational data. However, standard GNNs are limited in their expressive power, as they cannot distinguish graphs beyond the capability of the Weisfeiler-Leman graph isomorphism heuristic. In order to break this expressiveness barrier, GNNs have been enhanced with random node initialization (RNI), where the idea is to train and run the models with randomized initial node features. In this work, we analyze the expressive power of GNNs with RNI, and prove that these models are universal, a first such result for GNNs not relying on computationally demanding higher-order properties. This universality result holds even with partially randomized initial node features, and preserves the invariance properties of GNNs in expectation. We then empirically analyze the effect of RNI on GNNs, based on carefully constructed datasets. Our empirical findings support the superior performance of GNNs with RNI over standard GNNs.",
    "citationCount": 227,
    "references": [
      "dc08220b483bcbe72f09d342cf20bfc739ed540a",
      "45f4585f12ed7310c2dbc487a2aa1ba23c568071",
      "cb42d038ee5c13c2db26d46149b1688d76289291",
      "089733bd8fde54fad4b5e77b1de470bec9e79f54",
      "33e31195ab6853dfb8b1d90b07da5755f9bf5de0",
      "583d9083d2fcc4678427e597cd41adaba9910c26",
      "057b594c9e6ed45fc445a4dc45384117bdd15a3e",
      "d52961a91f03061c6732a69e292bd1e403e7f8b8",
      "b7a6b7adafd01e939c9266083dfba9edea88846c",
      "3f13a5148f7caa51ea946193d261d4f8ed32d81a",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "6541afa4b4061a7d5c8387514bedea9dc249fd80",
      "d9f836a2062864e4808e12224e2286a353498202",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "fe257027193ea4a74fdab99d7509ce4002ad7de6",
      "c751ab01aedc2888a7fe6e8b4f77ab1afa94072f",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "b131ac160af2c3ef91aff47f6578067183ca4c4b",
      "ecf6c42d84351f34e1625a6a2e4cc6526da45c74",
      "f4218274c379e9c57baa399bd18e8df0d1d53d83",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "f63e917638553414526a0cc8550de4ad2d83fe7a",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "ea9d2a2b4ce11aaf85136840c65f3bc9c03ab649",
      "e12c07178f0dc2fcccee21c96ed26f142dc1e08f",
      "7c9b59b2a0afd8bc30a78a6fc1dd64a263bdc5d6",
      "262d9a9cd7b99a6008e59d440c8fadf1f375b51e",
      "11cf4bea8ffde8225eaea72e71b4c8497f240d72",
      "048ce334f8b749edcf6c327a8172552cbcced865",
      "d08a0eb7024dff5c4fabd58144a38031633d4e1a",
      null,
      null,
      "6a7c6e9feab24ccf51ee9e53cbc0b42b9b421a7d",
      "e4351041d25c272a008bcd5765868dc3a28fe470",
      null,
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      "a0e04c7e7a4ea341770aa5f87afdea2240ad56ad"
    ]
  },
  {
    "paperId": "16351ff232f2e475c8d8347809ef905d67998fa5",
    "title": "Graph Neural Networks for Scalable Radio Resource Management: Architecture Design and Theoretical Analysis",
    "abstract": "Deep learning has recently emerged as a disruptive technology to solve challenging radio resource management problems in wireless networks. However, the neural network architectures adopted by existing works suffer from poor scalability and generalization, and lack of interpretability. A long-standing approach to improve scalability and generalization is to incorporate the structures of the target task into the neural network architecture. In this paper, we propose to apply graph neural networks (GNNs) to solve large-scale radio resource management problems, supported by effective neural network architecture design and theoretical analysis. Specifically, we first demonstrate that radio resource management problems can be formulated as graph optimization problems that enjoy a universal permutation equivariance property. We then identify a family of neural networks, named message passing graph neural networks (MPGNNs). It is demonstrated that they not only satisfy the permutation equivariance property, but also can generalize to large-scale problems, while enjoying a high computational efficiency. For interpretablity and theoretical guarantees, we prove the equivalence between MPGNNs and a family of distributed optimization algorithms, which is then used to analyze the performance and generalization of MPGNN-based methods. Extensive simulations, with power control and beamforming as two examples, demonstrate that the proposed method, trained in an unsupervised manner with unlabeled samples, matches or even outperforms classic optimization-based algorithms without domain-specific knowledge. Remarkably, the proposed method is highly scalable and can solve the beamforming problem in an interference channel with 1000 transceiver pairs within 6 milliseconds on a single GPU.",
    "citationCount": 267,
    "references": [
      "4a2f581bc33b887348fa96bb4f8c84f0e47689eb",
      "6540b9b6db35d731a0d5dfc65ee1dde606dfb1f4",
      "8ff65de67556bf2f9d71a8a4a888f983d0509342",
      "88e83776313effc1564044d7bf19972981815e3c",
      "daec3877d99e4183d74245571f07bff9ec3a15c7",
      "317cf17506eab84cab8e36f81f6b1bcd7e427871",
      "e3e1c4751a8ec043c58d007eab2a4ac607e6db48",
      "cf2b45352e7bb6a95648be3b303041caccf2cd48",
      "271b31b41782d11c5176a260f0ecdf2611b21e77",
      "c7fdb033ff15771e9bcea4336135eec171a595f3",
      "810ae452a3a1f673ea241bd540f9551b2996ed5b",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "f4996081ea7ea0995d70f5ad2e9bb121dfe5d384",
      "c99737343da8f1322599d22e025b621ac67e5f06",
      "3f13a5148f7caa51ea946193d261d4f8ed32d81a",
      "d77c0e84972c256a8922b952b04330e369f65f09",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "48507f249966a8c8faa7e1018d25417cfc1ebef0",
      "aef0b0e877e6e266568e6d4b6e107e0540bc8ee3",
      "831b914d0bf8a0bf24e1cba27f2de0b24ba63b9d",
      "e1799aaf23c12af6932dc0ef3dfb1638f01413d1",
      "bea84bb114517258db83ba77569299caccc4cf94",
      "e613d6f3c07218a5c18cebfdabc3fe00f70692f8",
      "0a632969d840fccefc724b01597d14807ab79092",
      "a456265138c088a894301c0433dae938705a9bec",
      "459cdfa379bffc07dd963610132f22421b9a0659",
      "d997beefc0922d97202789d2ac307c55c2c52fba",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "322cf9bcde458a45eaeca989a1eec92f7c6db984",
      "403feb2fe4a964e105e0c3336b0f21346227f229",
      "82743a95765998c805cbb0a68eb25d88f08da314",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "4b0a59843cb7967cb8b9e471467d789449321a1d",
      "691e6db087c457c33f685cb050cf690afd8efa68",
      "82639cfddad2c4f62950e50c4937111567fd4c6e",
      "35e80d455959737638ec2d1d5fa4ae3b15183fbf",
      "61be33246362221714cc7acbfc7f3011800fea38",
      "d75b87936ad22b11d185697183f3b1ee52a3ff25",
      "f22f6972e66bdd2e769fa64b0df0a13063c0c101",
      "be2f7530fb2119161de4d54671fa849dbc4088f9",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      "6a7c6e9feab24ccf51ee9e53cbc0b42b9b421a7d",
      "2913c2bf3f92b5ae369400a42b2d27cc5bc05ecb",
      null,
      null
    ]
  },
  {
    "paperId": "775a6e0f9104b282ed867871d743e3afd1e66d96",
    "title": "Nested Graph Neural Networks",
    "abstract": "Graph neural network (GNN)'s success in graph classification is closely related to the Weisfeiler-Lehman (1-WL) algorithm. By iteratively aggregating neighboring node features to a center node, both 1-WL and GNN obtain a node representation that encodes a rooted subtree around the center node. These rooted subtree representations are then pooled into a single representation to represent the whole graph. However, rooted subtrees are of limited expressiveness to represent a non-tree graph. To address it, we propose Nested Graph Neural Networks (NGNNs). NGNN represents a graph with rooted subgraphs instead of rooted subtrees, so that two graphs sharing many identical subgraphs (rather than subtrees) tend to have similar representations. The key is to make each node representation encode a subgraph around it more than a subtree. To achieve this, NGNN extracts a local subgraph around each node and applies a base GNN to each subgraph to learn a subgraph representation. The whole-graph representation is then obtained by pooling these subgraph representations. We provide a rigorous theoretical analysis showing that NGNN is strictly more powerful than 1-WL. In particular, we proved that NGNN can discriminate almost all r-regular graphs, where 1-WL always fails. Moreover, unlike other more powerful GNNs, NGNN only introduces a constant-factor higher time complexity than standard GNNs. NGNN is a plug-and-play framework that can be combined with various base GNNs. We test NGNN with different base GNNs on several benchmark datasets. NGNN uniformly improves their performance and shows highly competitive performance on all datasets.",
    "citationCount": 169,
    "references": [
      "44b9f16ba417b90e2e7c42f9074378dd06415809",
      "b59b7670d6873a8d4ccf99c4d0d21b6a2a281100",
      "b62edbf6e619eeed886c63e51fdff2c3d94f998f",
      "7df6f75a85a1bb737f31e1736c65ea8bbda3ece9",
      "92d229609b33717ec6e0e97591def3c086913858",
      "aa1cda29362b9d670d602c7fc6964499d2a364bd",
      "fadfffdbb3588bb8ddcc480613336f1d71694d55",
      "b88741c01dd8769c4c4be09fcaab7e2c0e63a716",
      "4ce982f3778dfc041918cf2531aee60552cbfa44",
      "e9ef895b56e5dee045af31e737d46c255194f4f2",
      "6360aaece0d6bf153183b9ecd075f42f7b127cc9",
      "a9872078cc6dabd2428750543862b45f4a482dfc",
      "965652c0e426c5b42d7218d7429025be7ac542bf",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "19c0d004bd0e42a6449d8b7717cbda4431a67e65",
      "6bc4004347cdf76d84597210796f38fcf7a01a80",
      "536da0e76290aea9cbe75c29bac096aeb45ef875",
      "33e31195ab6853dfb8b1d90b07da5755f9bf5de0",
      "3db5fcb595492dcd64663c00d56f004dfafa689c",
      "583d9083d2fcc4678427e597cd41adaba9910c26",
      "edbad7d5a000a12a7829b6a9b2c5566910be3f08",
      "7f42da4abfadf9d5a464affe22d0bd4bf21c0edb",
      "b3af16485c5028ebae8819e387a6cbdff352d9c7",
      "54e6a214c9dca4ba6bb8c5d52e5b219c5ea50e12",
      "057b594c9e6ed45fc445a4dc45384117bdd15a3e",
      "d52961a91f03061c6732a69e292bd1e403e7f8b8",
      "f1964cc1b343f907462cd7fbfaf88c2679d61f59",
      "4efb9a950f252138a30eeb942ed02663a3ea29d1",
      "19605cad33f79d3070b7c4b24aa49653ab7c90da",
      "520005eba3f1b8e852ed9508ead726e15629c78a",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "7f5ea861a57e14796f033fd0f5580dbc34ff88f2",
      "cb2722b202b2b0b1b9b87eb4a984dee9040f34c3",
      "b7a6b7adafd01e939c9266083dfba9edea88846c",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "6541afa4b4061a7d5c8387514bedea9dc249fd80",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "e4715a13f6364b1c81e64f247651c3d9e80b6808",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "16a0ff94b980d0ad9cd5ae3b9a3769c6f358842a",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "a456265138c088a894301c0433dae938705a9bec",
      "d0ab11de3077490c80a08abd0fb8827bac84c454",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "322cf9bcde458a45eaeca989a1eec92f7c6db984",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "6f7dc83d5a8494d44dc5568c34646a110ed5a2ba",
      "89655dc3c3a794cb25e055aed79424c66301d70f",
      "fff114cbba4f3ba900f33da574283e3de7f26c83",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "7e1874986cf6433fabf96fff93ef42b60bdc49f8",
      "1b25afb8f0aca1370a771c1af9a8307a015fd63c",
      "a7fc751cd95bd1a409a26daaef69fc3aa8a35e0e",
      "d6fe05d447c3a379b81c4760f10838a370054c8e",
      "70ff05e93f4eaeef4b8b51ba4e11d1c4cdf856ca",
      "c2815f76c690ec2ca6523b1faacf9b6a401bdff1",
      "508fbfbfb09768c92d35e5fae10ce8fa7e8753d2",
      "ef77a8b0db638c675d032bd05dc3a012a2899da4",
      "465558b693378e15631f9bc90cea24602fd4c721",
      null,
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      "4deebd0fdcec477a780e950dc0299beb872ea350",
      "aea15d30c978eac4952a378bf228a0bae5ba3492",
      "ba39c4237646e49e3aa0b6549a61e7b0d94b83c4",
      "5ee0d8aeb2cb01ef4d8a858d234e72a7400c03ac",
      "eac8fb1c9883da002a8a9fb1d514bde116219dc1",
      null
    ]
  },
  {
    "paperId": "2e08a508fa9c6ae7195aa14dfe6c9e695e19aa33",
    "title": "Filling the G_ap_s: Multivariate Time Series Imputation by Graph Neural Networks",
    "abstract": "Dealing with missing values and incomplete time series is a labor-intensive, tedious, inevitable task when handling data coming from real-world applications. Effective spatio-temporal representations would allow imputation methods to reconstruct missing temporal data by exploiting information coming from sensors at different locations. However, standard methods fall short in capturing the nonlinear time and space dependencies existing within networks of interconnected sensors and do not take full advantage of the available - and often strong - relational information. Notably, most state-of-the-art imputation methods based on deep learning do not explicitly model relational aspects and, in any case, do not exploit processing frameworks able to adequately represent structured spatio-temporal data. Conversely, graph neural networks have recently surged in popularity as both expressive and scalable tools for processing sequential data with relational inductive biases. In this work, we present the first assessment of graph neural networks in the context of multivariate time series imputation. In particular, we introduce a novel graph neural network architecture, named GRIN, which aims at reconstructing missing data in the different channels of a multivariate time series by learning spatio-temporal representations through message passing. Empirical results show that our model outperforms state-of-the-art methods in the imputation task on relevant real-world benchmarks with mean absolute error improvements often higher than 20%.",
    "citationCount": 114,
    "references": [
      "ba1dcea1433527139b6bd50b98b23bc531085ce0",
      "1fe4590e1807c61fc416612966010123036db3e7",
      "401930b2dc738a5a67d136bc9a2d04461c5bf93a",
      "02d367a1cf5d3a757834f2c45b29b4fdc7b7458c",
      "150f95f9c73820e0a0fa1546140e9f2bdfd25954",
      "024a2c03be8e468e7c4fdf9bda36cdc0eaae85fb",
      "3bb50191b712e9dbfc4dbe7a6fa45b0a321caf3e",
      "1ff858576af755583559fdfcd366bd16002da297",
      "75e924bd79d27a23f3f93d9b1ab62a779505c8d2",
      "993377a3fc8334558463b82053904e3d684f29c0",
      "ffcb5379561410169897e3bb281fae0602420f7d",
      "3c8a456509e6c0805354bd40a35e3f2dbf8069b1",
      "8f9d03f85a3daf54daa455668cd503bcf9fa73b4",
      "fae129338c0899576524506008427f64477d3967",
      "fb7ebf11df671d556e14501e63f61370c4ccf84c",
      "baa02e5bed49b94ac8c880b79c57530e7556a81d",
      "5ec0956ae95ccca151cda461411c29c08fa41f5c",
      "a89f0a78f86077864e108a1bd2c4e670c85907f8",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "33cb7b4d3b1e849748f4163cee821bf1306a118b",
      "c097be22f1e87a846385047346b73610d91fea4e",
      "921196c32213a229245a9705ee4768bc941e7a26",
      "89b1766a77f7a34aadd67861123d5cf3cd3ece52",
      "7f4afc1bf3272ae6ec00b46e27efc4a4f6b0826d",
      "d21f137c0b26f13daa91319a5e23f430fec68ae9",
      "72edcb3788f9c141a3ed28e6d36f75ca4977d27e",
      "e1fa336096c1504e86845d2f30a1f6cb8b2bcca8",
      "9ba0186ed40656329c421f55ada7313293e13f17",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "cd8a9914d50b0ac63315872530274d158d6aff09",
      "6b1793ece5993523855ce67c646de408318d1b12",
      "bf2f247e9f514ee5f4dc0fe912d726bcf6ed2aad",
      "0e779fd59353a7f1f5b559b9d65fa4bfe367890c",
      "d006ccf2ccbd194a384aec6789eee3af937d819a",
      "0c413d8af5e31ae3f210b509087148c7abd58dbf",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "562f33611cdc0d8ed6609aa09f153e6238d5409e",
      "bd723bc768baa78b7bd3e6f28a401d6d5cfe87f8",
      "0d635696ef2c768095d9f6378df93241a0e78d16",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "18b47b83a373f33d6b902a3615f42c10f7600d72",
      "fb40b7d4a9b7c1040173c0420b69ccbb7bcdbe5c",
      "ac3ee98020251797c2b401e1389461df88e52e62",
      "59a79116f9f7a20560da0aeb7519c33f6ec84a17",
      "8e641ea510c06485f33a61ea65555cf791efad2d",
      "0b544dfe355a5070b60986319a3f51fb45d1348e",
      "193edd20cae92c6759c18ce93eeea96afd9528eb",
      "39e223e6b5a6f8727e9f60b8b7c7720dc40a5dbc",
      "a58fd0822e57490a9d9a80bef460ba7087a17579",
      "fb9dbfff9f4bfd90bfe1f09b48ce4929874fee12",
      "ad4fd2c149f220a62441576af92a8a669fe81246",
      "fc1d1ba95d4b1ce49d50ac82f553b6236305b0b6",
      "4229f467b059188fc7a1234016a3c80557fa7df0",
      "c22ca1c712bc18915dc9737e9d61b69574455021",
      "b59a2f4fe0cb3b4f31ce81fb50f7ca65c1a02218",
      "37075cfb18376ba24b2abad519f31ca0eba0df91",
      "5b62860a9eb3492c5c2d7fb42fd023cae891df45",
      "7784e45516fe443458d07b21d4298dbc9f2c4984",
      "2e9d221c206e9503ceb452302d68d10e293f2a10",
      "5db7dc2239f820eae498b07a955f31b3d113179f",
      "bbeb0c02ca75525b35154ff07c36a5231ff93fcc",
      "89c0bb5205839067f1f48815d70748bf47aafddc",
      "6a7c63a73724c0ca68b1675e256bb8b9a35c94f4",
      "f45e441b34c8b6825926b027fd440cedfa64f9df",
      null,
      "0e984ccc4fbfc748836b2dde6fb1bdb5f9bf071a",
      "c68796f833a7151f0a63d1d1608dc902b4fdc9b6",
      "4f8d648c52edf74e41b0996128aa536e13cc7e82",
      null,
      null,
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      null
    ]
  },
  {
    "paperId": "c6d550c3fcecf27b979be84c4cd444cc1c72bf47",
    "title": "A Note on Over-Smoothing for Graph Neural Networks",
    "abstract": "Graph Neural Networks (GNNs) have achieved a lot of success on graph-structured data. However, it is observed that the performance of graph neural networks does not improve as the number of layers increases. This effect, known as over-smoothing, has been analyzed mostly in linear cases. In this paper, we build upon previous results \\cite{oono2019graph} to further analyze the over-smoothing effect in the general graph neural network architecture. We show when the weight matrix satisfies the conditions determined by the spectrum of augmented normalized Laplacian, the Dirichlet energy of embeddings will converge to zero, resulting in the loss of discriminative power. Using Dirichlet energy to measure \"expressiveness\" of embedding is conceptually clean; it leads to simpler proofs than \\cite{oono2019graph} and can handle more non-linearities.",
    "citationCount": 279,
    "references": [
      "38293873cce681b857b3c1d73f5590f641f3dc42",
      "0a6a9e6d4e3efd7c69357769305b70097281655f",
      "cecd22bf53eb949becf937aac9f9488ccfee1e0d",
      "4ce9c20642dce5eb7930966053a1e3da4ef617f2",
      "fba8ef1c0908a37e6fb2d13b27eae0ad53c6d554",
      "f0dcea50b4b0f40c55817ddfc190484b752e1481",
      "4e7dd1e79f0f13650b2612325e6ba8d206dc04fb",
      "7e71eedb078181873a56f2adcfef9dddaeb95602",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "d133cb102ad0f81e3fd17a7db090b28afc124c4a",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "048513a46368d9e70d10350adcf077b2ca53ce4b",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "53d12a37bc6ea511e9f59fe153df4bc8abf41cfc",
      "b542c6847fd5ce9624d354041ac514d9764e60a8",
      "407b1ad9d0dbcef919a0c4624b65323cafcb5f11",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df"
    ]
  },
  {
    "paperId": "4fa31616b834c377c4995c346a2b17464f25692a",
    "title": "Graph Neural Networks for Recommender System",
    "abstract": "Recently, graph neural network (GNN) has become the new state-of-the-art approach in many recommendation problems, with its strong ability to handle structured data and to explore high-order information. However, as the recommendation tasks are diverse and various in the real world, it is quite challenging to design proper GNN methods for specific problems. In this tutorial, we focus on the critical challenges of GNN-based recommendation and the potential solutions. Specifically, we start from an extensive background of recommender systems and graph neural networks. Then we fully discuss why GNNs are required in recommender systems and the four parts of challenges, including graph construction, network design, optimization, and computation efficiency. Then, we discuss how to address these challenges by elaborating on the recent advances of GNN-based recommendation models, with a systematic taxonomy from four critical perspectives: stages, scenarios, objectives, and applications. Last, we finalize this tutorial with conclusions and discuss important future directions.",
    "citationCount": 229,
    "references": []
  },
  {
    "paperId": "b4895de425a02af87713bd78ed1a29fe425753af",
    "title": "Decoupling the Depth and Scope of Graph Neural Networks",
    "abstract": "State-of-the-art Graph Neural Networks (GNNs) have limited scalability with respect to the graph and model sizes. On large graphs, increasing the model depth often means exponential expansion of the scope (i.e., receptive field). Beyond just a few layers, two fundamental challenges emerge: 1. degraded expressivity due to oversmoothing, and 2. expensive computation due to neighborhood explosion. We propose a design principle to decouple the depth and scope of GNNs -- to generate representation of a target entity (i.e., a node or an edge), we first extract a localized subgraph as the bounded-size scope, and then apply a GNN of arbitrary depth on top of the subgraph. A properly extracted subgraph consists of a small number of critical neighbors, while excluding irrelevant ones. The GNN, no matter how deep it is, smooths the local neighborhood into informative representation rather than oversmoothing the global graph into\"white noise\". Theoretically, decoupling improves the GNN expressive power from the perspectives of graph signal processing (GCN), function approximation (GraphSAGE) and topological learning (GIN). Empirically, on seven graphs (with up to 110M nodes) and six backbone GNN architectures, our design achieves significant accuracy improvement with orders of magnitude reduction in computation and hardware cost.",
    "citationCount": 148,
    "references": [
      "0a69c8815536a657668e089e3281ff2e963d947a",
      "dab76d3f09b9a91719e6491c838aeea383612a89",
      "1449dbc313f7e948a748bda3a22d423bf022cfda",
      "639206a9a32d91386924f1c94e9760dfb43df72e",
      "00c2fd76b5d2167493ac7bfb4ccb8856ff45b0c0",
      "1d81e7f428fea2b2e15ee3a96fe843ca603acc4c",
      "3da4626411d83c19c9919bb41dba94fff88da90e",
      "57ec9a67489e6722f544ab8d7d09ac2094be7b0d",
      "965652c0e426c5b42d7218d7429025be7ac542bf",
      "3bfa808ce20b2736708c3fc0b9443635e3f133a7",
      "9a772646ef9ed9c917f45fa592d5f89f7d5f8542",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "993377a3fc8334558463b82053904e3d684f29c0",
      "09e48adf1a3f012ec56fbb4f92acae975ee43d87",
      "c77faa8577817b26c1a2e81914f19eecbe13ee1f",
      "9dccd22276aaad5b6ec24e68bb7d29d954226a54",
      "2a6d160b529272964ce1a6707adf52f3d6ba4861",
      "38293873cce681b857b3c1d73f5590f641f3dc42",
      "381411d740562de1e766dc8cc833844eb99dde01",
      "0a6a9e6d4e3efd7c69357769305b70097281655f",
      "fc3e99ebc07b3014f6736a6a7b077edf2f1634c0",
      "a047ddcd8d7a18f356b474d04fcc923be5495f46",
      "cecd22bf53eb949becf937aac9f9488ccfee1e0d",
      "4ce9c20642dce5eb7930966053a1e3da4ef617f2",
      "0283b27d081613e97c7dc4ced3946d0217ba8c36",
      "05c4eb154ad9512a69569c18d68bc4428ee8bb83",
      "4efb9a950f252138a30eeb942ed02663a3ea29d1",
      "ee8b1603c79a4f9c3bdc0d6633b595aa93ff3a0f",
      "4e7dd1e79f0f13650b2612325e6ba8d206dc04fb",
      "00358a3f17821476d93461192b9229fe7d92bb3f",
      "7e71eedb078181873a56f2adcfef9dddaeb95602",
      "c724f501acd836c1cd617b60927659720b3aea0d",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "abfa95058fa50c55a0b923a6c35830f470c125ad",
      "7b13474bf99b8fd20ee67cef5d76a9b298932ac4",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "e4715a13f6364b1c81e64f247651c3d9e80b6808",
      "2503dff90685857ce7295e37d0045e2eef41c8b8",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "a60c69c2fae27ebbb73c87f7f2a4765556bd7f9f",
      "ecf6c42d84351f34e1625a6a2e4cc6526da45c74",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "ace1059fd85bbb8b41874a47a029bba7899124a5",
      "cd8a9914d50b0ac63315872530274d158d6aff09",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "7e1874986cf6433fabf96fff93ef42b60bdc49f8",
      "2b5bc598cd02362874245ccfd932f65f6bc571d9",
      "7c155186b86dd03d3f0b0db748694b76f1f53f83",
      "29752f2f4a40df45a6eb61afb7c347f1799b1f45",
      "809e37b8f5a60038a04ab6bc88ff1a81a6ef3f09",
      "f22f6972e66bdd2e769fa64b0df0a13063c0c101",
      "f1d40a639d7f83d373f07b2bf4a96f0313b584d8",
      null,
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      null,
      "daa0f32cee71829bf124593a5b8ed2c55eca0b2f",
      "34f25a8704614163c4095b3ee2fc969b60de4698",
      "107d1cc9216776d4083932e2c85ca9d75b3515c2",
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ]
  },
  {
    "paperId": "e60ad3d4ed3273af6a94745689783b83f59c8b4a",
    "title": "GPPT: Graph Pre-training and Prompt Tuning to Generalize Graph Neural Networks",
    "abstract": "Despite the promising representation learning of graph neural networks (GNNs), the supervised training of GNNs notoriously requires large amounts of labeled data from each application. An effective solution is to apply the transfer learning in graph: using easily accessible information to pre-train GNNs, and fine-tuning them to optimize the downstream task with only a few labels. Recently, many efforts have been paid to design the self-supervised pretext tasks, and encode the universal graph knowledge among the various applications. However, they rarely notice the inherent training objective gap between the pretext and downstream tasks. This significant gap often requires costly fine-tuning for adapting the pre-trained model to downstream problem, which prevents the efficient elicitation of pre-trained knowledge and then results in poor results. Even worse, the naive pre-training strategy usually deteriorates the downstream task, and damages the reliability of transfer learning in graph data. To bridge the task gap, we propose a novel transfer learning paradigm to generalize GNNs, namely graph pre-training and prompt tuning (GPPT). Specifically, we first adopt the masked edge prediction, the most simplest and popular pretext task, to pre-train GNNs. Based on the pre-trained model, we propose the graph prompting function to modify the standalone node into a token pair, and reformulate the downstream node classification looking the same as edge prediction. The token pair is consisted of candidate label class and node entity. Therefore, the pre-trained GNNs could be applied without tedious fine-tuning to evaluate the linking probability of token pair, and produce the node classification decision. The extensive experiments on eight benchmark datasets demonstrate the superiority of GPPT, delivering an average improvement of 4.29% in few-shot graph analysis and accelerating the model convergence up to 4.32X. The code is available in: https://github.com/MingChen-Sun/GPPT.",
    "citationCount": 144,
    "references": []
  },
  {
    "paperId": "23ce8950b9360158c04ab0c1dcf9a73022b60673",
    "title": "Every Document Owns Its Structure: Inductive Text Classification via Graph Neural Networks",
    "abstract": "Text classification is fundamental in natural language processing (NLP) and Graph Neural Networks (GNN) are recently applied in this task. However, the existing graph-based works can neither capture the contextual word relationships within each document nor fulfil the inductive learning of new words. Therefore in this work, to overcome such problems, we propose TextING for inductive text classification via GNN. We first build individual graphs for each document and then use GNN to learn the fine-grained word representations based on their local structure, which can also effectively produce embeddings for unseen words in the new document. Finally, the word nodes are aggregated as the document embedding. Extensive experiments on four benchmark datasets show that our method outperforms state-of-the-art text classification methods.",
    "citationCount": 289,
    "references": [
      "4c92208c7062ae5f9daf8df8b06ac5378233bc02",
      "3718a4b0443c294c78fd2140b258985175822aa9",
      "231b6807767249c04d73c7c6f6295625d4e52591",
      "981749728aa3f08a802607fbfc5a107c06e391fc",
      "68b3dfb69cbaf72a3455614ba41f49d0f6c7a4e5",
      "0c7e1338a9c7914a3b9a5bdc42b457b3f272160e",
      "6017e81c5ede6c38b306a3df9738aeb04baa7619",
      "697e110df76fe33e232f019d7e44097af3572abd",
      "892e53fe5cd39f037cb2a961499f42f3002595dd",
      "e28ab7c3b994dd4e30baac1eb67c7f87e40c2b7b",
      "492f57ee9ceb61fb5a47ad7aebfec1121887a175",
      "0f82e1082419df4596359b3b49b422242da33796",
      "eba36ac75bf22edf9a1bfd33244d459c75b98305",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "f37e1b62a767a307c046404ca96bc140b3e68cb5",
      "1f6ba0782862ec12a5ec6d7fb608523d55b0c6ba",
      "3343c98d79d151635efa1f04797d358f9ebbdde7",
      "9b5d79a92f510fd1e32b4e0e714b44ff9fb50ee3",
      "2a132cdca850274eb85e28e16de28995a4f20abb",
      "0161800dfa79d5c7c074dad0771a956488e8cace",
      "32b95c330cbde9a29388423cfe6af0a8f15e2304",
      "9819b600a828a57e1cde047bbe710d3446b30da5"
    ]
  },
  {
    "paperId": "80d7b9180299ed1954dbc3acde4ad4efa8974e0a",
    "title": "Forecasting Global Weather with Graph Neural Networks",
    "abstract": "We present a data-driven approach for forecasting global weather using graph neural networks. The system learns to step forward the current 3D atmospheric state by six hours, and multiple steps are chained together to produce skillful forecasts going out several days into the future. The underlying model is trained on reanalysis data from ERA5 or forecast data from GFS. Test performance on metrics such as Z500 (geopotential height) and T850 (temperature) improves upon previous data-driven approaches and is comparable to operational, full-resolution, physical models from GFS and ECMWF, at least when evaluated on 1-degree scales and when using reanalysis initial conditions. We also show results from connecting this data-driven model to live, operational forecasts from GFS.",
    "citationCount": 173,
    "references": [
      "be8d39424a9010bfc0805385cc91edee383c2e24",
      "4438704763978dd32a9fbdadf3541c56c0756cb3",
      "e3ea7015f69118d3ee9c2730f91dbdef1297f9de",
      "49a2fdc95d24e81a1913138620e47f3070d55a9a",
      "f99de990f791799df398fcd38034c4b395d9b7e0",
      "ce4d0a63a415a9e6a0e2275fc8f6a4b75f6408b4",
      "5b3065906402f4624d712b90e07d9f02afe683b2",
      "025d6f7a4f96dc4a68ea814cd10ff261a7cd604c",
      "c8fc3da2d6a0a7f05e716fa3c06fc7c813c9c049",
      "080c98d3284b60b78d15fbd2bd118623fe88c403",
      "2afa490dde7a8c582d889530c7f8b042fef6a8b7",
      "6d2eb065d7e9a57ab17d3d14ff63a09063c5d35c",
      "1a2082d67303cc0e42dd8f14e9b8fc1632963875",
      "e6b8844c299a8bd0359e098dfb9e5cd91d4c8fdd",
      "b61d003c99d410bdbc946e02b29ca155a77c88d5",
      "2f7dc1ee85e9f6a97810c66016e09ffeed684f03",
      "9e20f6874feaaf7c9994f9875b1d9cab17a2fd59",
      "8995944de6f298c6a439675e31068ab8258722ba",
      "643ac3ef063c77eb02a3d52637c11fe028bfae28",
      "c83c465a770e5072445afee85b12ce82f0c36891",
      "088488af28a93fac590827e538a1ebc0cea26e6f",
      "8f5aeaf5200401f93a645be4df379cd61b98663c",
      "294f64f1890376795003e217ee339708d5347b1d",
      "53473a3ca9b871ac6bd8d9c7e064369b97e4b801",
      "8a86102560106a3c64cb9062fd877539811f33c0",
      "aab6a6c1cd95b3dc412f3cb4e45a1635faea3f12",
      "9a43842478bf9d1aff71e964f584af4eeb196073",
      "cce1dd9da8c579a031359ba526aa4a3336314d84",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "5e957fc9849abff8e3a606df05d94381ef565a8d",
      "8c871949863cea1629be2ca20670300354ebbb58",
      "d3ca6ae9ff21a88a125f0b78148b3865c1f79b65",
      null,
      null
    ]
  },
  {
    "paperId": "38e320f860d54e4071d68955c774b3e4a091bfe0",
    "title": "Neo-GNNs: Neighborhood Overlap-aware Graph Neural Networks for Link Prediction",
    "abstract": "Graph Neural Networks (GNNs) have been widely applied to various fields for learning over graph-structured data. They have shown significant improvements over traditional heuristic methods in various tasks such as node classification and graph classification. However, since GNNs heavily rely on smoothed node features rather than graph structure, they often show poor performance than simple heuristic methods in link prediction where the structural information, e.g., overlapped neighborhoods, degrees, and shortest paths, is crucial. To address this limitation, we propose Neighborhood Overlap-aware Graph Neural Networks (Neo-GNNs) that learn useful structural features from an adjacency matrix and estimate overlapped neighborhoods for link prediction. Our Neo-GNNs generalize neighborhood overlap-based heuristic methods and handle overlapped multi-hop neighborhoods. Our extensive experiments on Open Graph Benchmark datasets (OGB) demonstrate that Neo-GNNs consistently achieve state-of-the-art performance in link prediction. Our code is publicly available at https://github.com/seongjunyun/Neo_GNNs.",
    "citationCount": 121,
    "references": [
      "f357b515af59b9d60bfaedb8028633c9033ec708",
      "1d81e7f428fea2b2e15ee3a96fe843ca603acc4c",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "6ea2f808d72f5ff10bec70b3baca5d0ca5c400c1",
      "dc7307f6e49f0ad2432be4eea92ae7f854c3cebb",
      "2a6d160b529272964ce1a6707adf52f3d6ba4861",
      "3cdbab32d462c7d7b57bc836d916d61a4975afd3",
      "6b010e07618eb36abe6def23d94488b2c81ecbf7",
      "ca2e484103e2a9a2dae2fd7dd0519a9324ae876d",
      "ee8b1603c79a4f9c3bdc0d6633b595aa93ff3a0f",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "6541afa4b4061a7d5c8387514bedea9dc249fd80",
      "9fa3e53b5937a0ec92499ed415e339ede6c92010",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "d9f836a2062864e4808e12224e2286a353498202",
      "def1049b5aae96c8e1eab0ca58d77ac9c2f0e3e9",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "e4715a13f6364b1c81e64f247651c3d9e80b6808",
      "fd17bd9a5dc24a081ad9743570f50dd6750f54b2",
      "e1799aaf23c12af6932dc0ef3dfb1638f01413d1",
      "c751ab01aedc2888a7fe6e8b4f77ab1afa94072f",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "908272f8e6340971600148d4e73f50e1e8843aaf",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "d997beefc0922d97202789d2ac307c55c2c52fba",
      "54906484f42e871f7c47bbfe784a358b1448231f",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "36ee2c8bd605afd48035d15fdc6b8c8842363376",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "fff114cbba4f3ba900f33da574283e3de7f26c83",
      "f6b51c8753a871dc94ff32152c00c01e94f90f09",
      "a6232b39b562b64b943c1995c9812e099c1cc967",
      "d4bbcc842f22547eaf5884251eaa68251895dccb",
      "569702d3f854ecd55d3877d2b6cb45292aa7ae29",
      "76c361552181f3798a3fae7485a22a333af85047",
      "52152dac5c7320a4818b48140bfcd396e4e965b7",
      "8dc9d11e3fc229a1b70bb00de72dc15d55848174",
      "809e37b8f5a60038a04ab6bc88ff1a81a6ef3f09",
      "d61031326150ba23f90e6587c13d99188209250e",
      "f1d40a639d7f83d373f07b2bf4a96f0313b584d8",
      "534e6582ef9657f62224630c075f4c8ae310541e",
      "79d15634d909b159f309993b88c6c29dddd1bbaa",
      "1164ec0b8d2bd8e95b9fc07e9669ff9d4d379c64",
      null,
      "a828fd17399d0ec9f59801e21230e7f6391757f4",
      null,
      null,
      "353bbac15df1cb46e65a432266107d36cf6efd79"
    ]
  },
  {
    "paperId": "b9631936ab9e41511f0eb85adb0fc7b8efb7983e",
    "title": "Handling Information Loss of Graph Neural Networks for Session-based Recommendation",
    "abstract": "Recently, graph neural networks (GNNs) have gained increasing popularity due to their convincing performance in various applications. Many previous studies also attempted to apply GNNs to session-based recommendation and obtained promising results. However, we spot that there are two information loss problems in these GNN-based methods for session-based recommendation, namely the lossy session encoding problem and the ineffective long-range dependency capturing problem. The first problem is the lossy session encoding problem. Some sequential information about item transitions is ignored because of the lossy encoding from sessions to graphs and the permutation-invariant aggregation during message passing. The second problem is the ineffective long-range dependency capturing problem. Some long-range dependencies within sessions cannot be captured due to the limited number of layers. To solve the first problem, we propose a lossless encoding scheme and an edge-order preserving aggregation layer based on GRU that is dedicatedly designed to process the losslessly encoded graphs. To solve the second problem, we propose a shortcut graph attention layer that effectively captures long-range dependencies by propagating information along shortcut connections. By combining the two kinds of layers, we are able to build a model that does not have the information loss problems and outperforms the state-of-the-art models on three public datasets.",
    "citationCount": 261,
    "references": []
  },
  {
    "paperId": "1ec4f1f88ba8bc12eaf3fe5d2fa7b997294b8c92",
    "title": "Graph Neural Networks for Wireless Communications: From Theory to Practice",
    "abstract": "Deep learning-based approaches have been developed to solve challenging problems in wireless communications, leading to promising results. Early attempts adopted neural network architectures inherited from applications such as computer vision. They often yield poor performance in large scale networks (i.e., poor scalability) and unseen network settings (i.e., poor generalization). To resolve these issues, graph neural networks (GNNs) have been recently adopted, as they can effectively exploit the domain knowledge, i.e., the graph topology in wireless communications problems. GNN-based methods can achieve near-optimal performance in large-scale networks and generalize well under different system settings, but the theoretical underpinnings and design guidelines remain elusive, which may hinder their practical implementations. This paper endeavors to fill both the theoretical and practical gaps. For theoretical guarantees, we prove that GNNs achieve near-optimal performance in wireless networks with much fewer training samples than traditional neural architectures. Specifically, to solve an optimization problem on an <inline-formula> <tex-math notation=\"LaTeX\">$n$ </tex-math></inline-formula>-node graph (where the nodes may represent users, base stations, or antennas), GNNs\u2019 generalization error and required number of training samples are <inline-formula> <tex-math notation=\"LaTeX\">$\\mathcal {O}(n)$ </tex-math></inline-formula> and <inline-formula> <tex-math notation=\"LaTeX\">$\\mathcal {O}(n^{2})$ </tex-math></inline-formula> times lower than the unstructured multi-layer perceptrons. For design guidelines, we propose a unified framework that is applicable to general design problems in wireless networks, which includes graph modeling, neural architecture design, and theory-guided performance enhancement. Extensive simulations, which cover a variety of important problems and network settings, verify our theory and the effectiveness of the proposed design framework.",
    "citationCount": 120,
    "references": [
      "df6d13c7e9524743c126ba06df30cc564e323137",
      "7427e770cc448bd0cf19324300ebd7bd07e3cc89",
      "74285283ab12edb05527feca705257fe7208b2a4",
      "91b9fa72da566afc77a07ec856c3d8da23714367",
      "e925e38c5bade594237439c1d4a77e1376535697",
      "2a06cf1e76818643cfff609adee3b75e9627ef38",
      "be0bbf06977c4dadbf702287733187884a531b8a",
      "01e17b6db8aed1104d6a68c02016cc2f2c16f157",
      "eec5e8851bfe36459bb6d25c197b8defdde53601",
      "743bbb51865843ff0bd5d598bb06b1bef3de5da4",
      "c2a8c78188e952ddfeca3b3ab11fa24f5d1ca0a8",
      "d8961c41ad1e23eed9e94bf6a28f38ccc6bbdace",
      "b7ea7c68df24deb0ac59bc1d552a056ce1fc5d0f",
      "f51f901ed96fee55031178f2d16461456e0acb1b",
      "17858a252b041b4d7af8e87b876392f198a3e273",
      "541b2d7063e3aa0ae73f47b02636f9a473ef364b",
      "6f05cc5b2c9c93fe2665e801fd2ff9296c5d0e36",
      "16351ff232f2e475c8d8347809ef905d67998fa5",
      "4a4192f01519a0ebc731825a534904f3a689e3f9",
      "04448d0f63bc617e49dd3508cd7bd281256895a1",
      "b015a87d559d614ea219cb6535526fcd8e848bd3",
      "574b0cae2d1f3d5d67c5d5eba0be4b48732f5885",
      "0a614c46b2fababc0a9781501917e256922c99ba",
      "1bc2d0de52a77ad5e30d735be5a067c7bed24f9d",
      "4f71dc75896529d8653d8ef0ccc72bcce2c80e18",
      "e6e04753271abaac91e5091ed72068eedc16eaca",
      "daec3877d99e4183d74245571f07bff9ec3a15c7",
      "381411d740562de1e766dc8cc833844eb99dde01",
      "e3d662bbd0e5539fe22a85f3518f960595b9914e",
      "317cf17506eab84cab8e36f81f6b1bcd7e427871",
      "7f42da4abfadf9d5a464affe22d0bd4bf21c0edb",
      "cf2b45352e7bb6a95648be3b303041caccf2cd48",
      "271b31b41782d11c5176a260f0ecdf2611b21e77",
      "70978b22b32a344545bfce3793b8dc7820e38974",
      "14558cb69319eed0d5bfc5648aafcd09d882f443",
      "c99737343da8f1322599d22e025b621ac67e5f06",
      "42538ff7cd88d93dd6dec6580a6b0ded13b9e9c7",
      "aef0b0e877e6e266568e6d4b6e107e0540bc8ee3",
      "3041fe2ea250c89b7870ad295c175603132e9f4c",
      "e613d6f3c07218a5c18cebfdabc3fe00f70692f8",
      "0a632969d840fccefc724b01597d14807ab79092",
      "a456265138c088a894301c0433dae938705a9bec",
      "99bc136f50581fcf6bbc35356adadb1e1d751565",
      "f349e15eec9e5f2cf7462007ac8cb289f463abe9",
      "30cdd34bab63b3c6850675dfa2cda19f47e90393",
      "e17a0d82197e62dca0e7ff3e213b0675bdd5c4ad",
      "35e80d455959737638ec2d1d5fa4ae3b15183fbf",
      "6388150296152c8173fae995e30c80a86d7cf1f7",
      "d1b4a4689a0288ccf36158ba5dfef724fd5a4ea5",
      "f22f6972e66bdd2e769fa64b0df0a13063c0c101",
      "ac1f97177fa2f80467da2bba7de45ada51346b40",
      null,
      "b2799fd1254689eec52f86daf3668a5aac3ea943",
      "d37b3a66d55d5361aeb5ef0793af66049535c24d",
      null,
      null,
      null,
      null,
      null,
      null
    ]
  },
  {
    "paperId": "3850d1914120c0f4e0a5e10432ee5429982a98b3",
    "title": "BrainGB: A Benchmark for Brain Network Analysis With Graph Neural Networks",
    "abstract": "Mapping the connectome of the human brain using structural or functional connectivity has become one of the most pervasive paradigms for neuroimaging analysis. Recently, Graph Neural Networks (GNNs) motivated from geometric deep learning have attracted broad interest due to their established power for modeling complex networked data. Despite their superior performance in many fields, there has not yet been a systematic study of how to design effective GNNs for brain network analysis. To bridge this gap, we present BrainGB, a benchmark for brain network analysis with GNNs. BrainGB standardizes the process by (1) summarizing brain network construction pipelines for both functional and structural neuroimaging modalities and (2) modularizing the implementation of GNN designs. We conduct extensive experiments on datasets across cohorts and modalities and recommend a set of general recipes for effective GNN designs on brain networks. To support open and reproducible research on GNN-based brain network analysis, we host the BrainGB website at https://braingb.us with models, tutorials, examples, as well as an out-of-box Python package. We hope that this work will provide useful empirical evidence and offer insights for future research in this novel and promising direction.",
    "citationCount": 126,
    "references": [
      "ec5f779b1ebc30a8153e297e2ab1914b4082ca9e",
      "07fd002f2a83d44bbdd1efcb6ab17021065dfa43",
      "a4240ed69c1ef93df5f5a9d7a5eea8cb45b1ffe7",
      "46b368296c6d941a9687e6c72bd607e541ff67ff",
      "4416798c3f286fd20f34a223c538468b22a8a030",
      "b9a9c4c23dceef234699c4d3f377767dc6273186",
      "c3c3a2b793f43e5fec5ed70c9ce991521b7a2ad0",
      "45f686be3b96302ede327645227134e1c304dbab",
      "e8f5a187c00d316b74482995905d1603346b2a82",
      "ea31c4ec09b1bcd06bfc5e13c8fd32b919efb9c5",
      "0cae6ea780fdf7c24933e57e79150e0dfe0bfa0c",
      "a59e541b8c554d99f2b110859df1fad029d8d0da",
      "2b6a8ebce832815f2959bb048d23cc38b458ad4c",
      "db5d583782264529456a475ce8e9a90823b3a2b5",
      "df4a7a42efdee0f07170954d23142542c5e7126c",
      "a56bf7ee9a56d8f84079684339a953c2df9ce76b",
      "b6382a7351c0c595f91472ac71d3b2d87b3c4844",
      "6f870f7f02a8c59c3e23f407f3ef00dd1dcf8fc4",
      "f1e5e65941617604923225cc4bf464e370fcae67",
      "268d347e8a55b5eb82fb5e7d2f800e33c75ab18a",
      "e0b34b9dd924768fce9b52bc59ffb3975deb0d63",
      "aa9635e531de729d47c9f166c388cd5ff0feeaaf",
      "0170fc76e934ee643f869df18fb617d5357e8b4e",
      "b5ee1a8b5669c85b43618cd462dc24327bc09f26",
      "208fa91e0351965c6e2e2bd52e4602022e0606ba",
      "dce63a70e21323587ddcda2d87e8f78ed4b166aa",
      "3db5fcb595492dcd64663c00d56f004dfafa689c",
      "94eeb08ec78688b164c211193ea0ea2ddee0f8ea",
      "ebc641d6d398c1ed72d2da36495163ce62306c5e",
      "e7d51cb277aee0f336627ef00365016cc72d965b",
      "2e02075ad6a74c098e5e8604a6f4b3e26dd3061b",
      "071c0b2a7aa4eea39b7ff603b692fc6001265f0b",
      "f0ca3e9fc8b86392d496f0d4cfa6e2ca8a47a38e",
      "a863b570a3d0d45f010166b0c4519612f7ee9a22",
      "6260200ae8555e0e57bcd1efc67875228abe98d7",
      "92ac0e21dd18b41fdc9af36234b9d7216a25c4a6",
      "69a606e6fb043cef076de9c563258bb3cb791472",
      "c2f21a6b917286c7e904e0f168b53bbaa2bda4ba",
      "1165ad9aaa432c019b3d3b570788e878de5e54eb",
      "5ed9498cefa913d020f9ed1a56c7a788a99ed7df",
      "6b010e07618eb36abe6def23d94488b2c81ecbf7",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "be9a75c1f417db890e3f19608705137d0352922f",
      "0c7e1338a9c7914a3b9a5bdc42b457b3f272160e",
      "1a36f9eab2149845da90bc312f7e00b5e6dbfb8b",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "50c3e7284279098aab3f3514f86cd785f6bc2c02",
      "7cce3f0738c73dd672fcd4ded8bc471fda828f64",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "04ce770dbae1bfdcc66643726324206634d48055",
      "73dd81990333e603469fbab07958fbb7e47d302f",
      "52ffa478400df0c8a3dc7990663495c02eb2559c",
      "fbb77c17ca229331d69b1f2b2962a56d9ea8b92a",
      "abeb5bc02ea3f80b67cf58e3e290448af38933e5",
      "ace0b1dcae0042e9928837ffbfde238c358123da",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "a48ee96ec29683f8d135985219d6b6c10f643033",
      "cd8a9914d50b0ac63315872530274d158d6aff09",
      "b7f1b9ac9b1c21992fbd0459a9026d0e24cd7109",
      "ec6d5e9f959aa2c10dff89faf97f1240610464b6",
      "4b5fe2aee1b7becbe0af23f53f7f8e264d7cdb0b",
      "246cfa1014998cface8c9157fc56854dbecced22",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "ca690b2e7ae76338afd4a825b41175c6eaf6eb18",
      "f8151f886c98c2ca6bb08cbae6cdb311bb903396",
      "26c7fedfb7c9bbd1142ef8e8e63874874c35b571",
      "f54e99bd09f5ee53de7e8865ef8e9cdd6708339e",
      "6dc3fe6a6a47c7e23d0b9ef43ca2bec1081ee4b1",
      "7883a29dba556ecee0d36bc28e514e7793654f19",
      "644191eba8af75e79672fc901adf2bd31f41791f",
      "b84b70cc56b4cac95a948c66bf0c56d636155c8c",
      "f3f807e7eeb09b5011d25c0f5427706dcd80abc6",
      "bed4d414bb3466d9d9ce2ca14484ff2fb42dc259",
      "51922fee05f78bb4055cb893da64a38534f90c35",
      "0a586be164ec9f22254065c2b2f6b2ca577dbca4",
      "767272e61ba417ee0db5f491f8a756089e008a11",
      "e7b10da6200b98e24e97450738c945623701f06e",
      "7f4f0f1b17806c68887fc0a091470aa8576b0f9a",
      "b18ddb0b6b7518526bce6450cea66af5fde4d37e",
      "9012a33a1ac8b6388b562e7558b3d808df485ceb",
      "bd88472c33a76c4256c16c50a72aa9a88be1b5ad",
      "3919ed02bf16acd07206c40fcbb2d85ce37e4639",
      "3a53e86afa9a8dcc7b5ec14f5414da8f5efe1ed2",
      "7d07cf95a246f2ed1380ebe249889929cf18a67a",
      "ed943e3da240ddf01629c0170d79f37e3019b907",
      "c17b1e8b3bfea4cfaa1414a853d31b9d3e50c6fc",
      "9c38c19e382866587d825afe5336dd9c76cfa02f",
      "247c90aabda047a6545774a33e55199fd378d5b5",
      "5737ab90d8e7a6c5fd9604bd9b8ec9bb6ebb036b",
      "66cedab15c294a206785ffc8e797dca66813c906",
      "606dec6967fe9bbfd97a582fa2b98bad4942cd42",
      "59cdf849049627e4c30f3bd866e3a7e03e893251",
      "ee7f867739a0d638997bb0f63b6ad18a38bd5be7",
      "1401b8a60021b4b0b8d3585a544d1d271400dc7a",
      "b65bee86a4d65a52796a2db19ab2c49d855a59fa",
      "ad4e281293237bdb8efbbd639ac823536815f42b",
      "8ef1095dd871bfff2fda61cfd62c15513d90839f",
      "03d61a33796234b8bae5ac38de9b26c1c5ed9e2f",
      "5647a88934fd6a1c23c919c636a30e17ff143ca6",
      null,
      "a4956112932bad3321cc2b0c00f8de9d2e391b13",
      "df2b0e26d0599ce3e70df8a9da02e51594e0e992",
      "37599b65fdad91714feca502c2ad3d3c69f71211",
      "18b9777e40850138eceb9ee7c72bd9b272abeca1",
      null,
      null,
      "71b8a4831d31f248413f539d44b75b20da3eec7c",
      "74d381155143ec50a2de65769f16e54708f886c1"
    ]
  },
  {
    "paperId": "cfb35f8c18fbc5baa453280ecd0aa8148bbba659",
    "title": "A Comprehensive Survey on Trustworthy Graph Neural Networks: Privacy, Robustness, Fairness, and Explainability",
    "abstract": "Graph neural networks (GNNs) have made rapid developments in the recent years. Due to their great ability in modeling graph-structured data, GNNs are vastly used in various applications, including high-stakes scenarios such as financial analysis, traffic predictions, and drug discovery. Despite their great potential in benefiting humans in the real world, recent study shows that GNNs can leak private information, are vulnerable to adversarial attacks, can inherit and magnify societal bias from training data and lack interpretability, which have risk of causing unintentional harm to the users and society. For example, existing works demonstrate that attackers can fool the GNNs to give the outcome they desire with unnoticeable perturbation on training graph. GNNs trained on social networks may embed the discrimination in their decision process, strengthening the undesirable societal bias. Consequently, trust-worthy GNNs in various aspects are emerging to prevent the harm from GNN models and increase the users\u2019 trust in GNNs. In this paper, we give a comprehensive survey of GNNs in the computational aspects of privacy, robustness, fairness, and explainability. For each aspect, we give the taxonomy of the related methods and formulate the general frameworks for the multiple categories of trustworthy GNNs. We also discuss the future research directions of each aspect and connections between these aspects to help achieve trustworthiness.",
    "citationCount": 144,
    "references": [
      "8c1147b144d20a604c19dbc188fa72503423203f",
      "fbe732b5ba20b1387e7e5ab232afe217530d108c",
      "807aed10ac89fe9bd782233164534eac7d85b516",
      "80c698688bb4488beaceaab5c64f701a946cb7ae",
      "d0cf009d078867258d0b446baec215aadf93dfe4",
      "3c40e8354176746226cfaed3603c8bc9db06c854",
      "530cc6baebee5ee9005ec2f5e8629764f43c0f02",
      "5b9c89f5b743916c95c88605f02ce78be7699941",
      "ec568050b74edfdb7e463200daf42ba36663505c",
      "211599bc961320d04067c583601c4465a73dd584",
      "02a6474812c0847def08d838570dcad3ef9ffdbd",
      "07808da6b32d464f66aac31297f070c15499b92b",
      "19e83a60ed705144729d312c854cd91086303243",
      "0a8f340f094da212dcb50f310e3bd5fb676e2454",
      "dc9b9c5a76df331409890eea0d01e3cf3459a526",
      "939a46ea4cd00964fd40a8b33a11d5a8de8b805c",
      "ab27a370d87617255455a05cb2d98c268b5fa06b",
      "0d8353b8b756d4453301650bbed2977e0d46ef1b",
      "feeec8c40d6d06421a20e97e8a0f433aea67c6e3",
      "c1176e7882bbe7104df44c27444bb557a34bd12b",
      "7caaafd5a3ee033c98e792c7ea5b699d005753d5",
      "7b8765ee955d4ea431bc7a52c5ad2aca8cc5a400",
      "bbd4287a43f6c1b94d40b673e0efaaac9659cc0f",
      "7026ec6c12f325aec884ff802812c3c80319f668",
      "7de413da6e0a00e14270cfaed2a31666e7c28747",
      "a4bd7e965edb65d73f975bece566c7eb03e09f71",
      "1b32b77718be22ca31c2a0dba709c815e19d4672",
      "4755b49e44a453666022ac47a0706802aed8ec94",
      "e76b919ed643c653398a679843efa91db11e1ff8",
      "502ac50ede5e05ba1540169553621c81562c2787",
      "3328a42bdc552fbfba5dbd5b6c16b8aff26fea18",
      "44c5b8c6fa185ccf557c18e59887e24ab52004ce",
      "4a59a09644eb8d9f9542df6acd343faea77b4586",
      "67f5bf98b3f6762dd0004f448f7472fd4f411bde",
      "ccc0c140abed03b094531b52f9587e334540aeaa",
      "76e6ba2d005710b47e2e99efdc295e6111e2d264",
      "a2aa6f3828c2d07381569310c70543f6624dbc7c",
      "f71a2e1c748588ebd29f08830441cc0e9fa39465",
      "9b165b8abab60c01cd1eaabf58fd427f0e9ec97d",
      "fa98db551fdec0a4c5c1beb25f8aa3df378b8c02",
      "bfd7f03c26cdf1324fe56700d7e15688f7b5b1d2",
      "cd551790992d16148fe2e5ff2cc76861195e2191",
      "e92fde4731f996d69abab06c9a2078513e4e11d0",
      "6eedb95160a41b8218ed2d37b3319ef6646f7c9d",
      "8b365890c0224f17fffb90bf33da46fccacd9331",
      "81963ebb78e67a2cf1fe54143882e6a26f40b820",
      "8711cea9e4af17b73427b55dc62fabaa7e576d88",
      "218223e91f55a1e0186f5b008b55f5e0fe350698",
      "9dba5a90206ea7c29cbe27923018f070bf8a0016",
      "a8c61aba48df8f54abd9d4616aaaa824fdc0c85b",
      "4886dcba109d330626a268510e4eaf4acccfb045",
      "16eb065c04c7a6d35aee5c5dd99ab779a6e8ec51",
      "9811afe1246d52f422545457b06c30bc4b63ae8d",
      "7c85ad5f11ef9afb4f568c33304d86105da956ce",
      "64918015af5da1554cd547de9401f620c14d1fa5",
      "94ce530e1fa3131672d8275c1b73c2ed2793a925",
      "ad2f92f1a6114b3cb9a1afea8cf9672a418d06f6",
      "6782087b3b5e78ffb37af952a6a03309e6be1743",
      "41a0d80b534defc52fc71c99e0fb70281027afc2",
      "2b1eae2cceb377cb9267b2c96294228d5e583136",
      "9abfa4d227a3a7d7d6dd81e662bf3544fcda3bf5",
      "8c2635a1a2e731d7bc9dc2c719b6caf4b85f23b8",
      "21b6b07688cf4531b2d7854064e2de5868e2ec4f",
      "e3a6220c4223407964b74fb8f312980b29ac609d",
      "123139463809b5acf98b95d4c8e958be334a32b5",
      "c194690171d1ed1a2cb7825c929c9bec1644b03b",
      "32842a656099e34bd68c41b2a90a2d635a4dbaf0",
      "6ae2967bb0a5e57cc545176120a4845576e068a3",
      "033f5eb9b4e2c8a95702f7ac49f5c0912188c7a1",
      "f29bb1e3f5e98a6887c2414a2036858a076a5915",
      "bd32e8dc7289b47e946b651208f622f4802ad7d1",
      "e04ec809a7812db1d6db34d6a972ab9ccd17d638",
      "48e3400c9e57d73dbffe49d33a7b3e703e288bca",
      "792a9914cbaacbab1ce2e5de9a7f5eee3afb9766",
      "7eaa067078c96b383f2f2e6f1543cd063c5d6d45",
      "d9f5ec342df97e060b527a8bc18ae4e97401f246",
      "1d5be44f756a986193767b57d5462eb2f4ee942b",
      "1943b862598fe27f302f05fb0a690b3a4a9fcbca",
      "9595c94cb8822f81afeffce9da9494a22ca89dcc",
      "76c124786ccf4263e6403a15a8e350ac28be4e65",
      "a8ae2d8232db04d88cf622e5fabd11da3163aa8f",
      "5f3044b037f4ab067ea6e488977c2b8e78b8257f",
      "c30c0092bf4eb8a44faec3fc60cdd5006276bcdc",
      "829e36b23f7b42e109f84b5b761052498b291962",
      "5cbe6d95b450de253292bcfcf303b424cb20ea90",
      "ae06bc1e8e67c27b89329ebcfe61b71625d853f6",
      "08257eb1faa19c29ddcc31d7d749c9bd262213c5",
      "435bc42450259a22cfba92b40217b8d26f4a7ed5",
      "0b33c9c2eec5e7a71e1c051ec76e601e76152146",
      "d3bd22701657706a8e6b01b2504a7c1922b0dc7e",
      "8749532d082cbd9f8c08357535a2164cd1f36d57",
      "b4fd73a95b4b102917589b36d4b9c73b9d120f86",
      "1b7f062ebe65cea14f3347028067736af785cf7d",
      "441068ef17c3332d4f0af6c146e37bd8748bb90e",
      "7a98a85f14853d9d34539e7020ed869394d48506",
      "3302081b8878de505b69900e22b8137c5d931be7",
      "00366d7fe89a87a13c711121637782a04edf50be",
      "d798ff8b0e155c75de642764dd621ccd0a95010a",
      "ad331b2035602c58221e9092920de0fd6ed2f629",
      "d88540fd4730330f1a823b90643d793f6ce00b41",
      "066de71946052e2945742d7bbb72e8855d8d13e1",
      "04faf433934486c41d082e8d75ccfe5dc2f69fef",
      "3bb1e0606742e469aa355a6af1edbc64ea934d82",
      "c09b6e62362988127f8d8a4243a0227bfd0770ca",
      "bbcfa13ced06dedc9c346e0bdf84d8b3abcbebee",
      "a9a4e8e631890a14257539948e1813b5214c60dd",
      "91fb815361fdbf80ff15ce4d783a41846bd99232",
      "73366d75289c5e37481639fb54fdee28a664e2b3",
      "ac86ad5cd25c496b785c5d8ab1417aa23728e86f",
      "2e5bcdf9c9f6dbd9a1f2e0e1a748da8081b79e87",
      "9e707dd89bba25a3dd22c96f43bd72b9b3ab94bb",
      "75c8466a0c1c3b9fe595efc83671984ef95bd679",
      "ff6a4a9a41b78c8b1fcab185db780266bbb06caf",
      "08cb7d416bcd1b1e4d6492a0cd0b01424abd9515",
      "7fd293b1984cac5900434ea796bbe74e05e6623a",
      "f3872ef3743b744736da813249745545a9c1877f",
      "b4a7b7e35a1f4fb0be14cedc8cdb6c4d4e8e6435",
      "011a1bbb4059b703d9b366468ef9effdb49f4df9",
      "aa9635e531de729d47c9f166c388cd5ff0feeaaf",
      "e4b1d7553020258d7e537e2cfa53865359389eac",
      "2e84aa3cbe8f8f6d6be9bccae21bc37e378c4321",
      "b0ca941fd8aa7345e8aba84c067a795f65c38382",
      "905e690b6a77856f3b28e12b90a2d17810e48e64",
      "c0a11a08231d8b9d123eada1eb4b87dabc925b0a",
      "2decfdfa62ef86013219ee281c75f38158e8cf73",
      "0ca7d8c3250d43d14fdde46bf6fc299654d861ef",
      "5e40edeb996ac1b5d019a47fe43adfbeb8bba654",
      "aac31850359dca92a9a84a3e74dcd0f98edd1e00",
      "43f2ad297941db230c089ba353efc3f281ab678c",
      "3aab8bea2ba6bd7f076e6f92a504a1e322ca64b8",
      "8819adc0f064d5293bd2b783a63e23f68109738a",
      "07912741c6c96e6ad5b2c2d6c6c3b2de5c8a271b",
      "c5ec35ddd47867e30df5050d4a6bfd598af3379e",
      "458757a205dc73e17683458d1c432e9bbff42e5c",
      "c6145aec02705d44bc81d79b8e514a2f0349d827",
      "b131050fafe21607b8171f83fdf233428a608ed4",
      "d2f73057b5c135235b2a908a3a9d2d68a025b0f5",
      "1f6383453876b0d1ab28c30c85c6d5d56c1b2a88",
      "a36dad07b501ac36ba1066c84af7e500442bfa85",
      "28e5ca24ab5178629a315bdba8f93ae94cd0322c",
      "0090023afc66cd2741568599057f4e82b566137c",
      "d8ad2ca5cbf4882e41bfc336c5c75de8c634869d",
      "61724a421569317ba470d48ebdd7316ab8e91b50",
      "ca01a20bce09396734d9375c1f8fe65aabbef609",
      "9594fcb7f238124823549784f7f18aba700ea4b5",
      "40e7cf66413c65a1ae500f4e4ed944a995064b16",
      "f5252075bb34666863cd01cc82c2d941d4ffe6c6",
      "758a29b97b416ef718daa8b4e6be672e13af1d2e",
      "fc8cf88624034d3fff9db8777a8eefdb09513b8a",
      "1bfad6fd818bd64db381791efd9252e0313dc100",
      "341880efaef452f631a4a5cd61bef5dae47741d7",
      "012e01b18192c2b825aa62daf93a9a2340db710a",
      "cb2d9b2f171da67f7b47ac3e0eb935a0de223354",
      "b25a30451518d372817967a72e125d638c85379e",
      "789a7069d1a2d02d784e4821685b216cc63e6ec8",
      "e5b38b8d3e9ae23a3ff31ec775ddcd6ba6182774",
      "a2c7d81e5956b38eb296b079ce4f116083d2bfd9",
      "6eaf8bfd156c1e482fe2b6d6a2b5c1d50c2c102f",
      "b1f6dc06c9e6f7b22c649d9681178a74e418a758",
      "5dfcf4e8c9757860498e3774ca81e72e2eb8d1a4",
      "8fb202cdcfec3b0e7ba0e3f88949d6d923b48b2d",
      "4be29e1cd866ab31f83f03723e2f307cdc1faab0",
      "88fba5e9dd36fec4f24e9575b8f8ae8053500107",
      "00b7efbf14a54cced4b9f19e663b70ffbd01324b",
      "6ee2ac6e7179fe30065fbf60f8eff329624b9e85",
      "00358a3f17821476d93461192b9229fe7d92bb3f",
      "26a0e0d17910c6676fcfa1cebe0cb7f5cd17080c",
      "df94f2fef0ea5bb73d9bb40b7b28f7a55cb1e1d2",
      "8f8542a6aa8c76e8a4441d1ca722e230aa5d6c9e",
      "6f5b1076ebacd30849d86e5f5787e3d43b65911f",
      "0349593412dbafbcec736da8c2547e94fa702607",
      "398d6f4432e6aa7acf21c0bbaaebac48998faad3",
      "62ccd99a65bfc7c735ae1f33b75b107665de95df",
      "61c425bdda0e053074e96c3e6761ff1d7e0dd469",
      "b9518627db25f05930e931f56497602363a75491",
      "48640ef269ffeb3e19c961de2eeca027a30841d8",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "c2d40522eaa5523d67a0de5e4098e7031fdccb3d",
      "4ad935b2062a98f85cd7690b50bf21002ea25418",
      "cf4bbe1e39c6f0f88aa69da2a95125b47de0ec7b",
      "8dc8f3e0127adc6985d4695e9b69d04717b2fde8",
      "ac225094aab9e7b629bc5b3343e026dea0200c70",
      "fbad1100682dd486eacc953152840b3e7447c83e",
      "5c0fe48ce1530d9757efca49d78709fc77caaf6c",
      "48405a8e7a669a74aebe577a8b9334776bb9adbb",
      "b7fcbb19c75ad65be522b64d5f4b23dbcb3b883b",
      "16f0c508aa54e26aa18e3b0f3c91b0c143c6a605",
      "7f77058976e2fe75e98280371962c43d98c98321",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "dbdf1081d0c311ff0e656730323296bf1ee7aeb3",
      "6c44f8e62d824bcda4f291c679a5518bbd4225f6",
      "87e85d5c83d7a84dd69f830b1465fee195e2e89e",
      "7901981d585789369a96b6c5f5a34987ed5472a7",
      "c657b3fc93a24349117bf87296ea2b9b780706cc",
      "2503dff90685857ce7295e37d0045e2eef41c8b8",
      "848aa2210061b6bab6f3dbe7df9c190bf1c79c27",
      "4c281ab9e305c8424d539782705f99125112fb34",
      "6baca6351dc55baac44f0416e74a7e0ba2bfd03e",
      "a9829d445b459cea05a8fd1a40bacbf0167decbc",
      "acd87843a451d18b4dc6474ddce1ae946429eaf1",
      "4eef0519f75911a2e132fac12427fa13bdb32a71",
      "e89dfa306723e8ef031765e9c44e5f6f94fd8fda",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "11222e4f5262c774bf9c006420eb647b951624b2",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "cd8a9914d50b0ac63315872530274d158d6aff09",
      "f302e136c41db5de1d624412f68c9174cf7ae8be",
      "d0ab11de3077490c80a08abd0fb8827bac84c454",
      "ec6d5e9f959aa2c10dff89faf97f1240610464b6",
      "e70b9a38fcf8373865dd6e7b45e45cca7ff2eaa9",
      "f0dcc9aa31dc9b31b836bcac1b140c8c94a2982d",
      "7fcb90f68529cbfab49f471b54719ded7528d0ef",
      "d42b11ce90c9c69a20ed015b73dc33e0e4100a7b",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "8ba7631515d5e7e0c451af1c4772507f41540a5e",
      "e9a986c8ff6c2f381d026fe014f6aaa865f34da7",
      "e1547ed94cadc8e6e0aa303ae10f078df7ffdab7",
      "d1dbf643447405984eeef098b1b320dee0b3b8a7",
      "c0883f5930a232a9c1ad601c978caede29155979",
      "7f357d16e25fb6ec30a9ee4c674c6622c17bae98",
      "276ebc620a8976026bd2d03582b9ecfa3738d43c",
      "86c37cd1109ce5b465116695b7705444a45185cf",
      "17a273bbd4448083b01b5a9389b3c37f5425aac0",
      "022cf7caf2395da170430fe72b3d28525a6d41e6",
      "8d35230fec724398bed3f5939e9fa6a94f55a785",
      "33af9298e5399269a12d4b9901492fe406af62b4",
      "bee044c8e8903fb67523c1f8c105ab4718600cdb",
      "0023582fde36430c7e3ae81611a14e558c8f4bae",
      "b56b1e0acd3301c925bb2b074fe3fb8e0dbf5379",
      "89147b52cfdf7d8f778763d04d845f7e1bb275ab",
      "8eb65221a5933546e03c2993ca9b9a762f1ceea4",
      "adaa0523a5c9d5f92aa2009a51226391d8e62380",
      "3d0bca994cf11e0e4cef6900f4f14072aed3915f",
      "1ad8410d0ded269af4a0116d8b38842a7549f0ae",
      "4e6238c8613b5b81f81552939bce33296aedfbfe",
      "43d2ed5c3c55c1100450cd74dc1031afa24d37b2",
      "8c23ea0ed7badd70a8e26dcea73f2d673cc0c74d",
      "e4ce10063cd25447dcde75c2d9ce327446ced952",
      "2d679de19dd1a04b49a45c42e32697e8779cde0c",
      "2a005868b79511cf8c924cd5990e2497527a0527",
      "ef77a8b0db638c675d032bd05dc3a012a2899da4",
      "88a25d062535c3d8ce456388dd2178ed68fad8f0",
      "cc6fafa81e631411f0bb0a8ca62d647f3c5f361d",
      "8a8f853c9604bbe068c686e7d38b2c7560c36a1b",
      "b7d0003e5ead4d52e13614670762583718945e9f",
      "d81b53882d265f81d914c80d2f78e6cd9ee7e250",
      "0404a19e7654e042ea868b0327079f3992546911",
      "4742859e6e27fe5eda18dbe14752ed6a4871d356",
      "ec658af42485a8502bc5886ffa259a5ccaadbf78",
      "82bd75aca443456bb85402b0db1c24d7c0db7929",
      "d45ed4ed1b03568c67cff5b4f021b94e023ead29",
      "42d073d1217719fc8708ba4a5162b3f2034baeed",
      "c68796f833a7151f0a63d1d1608dc902b4fdc9b6",
      null,
      "da2f07816a28d69a1b879969283a2693c0b88b2a",
      null,
      "b4b0bd9e532829500d6624b7890517e52b99bc8d"
    ]
  },
  {
    "paperId": "aafe1338caef4682069e92378f1190785ec24c2c",
    "title": "Breaking the Limits of Message Passing Graph Neural Networks",
    "abstract": "Since the Message Passing (Graph) Neural Networks (MPNNs) have a linear complexity with respect to the number of nodes when applied to sparse graphs, they have been widely implemented and still raise a lot of interest even though their theoretical expressive power is limited to the first order Weisfeiler-Lehman test (1-WL). In this paper, we show that if the graph convolution supports are designed in spectral-domain by a non-linear custom function of eigenvalues and masked with an arbitrary large receptive field, the MPNN is theoretically more powerful than the 1-WL test and experimentally as powerful as a 3-WL existing models, while remaining spatially localized. Moreover, by designing custom filter functions, outputs can have various frequency components that allow the convolution process to learn different relationships between a given input graph signal and its associated properties. So far, the best 3-WL equivalent graph neural networks have a computational complexity in $\\mathcal{O}(n^3)$ with memory usage in $\\mathcal{O}(n^2)$, consider non-local update mechanism and do not provide the spectral richness of output profile. The proposed method overcomes all these aforementioned problems and reaches state-of-the-art results in many downstream tasks.",
    "citationCount": 128,
    "references": [
      "aa1cda29362b9d670d602c7fc6964499d2a364bd",
      "3302081b8878de505b69900e22b8137c5d931be7",
      "e9ef895b56e5dee045af31e737d46c255194f4f2",
      "6360aaece0d6bf153183b9ecd075f42f7b127cc9",
      "83e89d56d0d0e1dfd8b52213e6cc2e191aaaf34b",
      "536da0e76290aea9cbe75c29bac096aeb45ef875",
      "33e31195ab6853dfb8b1d90b07da5755f9bf5de0",
      "583d9083d2fcc4678427e597cd41adaba9910c26",
      "15748c0437c3be2e464dfb6aa42d2ff5dbd5d7f7",
      "057b594c9e6ed45fc445a4dc45384117bdd15a3e",
      "d52961a91f03061c6732a69e292bd1e403e7f8b8",
      "c7fdb033ff15771e9bcea4336135eec171a595f3",
      "63a513832f56addb67be81a2fa399b233f3030fc",
      "7f5ea861a57e14796f033fd0f5580dbc34ff88f2",
      "69906b74ee369cd25522ec432ecbc601a77c9d87",
      "b7a6b7adafd01e939c9266083dfba9edea88846c",
      "cb4b3413c7048d1de2aed3b877aa694b5514a68c",
      "1ca9bce5d61e7b5b8c9347cdc0e57dc045c80911",
      "6ea57a2aea08ce0628c93f77bdc24c2f3e9cc6da",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "3a58efcc4558727cc5c131c44923635da4524f33",
      "a5fe578a6b9f51ce19263676e6395421fedc6d2d",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "dd19623ea952770b205f73bef70f1b4481b4dd86",
      "204e3073870fae3d05bcbc2f6a8e263d9b72e776",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "e24cdf73b3e7e590c2fe5ecac9ae8aa983801367",
      "af6f13eb3269f7031760ebe11ad559101f1f0de9",
      "a4bd825e9b985729cac9dafa1245c9d93cc50251",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "3997386f9a1842fde26b265f0e9323237602fa80",
      "39e223e6b5a6f8727e9f60b8b7c7720dc40a5dbc",
      "8e8152d46c8ff1070805096c214df7f389c57b80",
      "2ee19196a8680f80a37816710d6c514c06ea8901",
      "f22f6972e66bdd2e769fa64b0df0a13063c0c101",
      "d08a0eb7024dff5c4fabd58144a38031633d4e1a",
      "064c71e4bf43e49e3a7cefc29b570c60cbfcfc4f",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      "6a7c6e9feab24ccf51ee9e53cbc0b42b9b421a7d",
      null,
      null,
      "46758bb43541af6946ceaba761cf69d2b1039257"
    ]
  },
  {
    "paperId": "3b2f5884e8199544375ddcdb4fa58f44df0b1a7e",
    "title": "Be Confident! Towards Trustworthy Graph Neural Networks via Confidence Calibration",
    "abstract": "Despite Graph Neural Networks (GNNs) have achieved remarkable accuracy, whether the results are trustworthy is still unexplored. Previous studies suggest that many modern neural networks are over-confident on the predictions, however, surprisingly, we discover that GNNs are primarily in the opposite direction, i.e., GNNs are under-confident. Therefore, the confidence calibration for GNNs is highly desired. In this paper, we propose a novel trustworthy GNN model by designing a topology-aware post-hoc calibration function. Specifically, we first verify that the confidence distribution in a graph has homophily property, and this finding inspires us to design a calibration GNN model (CaGCN) to learn the calibration function. CaGCN is able to obtain a unique transformation from logits of GNNs to the calibrated confidence for each node, meanwhile, such transformation is able to preserve the order between classes, satisfying the accuracy-preserving property. Moreover, we apply the calibration GNN to self-training framework, showing that more trustworthy pseudo labels can be obtained with the calibrated confidence and further improve the performance. Extensive experiments demonstrate the effectiveness of our proposed model in terms of both calibration and accuracy.",
    "citationCount": 122,
    "references": [
      "0fa224f1de6fe38cdeae3cd40de5249475cddf60",
      "a21792db1c8d80c1d1f8525dab4959cc60b8e0ea",
      "fbc136c8c81cd89206dc0fcb54e16bd98df83b62",
      "0a69c8815536a657668e089e3281ff2e963d947a",
      "898178fa298635099da4ce5411564d837998b018",
      "00c2fd76b5d2167493ac7bfb4ccb8856ff45b0c0",
      "c9f6a0866670131774918418227e6b5e5af13570",
      "21e33bd0ad95ee1f79d8b778e693fd316cbb72d4",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "aa5a4433aa08834a69b4afb7917b1c7107a529a6",
      "29e12bc4e98eabc83ad49bc458ca98184d2d8b34",
      "3db5fcb595492dcd64663c00d56f004dfafa689c",
      "096033bd0d4bc867c7be1b8220d9afdc22c03cdc",
      "d4691aef27ae3c768b90c34ca5d8521d202eb47c",
      "4d945aff2375dda91c7b43ddb83303f73a4ebba9",
      "e49dca82bb4096dcd9a5560597f8ca64643b0090",
      "7e71eedb078181873a56f2adcfef9dddaeb95602",
      "ea5dd6a3d8f210d05e53a7b6fa5e16f1b115f693",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "ac225094aab9e7b629bc5b3343e026dea0200c70",
      "2bdf35c191cb4df4dcfb7fb18d6582cd032d1c40",
      "2fed2886d6de407ce4883294058726fa591d3153",
      "e4715a13f6364b1c81e64f247651c3d9e80b6808",
      "83b44a37ddf121e660c873e207c2909b79f23469",
      "36652428740cd30d245d55889f01a7fb04a91c93",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "2b76b6e766547b3c6dbc2785a084ec3b72cb760d",
      "d65ce2b8300541414bfe51d03906fca72e93523c",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "e86f71ca2948d17b003a5f068db1ecb2b77827f7",
      "8d115c3b2ee80e0754360a154a9369bc1658b607",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "43d2ed5c3c55c1100450cd74dc1031afa24d37b2",
      "eae3948747c9d051314c1f5851957b833aa83eca",
      "e41ba5dc12c79a64dfa905c0328f95976252ffe0",
      "aae7c875fc7531233c2a3ebefa31a33f1a0d7f49",
      "b885f5a44da16e46e01a6181ecdfc8fe0a592e51",
      "714ccf11943f34f5169d4ebfe83074dd1830614c",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      "b6b26564df790262abbe48fa18079d9610189b29",
      "81ff8885fd11af461fce05cf797ddf175664b305",
      "42e5ed832d4310ce4378c44d05570439df28a393",
      "feee6551179612b9691f021b583d8a99b81b9b86",
      null,
      null,
      null
    ]
  },
  {
    "paperId": "594dc362b4332ae661e3d71da17d097bb4a357dd",
    "title": "Knowledge-aware Graph Neural Networks with Label Smoothness Regularization for Recommender Systems",
    "abstract": "Knowledge graphs capture structured information and relations between a set of entities or items. As such knowledge graphs represent an attractive source of information that could help improve recommender systems. However, existing approaches in this domain rely on manual feature engineering and do not allow for an end-to-end training. Here we propose Knowledge-aware Graph Neural Networks with Label Smoothness regularization (KGNN-LS) to provide better recommendations. Conceptually, our approach computes user-specific item embeddings by first applying a trainable function that identifies important knowledge graph relationships for a given user. This way we transform the knowledge graph into a user-specific weighted graph and then apply a graph neural network to compute personalized item embeddings. To provide better inductive bias, we rely on label smoothness assumption, which posits that adjacent items in the knowledge graph are likely to have similar user relevance labels/scores. Label smoothness provides regularization over the edge weights and we prove that it is equivalent to a label propagation scheme on a graph. We also develop an efficient implementation that shows strong scalability with respect to the knowledge graph size. Experiments on four datasets show that our method outperforms state of the art baselines. KGNN-LS also achieves strong performance in cold-start scenarios where user-item interactions are sparse.",
    "citationCount": 554,
    "references": [
      "371c799bde8b162e7f8fa2b2a0a8cfb29765f89f",
      "814e7d3030441689b416a79fc697621902fd9d80",
      "4e810d6b04de4e657a4cda2f58296b01e91eae53",
      "a6a735f8e218f772e5b9dac411fa4abea87fdb9c",
      "0cfac458b176a1e81879aff4344c5278114cc171",
      "f4e5af510c63ecb84c4619b9fc12a2d26a3c8d40",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "76da7eab258081c257ebd87f7a559d44e31d8315",
      "b77b179522ac01b6903c2719d9b5d29c1efa652e",
      "848aa2210061b6bab6f3dbe7df9c190bf1c79c27",
      "e42bced78f8e92cda6021a82752c9c1284c6d262",
      "30321b036607a7936221235ea8ec7cf7c1627100",
      "18509bb590fee22ee1818d2f69ed07ba22efe5c8",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "c20fce1384e8569cb15ab40dd09e36b1088a14d0",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "fdc708aaa0d18c791f878ff2214201410fa52439",
      "ace1059fd85bbb8b41874a47a029bba7899124a5",
      "cd8a9914d50b0ac63315872530274d158d6aff09",
      "6eb6744a7b61476a39017e207ed55b332dd0627b",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "5e383584ccbc8b920eaf3cfce3869da646ff5550",
      "7e5a550cdcb59464a73bfdc54f541fc5e5636ea3",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "7c6de5a9e02a779e24504619050c6118f4eac181",
      "5d1bfeed240709725c78bc72ea40e55410b373dc",
      "65a442711000fcc1c0309106caa27a949c325566",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "ccb5f91752027f402d6165d9e308f140a5bc4636",
      "2582ab7c70c9e7fcb84545944eba8f3a7f253248",
      "e50f4d3316d13841c287dcdf5479d7820d593571",
      "d4bbcc842f22547eaf5884251eaa68251895dccb",
      "cf6f83fcce274606bf0264c59d1c78a30c9c9d18",
      "f68ba8fe9fc9f7d8b7eb8c3d4a6d1046ee345e4b",
      "342fe6a6338e73fd4d34c4f37f41e3bbad274dd2",
      "eeac2a1305d8fe8a25fe4e1ebcc525f071aa94fa",
      "aba50e02e6a798e69c5c7419bca38ddaaf1c4b90",
      "46770a8e7e2af28f5253e5961f709be74e34c1f6",
      "125842668eab7decac136db8a59d392dc5e4e395",
      "e768a0498b7da29bf827edecf222dd284644bb48",
      "3bc4736f9b8512043ed47357a81f26b93a1204b6"
    ]
  },
  {
    "paperId": "5ab6888c67d2877f15c2b065da4216538835d141",
    "title": "Cell clustering for spatial transcriptomics data with graph neural networks",
    "abstract": null,
    "citationCount": 127,
    "references": []
  },
  {
    "paperId": "27d5be9322d71b6fd2faa8a6b87250127a12c0cf",
    "title": "Data Augmentation for Graph Neural Networks",
    "abstract": "Data augmentation has been widely used to improve generalizability of machine learning models. However, comparatively little work studies data augmentation for graphs. This is largely due to the complex, non-Euclidean structure of graphs, which limits possible manipulation operations. Augmentation operations commonly used in vision and language have no analogs for graphs. Our work studies graph data augmentation for graph neural networks (GNNs) in the context of improving semi-supervised node-classification. We discuss practical and theoretical motivations, considerations and strategies for graph data augmentation. Our work shows that neural edge predictors can effectively encode class-homophilic structure to promote intra-class edges and demote inter-class edges in given graph structure, and our main contribution introduces the GAug graph data augmentation framework, which leverages these insights to improve performance in GNN-based node classification via edge prediction. Extensive experiments on multiple benchmarks show that augmentation via GAug improves performance across GNN architectures and datasets.",
    "citationCount": 419,
    "references": [
      "efda1115c0d920c6afce76b181cab0ac2130d11a",
      "7c882a945b51825417bafde8ab05163b443a1525",
      "460da93fbe9e95ec45cda1b11f2014774dc8d9ee",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "6800f42727a8211742d2fcf880b9a589e8f2916e",
      "1ecbaf7a2cd3059e07261e72a1195a7c70b3d664",
      "94194703e83b5447f519fd8bcbb903916e05aaf9",
      "0a6a9e6d4e3efd7c69357769305b70097281655f",
      "e3d662bbd0e5539fe22a85f3518f960595b9914e",
      "4cdf2fad22afc865999747336c7399fe422e6e8e",
      "3813b88a4ec3c63919df47e9694b577f4691f7e5",
      "6a8c37418ac664f0f7199713890f3f1cf85d3c06",
      "21de3a36cb51adc205fad8a1d3d69118891dc3dd",
      "60f7f9161eb88c71c893969fb0d6586f70be99fc",
      "0feea94f89d395436bf41bd10c797447eecbc128",
      "bb0ba74be5248c3ec684e164b4c2cb92f04c1c0b",
      "4e7dd1e79f0f13650b2612325e6ba8d206dc04fb",
      "84782fe9e12f13490ba862f206191b18c2f1627b",
      "30b38ca8151bbd5a5ff45bce94297d1248ff58b5",
      "3ed37cc1d35ddbb7e4caacd7fc30368424544b15",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "67b945a9f85a17819e557ced41dc6ebc5a50d9cd",
      "d5aefe86b1ba8c773a6bd0e84812ace161b8c0db",
      "5aea95e1ae78a66474051a330ded374e199b658c",
      "6c96c2d4a3fbd572fef2d59cb856521ee1746789",
      "2503dff90685857ce7295e37d0045e2eef41c8b8",
      "51a2bc2e8fb8ed47a085df33dd965e57335080a0",
      "1f6c3f1def78919f06efe050e9403e85d5fa3ac9",
      "fe9cd683c3b8ebdfd8efd1109a857cdbf9edc364",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "7e4b638e028498e900747b600f46cd723f1f231e",
      "2788a2461ed0067e2f7aaa63c449a24a237ec341",
      "eb35fdc11a325f21a8ce0ca65058f7480a2fc91f",
      "0d57ba12a6d958e178d83be4c84513f7e42b24e5",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "b5007972c6f5a2294f83357c73e12664dd7c85b3",
      "f2e15f3f2c3d4f7e8cf8445435e40d65d828ffd5",
      "e08038b14165536c52ffe950d90d0f43be9c8f15",
      "44044556dae0e21cab058c18f704b15d33bd17c5",
      "f09f7888aa5aeaf88a2a44aea768d9a8747e97d2",
      "54906484f42e871f7c47bbfe784a358b1448231f",
      "29e944711a354c396fad71936f536e83025b6ce0",
      "515a21e90117941150923e559729c59f5fdade1c",
      "44e739a730ea939e502a8fe30cb2ef454ab24191",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "d0b7c8828f0fca4dd901674e8fb5bd464a187664",
      "3a29aa4eff48624752c07059a44d3288a678c8ab",
      "c41eb895616e453dcba1a70c9b942c5063cc656c",
      "7c6de5a9e02a779e24504619050c6118f4eac181",
      "f3b96ef2dc1fc5e14982f1b963db8db6a54183bb",
      "51a55df1f023571a7e07e338ee45a3e3d66ef73e",
      "0d13dae976c95853039395d8544b7cd31987783f",
      "e49ff72d420c8d72e62a9353e3abc053445e59bd",
      "0834e74304b547c9354b6d7da6fa78ef47a48fa8",
      "fff114cbba4f3ba900f33da574283e3de7f26c83",
      "5e925a9f1e20df61d1e860a7aa71894b35a1c186",
      "62c76ca0b2790c34e85ba1cce09d47be317c7235",
      "7c297b36f8ad53a1e387613336886a466e3f0d01",
      "c36991759325bedd19f69264f72d1cbf59a6158c",
      "81a4fd3004df0eb05d6c1cef96ad33d5407820df",
      "c68796f833a7151f0a63d1d1608dc902b4fdc9b6",
      "34f25a8704614163c4095b3ee2fc969b60de4698",
      "8cb44f06586f609a29d9b496cc752ec01475dffe",
      null
    ]
  },
  {
    "paperId": "b2ea3564e8d763a00d733a3dc44f85550a995fd0",
    "title": "Graph Neural Networks: Foundation, Frontiers and Applications",
    "abstract": "The field of graph neural networks (GNNs) has seen rapid and incredible strides over the recent years. Graph neural networks, also known as deep learning on graphs, graph representation learning, or geometric deep learning, have become one of the fastest-growing research topics in machine learning, especially deep learning. This wave of research at the intersection of graph theory and deep learning has also influenced other fields of science, including recommendation systems, computer vision, natural language processing, inductive logic programming, program synthesis, software mining, automated planning, cybersecurity, and intelligent transportation. However, as the field rapidly grows, it has been extremely challenging to gain a global perspective of the developments of GNNs. Therefore, we feel the urgency to bridge the above gap and have a comprehensive tutorial on this fast-growing yet challenging topic. This tutorial of Graph Neural Networks (GNNs): Foundation, Frontiers and Applications will cover a broad range of topics in graph neural networks, by reviewing and introducing the fundamental concepts and algorithms of GNNs, new research frontiers of GNNs, and broad and emerging applications with GNNs. In addition, rich tutorial materials will be included and introduced to help the audience gain a systematic understanding by using our recently published book-Graph Neural Networks (GNN): Foundation, Frontiers, and Applications [12], which can easily be accessed at https://graph-neural-networks.github.io/index.html.",
    "citationCount": 165,
    "references": []
  },
  {
    "paperId": "24b2aed0f130e5278325b5055711de44d247460e",
    "title": "Debiasing Graph Neural Networks via Learning Disentangled Causal Substructure",
    "abstract": "Most Graph Neural Networks (GNNs) predict the labels of unseen graphs by learning the correlation between the input graphs and labels. However, by presenting a graph classification investigation on the training graphs with severe bias, surprisingly, we discover that GNNs always tend to explore the spurious correlations to make decision, even if the causal correlation always exists. This implies that existing GNNs trained on such biased datasets will suffer from poor generalization capability. By analyzing this problem in a causal view, we find that disentangling and decorrelating the causal and bias latent variables from the biased graphs are both crucial for debiasing. Inspiring by this, we propose a general disentangled GNN framework to learn the causal substructure and bias substructure, respectively. Particularly, we design a parameterized edge mask generator to explicitly split the input graph into causal and bias subgraphs. Then two GNN modules supervised by causal/bias-aware loss functions respectively are trained to encode causal and bias subgraphs into their corresponding representations. With the disentangled representations, we synthesize the counterfactual unbiased training samples to further decorrelate causal and bias variables. Moreover, to better benchmark the severe bias problem, we construct three new graph datasets, which have controllable bias degrees and are easier to visualize and explain. Experimental results well demonstrate that our approach achieves superior generalization performance over existing baselines. Furthermore, owing to the learned edge mask, the proposed model has appealing interpretability and transferability. Code and data are available at: https://github.com/googlebaba/DisC.",
    "citationCount": 97,
    "references": [
      "4247f45a5730e3bda5836e2bc7941e30f5b91cb7",
      "c559fd26624401e8bf1586c1f08e8de560b41a21",
      "bd15a322c20f891f38e247bd5ed6e9d2f0b637eb",
      "a887fcb4f2ecd323cfdf9c9b10d1445be06dcf75",
      "908b239c33990760d7b9442cdf85d16b0d999782",
      "4755b49e44a453666022ac47a0706802aed8ec94",
      "054f789db0e32ba2c6bda1d0029f35ea4b5bff2c",
      "93f9a75dc212ce2180b295b5d3feae112bfb5c41",
      "86c4bb73bcc10a17faee13034a1742008cb001df",
      "123139463809b5acf98b95d4c8e958be334a32b5",
      "11b9f4729c8e355dec7122993076f6e2788c03c4",
      "bb681868f002199ac29fef0102173e61fc56825d",
      "c540cc769ea14ad3f844ee28542949fec03cc143",
      "d9f5ec342df97e060b527a8bc18ae4e97401f246",
      "2db8bce923bdcfcd3957d2622f2d779cd10c425b",
      "a8ae2d8232db04d88cf622e5fabd11da3163aa8f",
      "1d81e7f428fea2b2e15ee3a96fe843ca603acc4c",
      "c9f6a0866670131774918418227e6b5e5af13570",
      "597bd2e45427563cdf025e53a3239006aa364cfc",
      "5d0e2635a1ebe2c9347529975bc876d4286c9ab7",
      "c9a5255551c0a6f7a1b045eb93d705b09ecd936a",
      "1b04936c2599e59b120f743fbb30df2eed3fd782",
      "b35d5ea7cc9fe30fa1f15a7d66e1fc853af80196",
      "ec570b827cf0cd132da7ebd37537df4f0bb7f877",
      "025ea689e6ab3b544101df17233e87536a1e578a",
      "ab9cc2c6a8d35d7a145cf608ff9dd7af87213253",
      "962cf7797614f2882d2084eb6cb56928e981bc26",
      "01cf1d83b7a4983001a50ec274043f53783ee94e",
      "f6e6c948a2074e38e0a4e9099c0f63773c6013dd",
      "e91dca6e99f2d392953524986f2125be2008d9fc",
      "49b64383fe36268410c430352637ed23b16820c5",
      "00358a3f17821476d93461192b9229fe7d92bb3f",
      "b79fe48ae523dc66185aa04df2dac7041afa8683",
      "43054544c4ff2e25513de8b1a655593b8ff89338",
      "62ed9bf1d83c8db1f9cbf92ea2f57ea90ef683d9",
      "0f50b7483f1b200ebf88c4dd7698de986399a0f3",
      "96b32b204a62777bef66eea595de2c47b4e9d6e9",
      "59d502851cd20f28af03eef1d15dc83d3a7bb300",
      "d18b48f77eb5c517a6d2c1fa434d2952a1b0a825",
      "1e1855ca80e8ac3de0e169871f320416902e9ad1",
      "d81fc968196e06ccafd7ea4c008b13e1cad1be64",
      "83b44a37ddf121e660c873e207c2909b79f23469",
      "33998aff64ce51df8dee45989cdca4b6b1329ec4",
      "f9c602cc436a9ea2f9e7db48c77d924e09ce3c32",
      "6b7d6e6416343b2a122f8416e69059ce919026ef",
      "36eff562f65125511b5dfab68ce7f7a943c27478",
      "ee84e0a410b084864bd1919e228b9323de7fd913",
      "a6cb366736791bcccc5c8639de5a8f9636bf87e8",
      "973eec968c0686c6722e625d58aa08be8e2a0563",
      "68c1112480798d6d184853512d5c32c345741fc0",
      "3efd851140aa28e95221b55fcc5659eea97b172d",
      null,
      null,
      null,
      null,
      null,
      null,
      null,
      null
    ]
  },
  {
    "paperId": "6a0cbf943183a6751ff438c16ad75434b4cf47da",
    "title": "A New Perspective on \"How Graph Neural Networks Go Beyond Weisfeiler-Lehman?\"",
    "abstract": null,
    "citationCount": 97,
    "references": []
  }
]